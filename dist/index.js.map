{"version":3,"file":"index.js","sources":["../lib/utils/uiAdapters.js","../lib/utils/jsonUtils.js","../lib/components/JsonToFields.jsx","../lib/components/JsonToTable.jsx"],"sourcesContent":["// UI Library Adapters\n// This file provides adapters for different UI libraries\n\nexport const getUIComponents = (uiLibrary = 'chakra') => {\n  // All UI libraries use the same HTML elements as base\n  // The styling is handled through classes and props\n  // eslint-disable-next-line no-unused-vars\n  // const _unused = uiLibrary;\n  return {\n    Container: 'div',\n    Box: 'div',\n    Button: 'button',\n    Input: 'input',\n    Select: 'select',\n    Textarea: 'textarea',\n    Table: 'table',\n    Thead: 'thead',\n    Tbody: 'tbody',\n    Tr: 'tr',\n    Th: 'th',\n    Td: 'td',\n    Text: 'span',\n    Heading: 'h2',\n    Stack: 'div',\n    HStack: 'div',\n    VStack: 'div',\n    Card: 'div',\n    Alert: 'div',\n    Badge: 'span',\n    Grid: 'div',\n    GridItem: 'div',\n    Flex: 'div',\n    Label: 'label'\n  };\n};\n\nexport const getUIClasses = (uiLibrary = 'chakra', component, variant = 'default') => {\n  const classMap = {\n    tailwind: {\n      Container: 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n      Box: 'block',\n      Button: {\n        default: 'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n        secondary: 'inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'\n      },\n      Input: {\n        default: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n        checkbox: 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded'\n      },\n      Select: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n      Textarea: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm resize-vertical',\n      Table: 'min-w-full divide-y divide-gray-200',\n      Thead: 'bg-gray-50',\n      Tbody: 'bg-white divide-y divide-gray-200',\n      Tr: 'hover:bg-gray-50',\n      Th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider',\n      Td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-900',\n      Text: 'text-gray-900',\n      Heading: 'text-2xl font-bold text-gray-900 mb-4',\n      Stack: 'space-y-4',\n      HStack: 'flex space-x-4 items-center',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'bg-white overflow-hidden shadow rounded-lg p-6',\n      Alert: {\n        error: 'bg-red-50 border border-red-200 rounded-md p-4 text-red-800',\n        success: 'bg-green-50 border border-green-200 rounded-md p-4 text-green-800',\n        warning: 'bg-yellow-50 border border-yellow-200 rounded-md p-4 text-yellow-800',\n        info: 'bg-blue-50 border border-blue-200 rounded-md p-4 text-blue-800'\n      },\n      Badge: 'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'block text-sm font-medium text-gray-700'\n    },\n    shadcn: {\n      Container: 'container mx-auto px-4',\n      Box: 'block',\n      Button: {\n        default: 'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2',\n        secondary: 'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2'\n      },\n      Input: {\n        default: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        checkbox: 'h-4 w-4 rounded border border-primary text-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n      },\n      Select: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Textarea: 'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Table: 'w-full caption-bottom text-sm',\n      Thead: '[&_tr]:border-b',\n      Tbody: '[&_tr:last-child]:border-0',\n      Tr: 'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      Th: 'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      Td: 'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n      Text: 'text-sm text-muted-foreground',\n      Heading: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      Stack: 'flex flex-col space-y-4',\n      HStack: 'flex space-x-4',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'rounded-lg border bg-card text-card-foreground shadow-sm',\n      Alert: {\n        error: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        success: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        warning: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        info: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground'\n      },\n      Badge: 'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n    }\n  };\n\n  if (uiLibrary === 'chakra') {\n    return ''; // Chakra UI uses props, not classes\n  }\n\n  const libraryClasses = classMap[uiLibrary];\n  if (!libraryClasses || !libraryClasses[component]) {\n    return '';\n  }\n\n  const componentClasses = libraryClasses[component];\n  if (typeof componentClasses === 'object') {\n    return componentClasses[variant] || componentClasses.default || '';\n  }\n\n  return componentClasses;\n};\n","/**\n * Utility functions for JSON parsing and object manipulation\n */\n\n/**\n * Flatten nested objects into dot-notation keys\n * @param {Object} obj - Object to flatten\n * @param {string} prefix - Key prefix for nested properties\n * @returns {Object} Flattened object\n */\nexport const flattenObject = (obj, prefix = '') => {\n  let flattened = {};\n  \n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = prefix ? `${prefix}.${key}` : key;\n      \n      if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(flattened, flattenObject(obj[key], newKey));\n      } else {\n        flattened[newKey] = obj[key];\n      }\n    }\n  }\n  \n  return flattened;\n};\n\n/**\n * Convert flattened object back to nested structure\n * @param {Object} flat - Flattened object with dot-notation keys\n * @returns {Object} Nested object\n */\nexport const unflattenObject = (flat) => {\n  const result = {};\n  \n  for (let key in flat) {\n    const keys = key.split('.');\n    let current = result;\n    \n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!current[keys[i]]) {\n        current[keys[i]] = {};\n      }\n      current = current[keys[i]];\n    }\n    \n    current[keys[keys.length - 1]] = flat[key];\n  }\n  \n  return result;\n};\n\n/**\n * Determine input type based on value and optional field configuration\n * @param {any} value - Value to check\n * @param {string} key - Field key/name\n * @param {Object} fieldConfig - Optional field configuration override\n * @returns {Object} Field type configuration\n */\nexport const getInputType = (value, key = '', fieldConfig = {}) => {\n  // 1. Check explicit field configuration first\n  if (fieldConfig[key]) {\n    return { type: fieldConfig[key].type, ...fieldConfig[key] };\n  }\n  \n  // 2. Basic type detection\n  if (typeof value === 'boolean') return { type: 'checkbox' };\n  if (typeof value === 'number') return { type: 'number' };\n  if (Array.isArray(value)) return { type: 'array', items: value };\n  if (typeof value === 'object' && value !== null) return { type: 'object' };\n  \n  // 3. Enhanced string analysis\n  if (typeof value === 'string') {\n    // Long text detection\n    if (value.length > 100) return { type: 'textarea', rows: 4 };\n    \n    // Email detection\n    if (value.includes('@') || key.toLowerCase().includes('email')) {\n      return { type: 'email' };\n    }\n    \n    // URL detection\n    if (value.startsWith('http') || key.toLowerCase().includes('url')) {\n      return { type: 'url' };\n    }\n    \n    // Date detection\n    if (value.match(/^\\d{4}-\\d{2}-\\d{2}$/) || key.toLowerCase().includes('date')) {\n      return { type: 'date' };\n    }\n    \n    // Password detection\n    if (key.toLowerCase().includes('password')) {\n      return { type: 'password' };\n    }\n  }\n  \n  // 4. Fallback to text\n  return { type: 'text' };\n};\n\n/**\n * Parse JSON string safely\n * @param {string} jsonString - JSON string to parse\n * @returns {Object} Parsed object or error\n */\nexport const parseJsonSafely = (jsonString) => {\n  try {\n    const parsed = JSON.parse(jsonString);\n    return { success: true, data: parsed };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\n/**\n * Format JSON string with proper indentation\n * @param {any} obj - Object to stringify\n * @param {number} spaces - Number of spaces for indentation\n * @returns {string} Formatted JSON string\n */\nexport const formatJson = (obj, spaces = 2) => {\n  return JSON.stringify(obj, null, spaces);\n};\n\n/**\n * Get nested level from key\n * @param {string} key - Dot-notation key\n * @returns {number} Nesting level\n */\nexport const getNestedLevel = (key) => {\n  return key.split('.').length - 1;\n};\n\n/**\n * Get display name from key\n * @param {string} key - Dot-notation key\n * @returns {string} Display name\n */\nexport const getDisplayName = (key) => {\n  return key\n    .split('.')\n    .pop()\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters\n    .replace(/[_-]/g, ' ') // Replace underscores and hyphens with spaces\n    .replace(/\\b\\w/g, l => l.toUpperCase()) // Capitalize first letter of each word\n    .trim();\n};\n","import React, { useState, useEffect } from 'react';\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters';\nimport { flattenObject, unflattenObject, getInputType, parseJsonSafely, getDisplayName } from '../utils/jsonUtils';\n\n/**\n * JsonToFields Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n * @param {boolean} props.showJsonInput - Whether to show JSON input textarea\n * @param {number} props.columns - Number of columns for form layout (default: 1)\n * @param {Object} props.fieldConfig - Field configuration for custom input types\n */\nconst JsonToFields = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  showJsonInput = true,\n  columns = 1,\n  fieldConfig = {},\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson);\n  const [formData, setFormData] = useState({});\n  const [originalFormData, setOriginalFormData] = useState({});\n  const [, setParsedJson] = useState(null);\n  const [error, setError] = useState('');\n\n  const UI = getUIComponents(uiLibrary);\n\n\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson);\n      parseJson(initialJson);\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('');\n      setFormData({});\n      setOriginalFormData({});\n      setParsedJson(null);\n      setError('');\n    }\n  }, [initialJson]); // parseJson is stable, no need to include\n\n  const parseJson = (jsonString = jsonInput) => {\n    const result = parseJsonSafely(jsonString);\n    \n    if (result.success) {\n      setParsedJson(result.data);\n      const flattened = flattenObject(result.data);\n      setFormData(flattened);\n      setOriginalFormData({ ...flattened });\n      setError('');\n    } else {\n      setError(result.error);\n      setParsedJson(null);\n      setFormData({});\n      setOriginalFormData({});\n    }\n  };\n\n  const handleFieldChange = (key, value) => {\n    const newFormData = {\n      ...formData,\n      [key]: value\n    };\n    setFormData(newFormData);\n    \n    if (onFieldChange) {\n      const nestedData = unflattenObject(newFormData);\n      onFieldChange(key, value, nestedData);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave) {\n      const nestedData = unflattenObject(formData);\n      onSave(nestedData, formData);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData({ ...originalFormData });\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n\n\n  const renderFormField = (key, value) => {\n    const fieldTypeConfig = getInputType(value, key, fieldConfig);\n    const displayName = getDisplayName(key);\n\n    // Handle different field types based on configuration\n    switch (fieldTypeConfig.type) {\n      case 'checkbox':\n        return renderCheckboxField(key, value, displayName, fieldTypeConfig);\n      case 'select':\n        return renderSelectField(key, value, displayName, fieldTypeConfig);\n      case 'multi-select':\n        return renderMultiSelectField(key, value, displayName, fieldTypeConfig);\n      case 'textarea':\n        return renderTextareaField(key, value, displayName, fieldTypeConfig);\n      case 'email':\n      case 'url':\n      case 'date':\n      case 'password':\n        return renderSpecialInputField(key, value, displayName, fieldTypeConfig);\n      case 'number':\n        return renderNumberField(key, value, displayName, fieldTypeConfig);\n      case 'array':\n        return renderArrayField(key, value, displayName, fieldTypeConfig);\n      case 'object':\n        return renderObjectField(key, value, displayName, fieldTypeConfig);\n      default:\n        return renderTextInputField(key, value, displayName, fieldTypeConfig);\n    }\n  };\n\n  // Checkbox field renderer\n  const renderCheckboxField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer', ...customStyles.label }}\n        >\n          <input\n            type=\"checkbox\"\n            checked={formData[key] || false}\n            onChange={(e) => handleFieldChange(key, e.target.checked)}\n            className={getUIClasses(uiLibrary, 'Input', 'checkbox')}\n            style={customStyles.checkbox}\n          />\n          <UI.Text \n            className={getUIClasses(uiLibrary, 'Text')}\n            style={{ fontWeight: '500', ...customStyles.fieldLabel }}\n          >\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n      </UI.Box>\n    );\n  };\n\n  // Select field renderer\n  const renderSelectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Select\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Select')}\n          style={{ width: '100%', ...customStyles.select }}\n        >\n          <option value=\"\">Select {displayName}</option>\n          {fieldTypeConfig.options?.map(option => (\n            <option key={option} value={option}>{option}</option>\n          ))}\n        </UI.Select>\n      </UI.Box>\n    );\n  };\n\n  // Multi-select field renderer\n  const renderMultiSelectField = (key, value, displayName, fieldTypeConfig) => {\n    const selectedValues = Array.isArray(formData[key]) ? formData[key] : [];\n    \n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n          {fieldTypeConfig.options?.map(option => (\n            <UI.Label key={option} style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedValues.includes(option)}\n                onChange={(e) => {\n                  const newValues = e.target.checked \n                    ? [...selectedValues, option]\n                    : selectedValues.filter(v => v !== option);\n                  handleFieldChange(key, newValues);\n                }}\n                style={customStyles.checkbox}\n              />\n              <UI.Text style={{ fontSize: '14px', ...customStyles.text }}>{option}</UI.Text>\n            </UI.Label>\n          ))}\n        </UI.Box>\n      </UI.Box>\n    );\n  };\n\n  // Textarea field renderer\n  const renderTextareaField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Textarea\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{ \n            width: '100%',\n            minHeight: `${(fieldTypeConfig.rows || 4) * 1.5}rem`,\n            ...customStyles.textarea \n          }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Special input field renderer (email, url, date, password)\n  const renderSpecialInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type={fieldTypeConfig.type}\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Number field renderer\n  const renderNumberField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"number\"\n          value={formData[key] || ''}\n          onChange={(e) => {\n            const val = parseFloat(e.target.value) || 0;\n            handleFieldChange(key, val);\n          }}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Array field renderer\n  const renderArrayField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName} (Array)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value);\n              handleFieldChange(key, parsed);\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value);\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{ \n            fontFamily: 'monospace', \n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea \n          }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Object field renderer\n  const renderObjectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName} (Object)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value);\n              handleFieldChange(key, parsed);\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value);\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{ \n            fontFamily: 'monospace', \n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea \n          }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Text input field renderer (default)\n  const renderTextInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"text\"\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Function to render form fields in columns\n  const renderFormFields = () => {\n    const formEntries = Object.entries(formData);\n    \n    if (columns <= 1) {\n      // Single column layout (default)\n      return (\n        <UI.VStack \n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {formEntries.map(([key, value]) => renderFormField(key, value))}\n        </UI.VStack>\n      );\n    }\n\n    // Multi-column layout\n    const fieldsPerColumn = Math.ceil(formEntries.length / columns);\n    const columnGroups = [];\n    \n    for (let i = 0; i < columns; i++) {\n      const startIndex = i * fieldsPerColumn;\n      const endIndex = Math.min(startIndex + fieldsPerColumn, formEntries.length);\n      columnGroups.push(formEntries.slice(startIndex, endIndex));\n    }\n\n    const gridStyles = {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gap: '2rem',\n      width: '100%',\n      ...customStyles.formGrid\n    };\n\n    return (\n      <UI.Box \n        className={getUIClasses(uiLibrary, 'Box')}\n        style={gridStyles}\n      >\n        {columnGroups.map((columnFields, columnIndex) => (\n          <UI.VStack \n            key={columnIndex}\n            className={getUIClasses(uiLibrary, 'VStack')}\n            style={{ gap: '1rem', ...customStyles.formColumn }}\n          >\n            {columnFields.map(([key, value]) => renderFormField(key, value))}\n          </UI.VStack>\n        ))}\n      </UI.Box>\n    );\n  };\n\n  return (\n    <UI.Container \n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack \n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n\n\n        {showJsonInput && (\n          <>\n            <UI.Box \n              className={getUIClasses(uiLibrary, 'Box')}\n              style={{ width: '100%', ...customStyles.inputContainer }}\n            >\n              <UI.Textarea\n                value={jsonInput}\n                onChange={(e) => setJsonInput(e.target.value)}\n                placeholder=\"Paste your JSON data here...\"\n                className={getUIClasses(uiLibrary, 'Textarea')}\n                style={{ \n                  minHeight: '150px', \n                  fontFamily: 'monospace',\n                  ...customStyles.textarea \n                }}\n              />\n            </UI.Box>\n\n\n          </>\n        )}\n\n        {error && (\n          <UI.Alert \n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {Object.keys(formData).length > 0 && (\n          <UI.Card \n            className={getUIClasses(uiLibrary, 'Card')}\n            style={{ width: '100%', padding: '1rem', ...customStyles.formCard }}\n          >\n            {renderFormFields()}\n          </UI.Card>\n        )}\n\n        {showControls && Object.keys(formData).length > 0 && (\n          <UI.HStack \n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  );\n};\n\nexport default JsonToFields;\n","import React, { useState, useEffect } from 'react';\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters';\nimport { getDisplayName } from '../utils/jsonUtils';\n\n/**\n * JsonToTable Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n */\nconst JsonToTable = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson);\n  const [tableData, setTableData] = useState(null);\n  const [error, setError] = useState('');\n  const [editableData, setEditableData] = useState(null);\n\n  const UI = getUIComponents(uiLibrary);\n\n\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson);\n      parseJson(initialJson);\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('');\n      setTableData(null);\n      setEditableData(null);\n      setError('');\n    }\n  }, [initialJson]); // parseJson is stable, no need to include\n\n  const parseJson = (jsonString = jsonInput) => {\n    setError('');\n    setTableData(null);\n    \n    if (!jsonString.trim()) {\n      setError('Please enter some JSON data');\n      return;\n    }\n\n    try {\n      const parsed = JSON.parse(jsonString);\n      \n      if (Array.isArray(parsed)) {\n        if (parsed.length === 0) {\n          setError('The JSON array is empty');\n          return;\n        }\n        setTableData(parsed);\n        setEditableData([...parsed]);\n      } else if (typeof parsed === 'object' && parsed !== null) {\n        const arrayData = [parsed];\n        setTableData(arrayData);\n        setEditableData([...arrayData]);\n      } else {\n        setError('JSON must be an object or array of objects');\n        return;\n      }\n    } catch (err) {\n      setError(`Invalid JSON: ${err.message}`);\n    }\n  };\n\n  const handleCellEdit = (rowIndex, key, value) => {\n    const newData = [...editableData];\n    newData[rowIndex][key] = value;\n    setEditableData(newData);\n    \n    if (onFieldChange) {\n      onFieldChange(key, value, newData);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave && editableData) {\n      const flatData = editableData.map(row => ({ ...row }));\n      onSave(editableData, flatData);\n    }\n  };\n\n  const handleCancel = () => {\n    if (tableData) {\n      setEditableData([...tableData]);\n    }\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n\n\n  const getColumns = () => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const allKeys = new Set();\n    tableData.forEach(row => {\n      Object.keys(row).forEach(key => allKeys.add(key));\n    });\n    \n    return Array.from(allKeys);\n  };\n\n  const renderTable = () => {\n    if (!editableData || editableData.length === 0) return null;\n\n    const columns = getColumns();\n\n    return (\n      <UI.Box \n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ overflowX: 'auto', ...customStyles.tableContainer }}\n      >\n        <UI.Table \n          className={getUIClasses(uiLibrary, 'Table')}\n          style={customStyles.table}\n        >\n          <UI.Thead className={getUIClasses(uiLibrary, 'Thead')}>\n            <UI.Tr className={getUIClasses(uiLibrary, 'Tr')}>\n              {columns.map(column => (\n                <UI.Th \n                  key={column}\n                  className={getUIClasses(uiLibrary, 'Th')}\n                  style={{ textAlign: 'center', ...customStyles.th }}\n                >\n                  {getDisplayName(column)}\n                </UI.Th>\n              ))}\n            </UI.Tr>\n          </UI.Thead>\n          <UI.Tbody className={getUIClasses(uiLibrary, 'Tbody')}>\n            {editableData.map((row, rowIndex) => (\n              <UI.Tr \n                key={rowIndex}\n                className={getUIClasses(uiLibrary, 'Tr')}\n              >\n                {columns.map(column => (\n                  <UI.Td \n                    key={column}\n                    className={getUIClasses(uiLibrary, 'Td')}\n                    style={customStyles.td}\n                  >\n                    <UI.Input\n                      type=\"text\"\n                      value={row[column] || ''}\n                      onChange={(e) => handleCellEdit(rowIndex, column, e.target.value)}\n                      className={getUIClasses(uiLibrary, 'Input')}\n                      style={{ \n                        border: 'none', \n                        background: 'transparent',\n                        ...customStyles.input \n                      }}\n                    />\n                  </UI.Td>\n                ))}\n              </UI.Tr>\n            ))}\n          </UI.Tbody>\n        </UI.Table>\n      </UI.Box>\n    );\n  };\n\n  return (\n    <UI.Container \n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack \n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n\n\n        <UI.Box \n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ width: '100%', ...customStyles.inputContainer }}\n        >\n          <UI.Textarea\n            value={jsonInput}\n            onChange={(e) => setJsonInput(e.target.value)}\n            placeholder=\"Paste your JSON data here...\"\n            className={getUIClasses(uiLibrary, 'Textarea')}\n            style={{ \n             width: '100%',\n              minHeight: '150px', \n              fontFamily: 'monospace',\n              ...customStyles.textarea \n            }}\n          />\n        </UI.Box>\n\n\n\n        {error && (\n          <UI.Alert \n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {renderTable()}\n\n        {showControls && editableData && (\n          <UI.HStack \n            gap=\"2\"\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  );\n};\n\nexport default JsonToTable;\n"],"names":["getUIComponents","Container","Box","Button","Input","Select","Textarea","Table","Thead","Tbody","Tr","Th","Td","Text","Heading","Stack","HStack","VStack","Card","Alert","Badge","Grid","GridItem","Flex","Label","getUIClasses","uiLibrary","arguments","length","undefined","component","variant","libraryClasses","tailwind","default","secondary","checkbox","error","success","warning","info","shadcn","componentClasses","_typeof","flattenObject","obj","prefix","flattened","key","Object","prototype","hasOwnProperty","call","newKey","concat","Array","isArray","assign","unflattenObject","flat","result","keys","split","current","i","getInputType","value","fieldConfig","_objectSpread","type","items","rows","includes","toLowerCase","startsWith","match","parseJsonSafely","jsonString","data","JSON","parse","message","getDisplayName","pop","replace","l","toUpperCase","trim","_ref","_ref$uiLibrary","onSave","onCancel","onFieldChange","_ref$saveButtonText","saveButtonText","_ref$cancelButtonText","cancelButtonText","_ref$initialJson","initialJson","_ref$customStyles","customStyles","_ref$showControls","showControls","_ref$showJsonInput","showJsonInput","_ref$columns","columns","_ref$fieldConfig","props","_objectWithoutProperties","_excluded","_useState2","_slicedToArray","useState","jsonInput","setJsonInput","_useState4","formData","setFormData","_useState6","originalFormData","setOriginalFormData","setParsedJson","_useState0","setError","UI","useEffect","parseJson","handleFieldChange","newFormData","_defineProperty","nestedData","renderFormField","fieldTypeConfig","displayName","renderCheckboxField","renderSelectField","renderMultiSelectField","renderTextareaField","renderSpecialInputField","renderNumberField","renderArrayField","renderObjectField","renderTextInputField","_jsx","className","style","marginBottom","fieldContainer","children","_jsxs","display","alignItems","gap","cursor","label","checked","onChange","e","target","fontWeight","fieldLabel","_fieldTypeConfig$opti","width","select","options","map","option","_fieldTypeConfig$opti2","selectedValues","flexDirection","newValues","_toConsumableArray","filter","v","fontSize","text","minHeight","textarea","input","val","parseFloat","stringify","parsed","_unused","fontFamily","_unused2","container","stack","_Fragment","inputContainer","placeholder","alert","errorText","padding","formCard","formEntries","entries","formStack","_ref2","_ref3","fieldsPerColumn","Math","ceil","columnGroups","startIndex","endIndex","min","push","slice","gridStyles","gridTemplateColumns","formGrid","columnFields","columnIndex","formColumn","_ref4","_ref5","renderFormFields","marginTop","controlButtons","onClick","saveButton","cancelButton","tableData","setTableData","_useState8","editableData","setEditableData","arrayData","err","allKeys","Set","forEach","row","add","from","getColumns","overflowX","tableContainer","table","column","textAlign","th","rowIndex","td","newData","handleCellEdit","border","background","renderTable","flatData","spaces"],"mappings":"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"}