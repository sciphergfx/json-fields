{"version":3,"file":"index.js","sources":["../lib/utils/uiAdapters.js","../lib/utils/jsonUtils.js","../lib/components/JsonToTable.jsx","../lib/components/JsonToFields.jsx","../lib/components/JsonToList.jsx"],"sourcesContent":["// UI Library Adapters\n// This file provides adapters for different UI libraries\n\nexport const getUIComponents = () => {\n  // All UI libraries use the same HTML elements as base\n  // The styling is handled through classes and props\n  return {\n    Container: 'div',\n    Box: 'div',\n    Button: 'button',\n    Input: 'input',\n    Select: 'select',\n    Textarea: 'textarea',\n    Table: 'table',\n    Thead: 'thead',\n    Tbody: 'tbody',\n    Tr: 'tr',\n    Th: 'th',\n    Td: 'td',\n    Text: 'span',\n    Heading: 'h2',\n    Stack: 'div',\n    HStack: 'div',\n    VStack: 'div',\n    Card: 'div',\n    Alert: 'div',\n    Badge: 'span',\n    Grid: 'div',\n    GridItem: 'div',\n    Flex: 'div',\n    Label: 'label',\n  }\n}\n\nexport const getUIClasses = (uiLibrary = 'chakra', component, variant = 'default') => {\n  const classMap = {\n    tailwind: {\n      Container: 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n      Box: 'block',\n      Button: {\n        default:\n          'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n        secondary:\n          'inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n      },\n      Input: {\n        default:\n          'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n        checkbox: 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded',\n      },\n      Select:\n        'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n      Textarea:\n        'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm resize-vertical',\n      Table: 'min-w-full divide-y divide-gray-200',\n      Thead: 'bg-gray-50',\n      Tbody: 'bg-white divide-y divide-gray-200',\n      Tr: 'hover:bg-gray-50',\n      Th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider',\n      Td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-900',\n      Text: 'text-gray-900',\n      Heading: 'text-2xl font-bold text-gray-900 mb-4',\n      Stack: 'space-y-4',\n      HStack: 'flex space-x-4 items-center',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'bg-white overflow-hidden shadow rounded-lg p-6',\n      Alert: {\n        error: 'bg-red-50 border border-red-200 rounded-md p-4 text-red-800',\n        success: 'bg-green-50 border border-green-200 rounded-md p-4 text-green-800',\n        warning: 'bg-yellow-50 border border-yellow-200 rounded-md p-4 text-yellow-800',\n        info: 'bg-blue-50 border border-blue-200 rounded-md p-4 text-blue-800',\n      },\n      Badge:\n        'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'block text-sm font-medium text-gray-700',\n    },\n    shadcn: {\n      Container: 'container mx-auto px-4',\n      Box: 'block',\n      Button: {\n        default:\n          'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2',\n        secondary:\n          'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2',\n      },\n      Input: {\n        default:\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        checkbox:\n          'h-4 w-4 rounded border border-primary text-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      },\n      Select:\n        'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Textarea:\n        'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Table: 'w-full caption-bottom text-sm',\n      Thead: '[&_tr]:border-b',\n      Tbody: '[&_tr:last-child]:border-0',\n      Tr: 'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      Th: 'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      Td: 'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n      Text: 'text-sm text-muted-foreground',\n      Heading: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      Stack: 'flex flex-col space-y-4',\n      HStack: 'flex space-x-4',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'rounded-lg border bg-card text-card-foreground shadow-sm',\n      Alert: {\n        error:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        success:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        warning:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        info: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n      },\n      Badge:\n        'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label:\n        'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n    },\n  }\n\n  if (uiLibrary === 'chakra') {\n    return '' // Chakra UI uses props, not classes\n  }\n\n  const libraryClasses = classMap[uiLibrary]\n  if (!libraryClasses || !libraryClasses[component]) {\n    return ''\n  }\n\n  const componentClasses = libraryClasses[component]\n  if (typeof componentClasses === 'object') {\n    return componentClasses[variant] || componentClasses.default || ''\n  }\n\n  return componentClasses\n}\n","/**\n * Utility functions for JSON parsing and object manipulation\n */\n\n/**\n * Flatten nested objects into dot-notation keys\n * @param {Object} obj - Object to flatten\n * @param {string} prefix - Key prefix for nested properties\n * @returns {Object} Flattened object\n */\nexport const flattenObject = (obj, prefix = '') => {\n  let flattened = {}\n\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = prefix ? `${prefix}.${key}` : key\n\n      if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(flattened, flattenObject(obj[key], newKey))\n      } else {\n        flattened[newKey] = obj[key]\n      }\n    }\n  }\n\n  return flattened\n}\n\n/**\n * Convert flattened object back to nested structure\n * @param {Object} flat - Flattened object with dot-notation keys\n * @returns {Object} Nested object\n */\nexport const unflattenObject = (flat) => {\n  const result = {}\n\n  for (let key in flat) {\n    const keys = key.split('.')\n    let current = result\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!current[keys[i]]) {\n        current[keys[i]] = {}\n      }\n      current = current[keys[i]]\n    }\n\n    current[keys[keys.length - 1]] = flat[key]\n  }\n\n  return result\n}\n\n/**\n * Determine input type based on value and optional field configuration\n * @param {any} value - Value to check\n * @param {string} key - Field key/name\n * @param {Object} fieldConfig - Optional field configuration override\n * @returns {Object} Field type configuration\n */\nexport const getInputType = (value, key = '', fieldConfig = {}) => {\n  // 1. Check explicit field configuration first\n  if (fieldConfig[key]) {\n    return { type: fieldConfig[key].type, ...fieldConfig[key] }\n  }\n\n  // 2. Basic type detection\n  if (typeof value === 'boolean') return { type: 'checkbox' }\n  if (typeof value === 'number') return { type: 'number' }\n  if (Array.isArray(value)) return { type: 'array', items: value }\n  if (typeof value === 'object' && value !== null) return { type: 'object' }\n\n  // 3. Enhanced string analysis\n  if (typeof value === 'string') {\n    // Long text detection\n    if (value.length > 100) return { type: 'textarea', rows: 4 }\n\n    // Email detection\n    if (value.includes('@') || key.toLowerCase().includes('email')) {\n      return { type: 'email' }\n    }\n\n    // URL detection\n    if (value.startsWith('http') || key.toLowerCase().includes('url')) {\n      return { type: 'url' }\n    }\n\n    // Date detection\n    if (value.match(/^\\d{4}-\\d{2}-\\d{2}$/) || key.toLowerCase().includes('date')) {\n      return { type: 'date' }\n    }\n\n    // Password detection\n    if (key.toLowerCase().includes('password')) {\n      return { type: 'password' }\n    }\n  }\n\n  // 4. Fallback to text\n  return { type: 'text' }\n}\n\n/**\n * Parse JSON string safely\n * @param {string} jsonString - JSON string to parse\n * @returns {Object} Parsed object or error\n */\nexport const parseJsonSafely = (jsonString) => {\n  try {\n    const parsed = JSON.parse(jsonString)\n    return { success: true, data: parsed }\n  } catch (error) {\n    return { success: false, error: error.message }\n  }\n}\n\n/**\n * Format JSON string with proper indentation\n * @param {any} obj - Object to stringify\n * @param {number} spaces - Number of spaces for indentation\n * @returns {string} Formatted JSON string\n */\nexport const formatJson = (obj, spaces = 2) => {\n  return JSON.stringify(obj, null, spaces)\n}\n\n/**\n * Get nested level from key\n * @param {string} key - Dot-notation key\n * @returns {number} Nesting level\n */\nexport const getNestedLevel = (key) => {\n  return key.split('.').length - 1\n}\n\n/**\n * Get display name from key\n * @param {string} key - Dot-notation key\n * @returns {string} Display name\n */\nexport const getDisplayName = (key) => {\n  return key\n    .split('.')\n    .pop()\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters\n    .replace(/[_-]/g, ' ') // Replace underscores and hyphens with spaces\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Capitalize first letter of each word\n    .trim()\n}\n","import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react'\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters'\nimport { getDisplayName } from '../utils/jsonUtils'\n\n/**\n * Table Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n */\nconst Table = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  // pagination & cache\n  pagination = true,\n  pageSize = 10,\n  cacheSize = 3,\n  initialPage = 1,\n  onPageChange,\n  // optional custom pagination override\n  paginationComponent: PaginationComponent = null,\n  paginationRenderer = null,\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson)\n  const [tableData, setTableData] = useState(null)\n  const [error, setError] = useState('')\n  const [editableData, setEditableData] = useState(null)\n  const [currentPage, setCurrentPage] = useState(initialPage > 0 ? initialPage : 1)\n  // simple LRU cache for page slices\n  const pageCacheRef = useRef(new Map()) // key: page number, value: rows slice\n  const lruRef = useRef([]) // array of page numbers, most-recent at end\n\n  const UI = getUIComponents(uiLibrary)\n\n  const parseJson = useCallback(\n    (jsonString = jsonInput) => {\n      setError('')\n      setTableData(null)\n\n      if (!jsonString.trim()) {\n        setError('Please enter some JSON data')\n        return\n      }\n\n      try {\n        const parsed = JSON.parse(jsonString)\n\n        if (Array.isArray(parsed)) {\n          if (parsed.length === 0) {\n            setError('The JSON array is empty')\n            return\n          }\n          setTableData(parsed)\n          setEditableData([...parsed])\n        } else if (typeof parsed === 'object' && parsed !== null) {\n          const arrayData = [parsed]\n          setTableData(arrayData)\n          setEditableData([...arrayData])\n        } else {\n          setError('JSON must be an object or array of objects')\n          return\n        }\n      } catch (err) {\n        setError(`Invalid JSON: ${err.message}`)\n      }\n    },\n    [jsonInput],\n  )\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson)\n      parseJson(initialJson)\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('')\n      setTableData(null)\n      setEditableData(null)\n      setError('')\n    }\n  }, [initialJson, parseJson])\n\n  // Reset cache on mount and whenever editableData changes (e.g., new JSON parsed)\n  useEffect(() => {\n    // reset cache\n    pageCacheRef.current.clear()\n    lruRef.current = []\n    // clamp and reset page\n    setCurrentPage(initialPage > 0 ? initialPage : 1)\n  }, [editableData, initialPage])\n\n  \n\n  const handleCellEdit = (rowIndex, key, value) => {\n    const newData = [...editableData]\n    newData[rowIndex][key] = value\n    setEditableData(newData)\n\n    if (onFieldChange) {\n      onFieldChange(key, value, newData)\n    }\n  }\n\n  const handleSave = () => {\n    if (onSave && editableData) {\n      const flatData = editableData.map((row) => ({ ...row }))\n      onSave(editableData, flatData)\n    }\n  }\n\n  const handleCancel = () => {\n    if (tableData) {\n      setEditableData([...tableData])\n    }\n    if (onCancel) {\n      onCancel()\n    }\n  }\n\n  const getColumns = () => {\n    if (!tableData || tableData.length === 0) return []\n\n    const allKeys = new Set()\n    tableData.forEach((row) => {\n      Object.keys(row).forEach((key) => allKeys.add(key))\n    })\n\n    return Array.from(allKeys)\n  }\n\n  const totalRows = useMemo(\n    () => (Array.isArray(editableData) ? editableData.length : 0),\n    [editableData],\n  )\n  const totalPages = useMemo(() => {\n    if (!pagination) return 1\n    return Math.max(1, Math.ceil((totalRows || 0) / Math.max(1, pageSize)))\n  }, [pagination, totalRows, pageSize])\n\n  const getPageSlice = (page) => {\n    if (!pagination || !Array.isArray(editableData)) return editableData || []\n    const safePage = Math.min(Math.max(1, page), totalPages)\n    // cache lookup\n    if (pageCacheRef.current.has(safePage)) {\n      // update LRU\n      const idx = lruRef.current.indexOf(safePage)\n      if (idx !== -1) lruRef.current.splice(idx, 1)\n      lruRef.current.push(safePage)\n      return pageCacheRef.current.get(safePage)\n    }\n    const start = (safePage - 1) * pageSize\n    const end = start + pageSize\n    const slice = editableData.slice(start, end)\n    // add to cache\n    pageCacheRef.current.set(safePage, slice)\n    lruRef.current.push(safePage)\n    // evict if needed\n    while (lruRef.current.length > Math.max(1, cacheSize)) {\n      const evictPage = lruRef.current.shift()\n      if (evictPage != null) pageCacheRef.current.delete(evictPage)\n    }\n    return slice\n  }\n\n  const goToPage = (nextPage) => {\n    const clamped = Math.min(Math.max(1, nextPage), totalPages)\n    if (clamped !== currentPage) {\n      setCurrentPage(clamped)\n      if (typeof onPageChange === 'function') onPageChange(clamped)\n    }\n  }\n\n  const prevPage = () => goToPage(currentPage - 1)\n  const nextPageFn = () => goToPage(currentPage + 1)\n\n  const renderTable = () => {\n    if (!editableData || editableData.length === 0) return null\n\n    const columns = getColumns()\n    const rows = pagination ? getPageSlice(currentPage) : editableData\n\n    return (\n      <UI.Box\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ overflowX: 'auto', ...customStyles.tableContainer }}\n      >\n        <UI.Table className={getUIClasses(uiLibrary, 'Table')} style={customStyles.table}>\n          <UI.Thead className={getUIClasses(uiLibrary, 'Thead')}>\n            <UI.Tr className={getUIClasses(uiLibrary, 'Tr')}>\n              {columns.map((column) => (\n                <UI.Th\n                  key={column}\n                  className={getUIClasses(uiLibrary, 'Th')}\n                  style={{ textAlign: 'center', ...customStyles.th }}\n                >\n                  {getDisplayName(column)}\n                </UI.Th>\n              ))}\n            </UI.Tr>\n          </UI.Thead>\n          <UI.Tbody className={getUIClasses(uiLibrary, 'Tbody')}>\n            {rows.map((row, rowIndex) => (\n              <UI.Tr key={rowIndex} className={getUIClasses(uiLibrary, 'Tr')}>\n                {columns.map((column) => (\n                  <UI.Td\n                    key={column}\n                    className={getUIClasses(uiLibrary, 'Td')}\n                    style={customStyles.td}\n                  >\n                    <UI.Input\n                      type=\"text\"\n                      value={row[column] || ''}\n                      onChange={(e) =>\n                        handleCellEdit(\n                          pagination ? (currentPage - 1) * pageSize + rowIndex : rowIndex,\n                          column,\n                          e.target.value,\n                        )\n                      }\n                      className={getUIClasses(uiLibrary, 'Input')}\n                      style={{\n                        border: 'none',\n                        background: 'transparent',\n                        ...customStyles.input,\n                      }}\n                    />\n                  </UI.Td>\n                ))}\n              </UI.Tr>\n            ))}\n          </UI.Tbody>\n        </UI.Table>\n        {pagination &&\n          totalPages > 1 &&\n          (() => {\n            const pagerProps = {\n              currentPage,\n              totalPages,\n              pageSize,\n              cacheSize,\n              goToPage,\n              prevPage,\n              nextPage: nextPageFn,\n            }\n            if (typeof paginationRenderer === 'function') {\n              return <UI.Box style={{ marginTop: '12px' }}>{paginationRenderer(pagerProps)}</UI.Box>\n            }\n            if (PaginationComponent) {\n              const Comp = PaginationComponent\n              return (\n                <UI.Box style={{ marginTop: '12px' }}>\n                  <Comp {...pagerProps} />\n                </UI.Box>\n              )\n            }\n            return (\n              <UI.HStack\n                className={getUIClasses(uiLibrary, 'HStack')}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginTop: '12px',\n                  ...(customStyles.pagination || {}),\n                }}\n              >\n                <UI.Button\n                  onClick={prevPage}\n                  disabled={currentPage <= 1}\n                  className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n                  style={{ opacity: currentPage <= 1 ? 0.5 : 1 }}\n                >\n                  Prev\n                </UI.Button>\n                <UI.Text>\n                  {currentPage} / {totalPages}\n                </UI.Text>\n                <UI.Button\n                  onClick={nextPageFn}\n                  disabled={currentPage >= totalPages}\n                  className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n                  style={{ opacity: currentPage >= totalPages ? 0.5 : 1 }}\n                >\n                  Next\n                </UI.Button>\n              </UI.HStack>\n            )\n          })()}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container\n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack\n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        \n\n        {error && (\n          <UI.Alert\n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {renderTable()}\n\n        {showControls && editableData && (\n          <UI.HStack\n            gap=\"2\"\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  )\n}\n\nexport default Table\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  flattenObject,\n  unflattenObject,\n  getInputType,\n  parseJsonSafely,\n  getDisplayName,\n} from '../utils/jsonUtils'\n\n/**\n * Fields Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - (deprecated, ignored in headless)\n * @param {Object} [props.classNames] - slot classes for headless styling\n * @param {Object} [props.styles] - slot inline styles for headless styling\n * @param {Object} [props.renderers] - primitive render overrides: { Container, Box, Button, Input, Select, Textarea, Text, Heading, VStack, HStack, Card, Alert, Label }\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n * @param {number} props.columns - Number of columns for form layout (default: 2)\n * @param {Object} props.fieldConfig - Field configuration for custom input types\n * @param {Array} [props.sections] - Optional sections to group fields: [{ id?, title, description?, fields: string[], collapsible?: boolean, defaultOpen?: boolean }]\n * @param {boolean} [props.includeUnsectioned=false] - If true, render fields not listed in sections under an \"Other\" section\n * @param {string} [props.unsectionedTitle='Other'] - Title for the unsectioned fields section\n */\nconst Fields = ({\n  // headless styling hooks\n  _classNames = {},\n  styles: _styleProps = {},\n  renderers = {},\n  // deprecated uiLibrary (ignored in headless; kept for backward compat)\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  \n  columns = 2,\n  fieldConfig = {},\n  sections = null,\n  includeUnsectioned = false,\n  unsectionedTitle = 'Other',\n  ...props\n}) => {\n  // mark intentionally unused headless props to satisfy lint\n  _classNames\n  _styleProps\n  const [jsonInput, setJsonInput] = useState(initialJson)\n  const [formData, setFormData] = useState({})\n  const [originalFormData, setOriginalFormData] = useState({})\n  const [, setParsedJson] = useState(null)\n  const [error, setError] = useState('')\n  // Local input state for tags fields keyed by field name\n  const [tagInputs, setTagInputs] = useState({})\n  // Open state for collapsible sections\n  const [sectionOpenIds, setSectionOpenIds] = useState(() => new Set())\n\n  // Headless primitives; can be overridden by `renderers`\n  const UI = {\n    Container: renderers.Container || 'div',\n    Box: renderers.Box || 'div',\n    Button: renderers.Button || 'button',\n    Input: renderers.Input || 'input',\n    Select: renderers.Select || 'select',\n    Textarea: renderers.Textarea || 'textarea',\n    Text: renderers.Text || 'span',\n    Heading: renderers.Heading || 'h2',\n    VStack: renderers.VStack || 'div',\n    HStack: renderers.HStack || 'div',\n    Card: renderers.Card || 'div',\n    Alert: renderers.Alert || 'div',\n    Label: renderers.Label || 'label',\n  }\n\n  // No-op for legacy class mapping\n  const getUIClasses = () => ''\n\n  const parseJson = useCallback(\n    (jsonString = jsonInput) => {\n      const result = parseJsonSafely(jsonString)\n\n      if (result.success) {\n        setParsedJson(result.data)\n        const flattened = flattenObject(result.data)\n        setFormData(flattened)\n        setOriginalFormData({ ...flattened })\n        setError('')\n      } else {\n        setError(result.error)\n        setParsedJson(null)\n        setFormData({})\n        setOriginalFormData({})\n      }\n    },\n    [jsonInput],\n  )\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson)\n      parseJson(initialJson)\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('')\n      setFormData({})\n      setOriginalFormData({})\n      setParsedJson(null)\n      setError('')\n    }\n  }, [initialJson, parseJson])\n\n  \n\n  const handleFieldChange = (key, value) => {\n    const newFormData = {\n      ...formData,\n      [key]: value,\n    }\n    setFormData(newFormData)\n\n    if (onFieldChange) {\n      const nestedData = unflattenObject(newFormData)\n      onFieldChange(key, value, nestedData)\n    }\n  }\n\n  const handleSave = () => {\n    if (onSave) {\n      const nestedData = unflattenObject(formData)\n      onSave(nestedData, formData)\n    }\n  }\n\n  const handleCancel = () => {\n    setFormData({ ...originalFormData })\n    if (onCancel) {\n      onCancel()\n    }\n  }\n\n  const renderFormField = (key, value) => {\n    const fieldTypeConfig = getInputType(value, key, fieldConfig)\n    const displayName = getDisplayName(key)\n\n    // Handle different field types based on configuration\n    switch (fieldTypeConfig.type) {\n      case 'checkbox':\n        return renderCheckboxField(key, value, displayName, fieldTypeConfig)\n      case 'select':\n        return renderSelectField(key, value, displayName, fieldTypeConfig)\n      case 'multi-select':\n        return renderMultiSelectField(key, value, displayName, fieldTypeConfig)\n      case 'textarea':\n        return renderTextareaField(key, value, displayName, fieldTypeConfig)\n      case 'email':\n      case 'url':\n      case 'date':\n      case 'password':\n        return renderSpecialInputField(key, value, displayName, fieldTypeConfig)\n      case 'number':\n        return renderNumberField(key, value, displayName, fieldTypeConfig)\n      case 'slider':\n        return renderSliderField(key, value, displayName, fieldTypeConfig)\n      case 'tags':\n        return _renderTagsField(key, value, displayName, fieldTypeConfig)\n      case 'array':\n        return renderArrayField(key, value, displayName, fieldTypeConfig)\n      case 'object':\n        return renderObjectField(key, value, displayName, fieldTypeConfig)\n      default:\n        return renderTextInputField(key, value, displayName, fieldTypeConfig)\n    }\n  }\n\n  // Slider field renderer (HTML range input)\n  const renderSliderField = (key, value, displayName, fieldTypeConfig) => {\n    const min = fieldTypeConfig.min ?? 0\n    const max = fieldTypeConfig.max ?? 100\n    const step = fieldTypeConfig.step ?? 1\n    const current = typeof formData[key] === 'number' ? formData[key] : (fieldTypeConfig.default ?? min)\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label className={getUIClasses(uiLibrary, 'Label')} style={customStyles.label}>\n          <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ fontWeight: '500', ...customStyles.fieldLabel }}>\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\n          <input\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={current}\n            onChange={(e) => handleFieldChange(key, Number(e.target.value))}\n            className={getUIClasses(uiLibrary, 'Input', 'range')}\n            style={{ width: '100%' }}\n          />\n          <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ minWidth: '3rem', textAlign: 'right' }}>\n            {current}\n          </UI.Text>\n        </div>\n      </UI.Box>\n    )\n  }\n\n  // Checkbox field renderer\n  const renderCheckboxField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem',\n            cursor: 'pointer',\n            ...customStyles.label,\n          }}\n        >\n          <input\n            type=\"checkbox\"\n            checked={formData[key] || false}\n            onChange={(e) => handleFieldChange(key, e.target.checked)}\n            className={getUIClasses(uiLibrary, 'Input', 'checkbox')}\n            style={customStyles.checkbox}\n          />\n          <UI.Text\n            className={getUIClasses(uiLibrary, 'Text')}\n            style={{ fontWeight: '500', ...customStyles.fieldLabel }}\n          >\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n      </UI.Box>\n    )\n  }\n\n  // Select field renderer\n  const renderSelectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Select\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Select')}\n          style={{ width: '100%', ...customStyles.select }}\n        >\n          <option value=\"\">Select {displayName}</option>\n          {fieldTypeConfig.options?.map((option) => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </UI.Select>\n      </UI.Box>\n    )\n  }\n\n  // Multi-select field renderer\n  const renderMultiSelectField = (key, value, displayName, fieldTypeConfig) => {\n    const selectedValues = Array.isArray(formData[key]) ? formData[key] : []\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n          {fieldTypeConfig.options?.map((option) => (\n            <UI.Label\n              key={option}\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selectedValues.includes(option)}\n                onChange={(e) => {\n                  const newValues = e.target.checked\n                    ? [...selectedValues, option]\n                    : selectedValues.filter((v) => v !== option)\n                  handleFieldChange(key, newValues)\n                }}\n                style={customStyles.checkbox}\n              />\n              <UI.Text style={{ fontSize: '14px', ...customStyles.text }}>{option}</UI.Text>\n            </UI.Label>\n          ))}\n        </UI.Box>\n      </UI.Box>\n    )\n  }\n\n  // Textarea field renderer\n  const renderTextareaField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Textarea\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            width: '100%',\n            minHeight: `${(fieldTypeConfig.rows || 4) * 1.5}rem`,\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Special input field renderer (email, url, date, password)\n  const renderSpecialInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type={fieldTypeConfig.type}\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Number field renderer\n  const renderNumberField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"number\"\n          value={formData[key] || ''}\n          onChange={(e) => {\n            const val = parseFloat(e.target.value) || 0\n            handleFieldChange(key, val)\n          }}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Array field renderer\n  const renderArrayField = (key, value, displayName, fieldTypeConfig) => {\n    const arr = Array.isArray(value) ? value : []\n    const isStringArray = arr.every((v) => typeof v === 'string')\n\n    // If it's an array of strings, render as pill chips with add/delete\n    if (isStringArray) {\n      const tags = Array.isArray(formData[key]) ? formData[key] : []\n      const newTag = tagInputs[key] || ''\n\n      const addTag = (tag) => {\n        const t = (tag || '').trim()\n        if (!t) return\n        if (tags.includes(t)) return\n        handleFieldChange(key, [...tags, t])\n        setTagInputs((prev) => ({ ...prev, [key]: '' }))\n      }\n\n      const removeTag = (tag) => {\n        handleFieldChange(\n          key,\n          tags.filter((t) => t !== tag),\n        )\n      }\n\n      const onKeyDown = (e) => {\n        if (e.key === 'Enter' || e.key === ',') {\n          e.preventDefault()\n          addTag(newTag)\n        } else if (e.key === 'Backspace' && !newTag && tags.length) {\n          removeTag(tags[tags.length - 1])\n        }\n      }\n\n      const pillStyle = {\n        display: 'inline-flex',\n        alignItems: 'center',\n        gap: '6px',\n        padding: '4px 8px',\n        borderRadius: '999px',\n        background: '#eef2ff',\n        color: '#3730a3',\n        border: '1px solid #c7d2fe',\n        fontSize: '12px',\n      }\n\n      const pillCloseStyle = {\n        cursor: 'pointer',\n        border: 'none',\n        background: 'transparent',\n        color: '#4338ca',\n        fontSize: '14px',\n        lineHeight: 1,\n      }\n\n      return (\n        <UI.Box\n          key={key}\n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n        >\n          <UI.Label\n            className={getUIClasses(uiLibrary, 'Label')}\n            style={{\n              display: 'block',\n              fontWeight: '600',\n              marginBottom: '0.5rem',\n              ...customStyles.fieldLabel,\n            }}\n          >\n            {displayName}\n          </UI.Label>\n          <UI.Box style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>\n            {tags.map((tag) => (\n              <span key={tag} style={pillStyle}>\n                {tag}\n                <button\n                  aria-label={`Remove ${tag}`}\n                  onClick={() => removeTag(tag)}\n                  style={pillCloseStyle}\n                >\n                  ×\n                </button>\n              </span>\n            ))}\n            <UI.Input\n              type=\"text\"\n              value={newTag}\n              onChange={(e) => setTagInputs((prev) => ({ ...prev, [key]: e.target.value }))}\n              onKeyDown={onKeyDown}\n              placeholder={fieldTypeConfig.placeholder || `Add ${displayName} and press Enter`}\n              className={getUIClasses(uiLibrary, 'Input')}\n              style={{ minWidth: '140px', flex: '0 1 auto', ...customStyles.input }}\n            />\n            <UI.Button\n              onClick={() => addTag(newTag)}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={{ padding: '6px 10px' }}\n            >\n              Add\n            </UI.Button>\n          </UI.Box>\n        </UI.Box>\n      )\n    }\n\n    // Fallback: render as JSON textarea for non-string arrays\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName} (Array)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value)\n              handleFieldChange(key, parsed)\n            } catch {\n              handleFieldChange(key, e.target.value)\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            fontFamily: 'monospace',\n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Tags field renderer (pill chips with delete and input to add)\n  const _renderTagsField = (key, value, displayName, fieldTypeConfig) => {\n    const tags = Array.isArray(formData[key]) ? formData[key] : []\n    const newTag = tagInputs[key] || ''\n\n    const addTag = (tag) => {\n      const t = (tag || '').trim()\n      if (!t) return\n      if (tags.includes(t)) return\n      handleFieldChange(key, [...tags, t])\n      setTagInputs((prev) => ({ ...prev, [key]: '' }))\n    }\n\n    const removeTag = (tag) => {\n      handleFieldChange(\n        key,\n        tags.filter((t) => t !== tag),\n      )\n    }\n\n    const onKeyDown = (e) => {\n      if (e.key === 'Enter' || e.key === ',') {\n        e.preventDefault()\n        addTag(newTag)\n      } else if (e.key === 'Backspace' && !newTag && tags.length) {\n        // quick remove last tag\n        removeTag(tags[tags.length - 1])\n      }\n    }\n\n    const pillStyle = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gap: '6px',\n      padding: '4px 8px',\n      borderRadius: '999px',\n      background: '#eef2ff',\n      color: '#3730a3',\n      border: '1px solid #c7d2fe',\n      fontSize: '12px',\n    }\n\n    const pillCloseStyle = {\n      cursor: 'pointer',\n      border: 'none',\n      background: 'transparent',\n      color: '#4338ca',\n      fontSize: '14px',\n      lineHeight: 1,\n    }\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>\n          {tags.map((tag) => (\n            <span key={tag} style={pillStyle}>\n              {tag}\n              <button\n                aria-label={`Remove ${tag}`}\n                onClick={() => removeTag(tag)}\n                style={pillCloseStyle}\n              >\n                ×\n              </button>\n            </span>\n          ))}\n          <UI.Input\n            type=\"text\"\n            value={newTag}\n            onChange={(e) => setTagInputs((prev) => ({ ...prev, [key]: e.target.value }))}\n            onKeyDown={onKeyDown}\n            placeholder={fieldTypeConfig.placeholder || 'Add tag and press Enter'}\n            className={getUIClasses(uiLibrary, 'Input')}\n            style={{ minWidth: '140px', flex: '0 1 auto', ...customStyles.input }}\n          />\n          <UI.Button\n            onClick={() => addTag(newTag)}\n            className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n            style={{ padding: '6px 10px' }}\n          >\n            Add\n          </UI.Button>\n        </UI.Box>\n      </UI.Box>\n    )\n  }\n\n  // Object field renderer\n  const renderObjectField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName} (Object)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value)\n              handleFieldChange(key, parsed)\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value)\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            fontFamily: 'monospace',\n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Text input field renderer (default)\n  const renderTextInputField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"text\"\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Function to render form fields in columns\n  const renderFormFields = () => {\n    // If sections prop is provided, render grouped sections first\n    if (Array.isArray(sections) && sections.length) {\n      const allKeys = Object.keys(formData)\n      const used = new Set()\n      const sectionBlocks = sections.map((sec, idx) => {\n        const secId = sec.id || `section-${idx}`\n        const listed = Array.isArray(sec.fields) ? sec.fields : []\n        listed.forEach((k) => used.add(k))\n        // Build section content honoring columns\n        const sectionKeys = listed.filter((k) => allKeys.includes(k))\n        const content = (() => {\n          if (columns <= 1) {\n            return (\n              <UI.VStack key={secId} style={{ gap: '1rem' }}>\n                {sectionKeys.map((k) => renderFormField(k, formData[k]))}\n              </UI.VStack>\n            )\n          }\n          const fieldsPerColumn = Math.ceil(sectionKeys.length / columns)\n          const columnGroups = []\n          for (let i = 0; i < columns; i++) {\n            const startIndex = i * fieldsPerColumn\n            const endIndex = Math.min(startIndex + fieldsPerColumn, sectionKeys.length)\n            columnGroups.push(sectionKeys.slice(startIndex, endIndex))\n          }\n          const gridStyles = {\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columns}, 1fr)`,\n            gap: '2rem',\n            width: '100%',\n            ...customStyles.formGrid,\n          }\n          return (\n            <UI.Box key={secId} className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n              {columnGroups.map((group, idx) => (\n                <UI.VStack\n                  key={idx}\n                  className={getUIClasses(uiLibrary, 'VStack')}\n                  style={{ gap: '1rem', ...customStyles.formColumn }}\n                >\n                  {group.map((k) => renderFormField(k, formData[k]))}\n                </UI.VStack>\n              ))}\n            </UI.Box>\n          )\n        })()\n\n        const baselineOpen = !!(sec.defaultOpen || !sec.collapsible)\n        const open = sectionOpenIds.has(secId) ? !baselineOpen : baselineOpen\n        const toggle = () =>\n          setSectionOpenIds((prev) => {\n            const next = new Set(prev)\n            if (next.has(secId)) next.delete(secId)\n            else next.add(secId)\n            return next\n          })\n\n        return (\n          <UI.Box key={`wrap-${secId}`} style={{ marginBottom: '1.25rem' }}>\n            <UI.Box\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '0.5rem',\n              }}\n            >\n              <UI.Box style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                {sec.collapsible && (\n                  <button\n                    aria-label={`Toggle ${sec.title}`}\n                    onClick={toggle}\n                    style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n                  >\n                    <span>{open ? '▼' : '▶'}</span>\n                  </button>\n                )}\n                <UI.Heading className={getUIClasses(uiLibrary, 'Heading')} style={{ margin: 0 }}>\n                  {sec.title}\n                </UI.Heading>\n              </UI.Box>\n              {sec.description && (\n                <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ opacity: 0.8 }}>\n                  {sec.description}\n                </UI.Text>\n              )}\n            </UI.Box>\n            {(!sec.collapsible || open) && content}\n          </UI.Box>\n        )\n      })\n\n      // Unsectioned fields\n      let otherBlock = null\n      if (includeUnsectioned) {\n        const remaining = allKeys.filter((k) => !used.has(k))\n        if (remaining.length) {\n          const secId = 'unsectioned'\n          const baselineOpen = true\n          const open = sectionOpenIds.has(secId) ? !baselineOpen : baselineOpen\n          const toggle = () =>\n            setSectionOpenIds((prev) => {\n              const next = new Set(prev)\n              if (next.has(secId)) next.delete(secId)\n              else next.add(secId)\n              return next\n            })\n          otherBlock = (\n            <UI.Box key={`wrap-${secId}`} style={{ marginBottom: '1.25rem' }}>\n              <UI.Box\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginBottom: '0.5rem',\n                }}\n              >\n                <UI.Box style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <button\n                    aria-label={`Toggle ${unsectionedTitle}`}\n                    onClick={toggle}\n                    style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n                  >\n                    <span>{open ? '▼' : '▶'}</span>\n                  </button>\n                  <UI.Heading className={getUIClasses(uiLibrary, 'Heading')} style={{ margin: 0 }}>\n                    {unsectionedTitle}\n                  </UI.Heading>\n                </UI.Box>\n              </UI.Box>\n              {open &&\n                (() => {\n                  if (columns <= 1) {\n                    return (\n                      <UI.VStack style={{ gap: '1rem' }}>\n                        {remaining.map((k) => renderFormField(k, formData[k]))}\n                      </UI.VStack>\n                    )\n                  }\n                  const fieldsPerColumn = Math.ceil(remaining.length / columns)\n                  const columnGroups = []\n                  for (let i = 0; i < columns; i++) {\n                    const startIndex = i * fieldsPerColumn\n                    const endIndex = Math.min(startIndex + fieldsPerColumn, remaining.length)\n                    columnGroups.push(remaining.slice(startIndex, endIndex))\n                  }\n                  const gridStyles = {\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n                    gap: '2rem',\n                    width: '100%',\n                    ...customStyles.formGrid,\n                  }\n                  return (\n                    <UI.Box className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n                      {columnGroups.map((group, idx) => (\n                        <UI.VStack\n                          key={idx}\n                          className={getUIClasses(uiLibrary, 'VStack')}\n                          style={{ gap: '1rem', ...customStyles.formColumn }}\n                        >\n                          {group.map((k) => renderFormField(k, formData[k]))}\n                        </UI.VStack>\n                      ))}\n                    </UI.Box>\n                  )\n                })()}\n            </UI.Box>\n          )\n        }\n      }\n\n      return (\n        <UI.VStack\n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {sectionBlocks}\n          {otherBlock}\n        </UI.VStack>\n      )\n    }\n\n    const formEntries = Object.entries(formData)\n\n    if (columns <= 1) {\n      // Single column layout (default)\n      return (\n        <UI.VStack\n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {formEntries.map(([key, value]) => renderFormField(key, value))}\n        </UI.VStack>\n      )\n    }\n\n    // Multi-column layout\n    const fieldsPerColumn = Math.ceil(formEntries.length / columns)\n    const columnGroups = []\n\n    for (let i = 0; i < columns; i++) {\n      const startIndex = i * fieldsPerColumn\n      const endIndex = Math.min(startIndex + fieldsPerColumn, formEntries.length)\n      columnGroups.push(formEntries.slice(startIndex, endIndex))\n    }\n\n    const gridStyles = {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gap: '2rem',\n      width: '100%',\n      ...customStyles.formGrid,\n    }\n\n    return (\n      <UI.Box className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n        {columnGroups.map((columnFields, columnIndex) => (\n          <UI.VStack\n            key={columnIndex}\n            className={getUIClasses(uiLibrary, 'VStack')}\n            style={{ gap: '1rem', ...customStyles.formColumn }}\n          >\n            {columnFields.map(([key, value]) => renderFormField(key, value))}\n          </UI.VStack>\n        ))}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container\n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack\n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        \n\n        {error && (\n          <UI.Alert\n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {Object.keys(formData).length > 0 && (\n          <UI.Card\n            className={getUIClasses(uiLibrary, 'Card')}\n            style={{ width: '100%', padding: '1rem', ...customStyles.formCard }}\n          >\n            {renderFormFields()}\n          </UI.Card>\n        )}\n\n        {showControls && Object.keys(formData).length > 0 && (\n          <UI.HStack\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  )\n}\n\nexport default Fields\n","import React, { useMemo, useState } from 'react'\n\n/**\n * List\n * UI-agnostic collapsible list from JSON.\n *\n * Props:\n * - data: Array<{ id?: string|number, label: string, children?: Array, icon?: ReactNode }>\n * - uiLibrary: 'chakra' | 'tailwind' | 'shadcn'\n * - startIcon?: ReactNode                 // appears near the header title (optional)\n * - headerTitle?: React.ReactNode         // title content above the list (default: 'Projects')\n * - headerDescription?: React.ReactNode   // optional description text under the title\n * - mode?: 'light' | 'dark'               // per-component color mode (default: 'dark')\n * - parentIcon?: ReactNode                // legacy parent icon (use open/closed below for disclosure)\n * - parentOpenIcon?: ReactNode            // icon for an open parent (defaults to ▼)\n * - parentClosedIcon?: ReactNode          // icon for a closed parent (defaults to ▶)\n * - childIcon?: ReactNode                 // icon for child leaf nodes\n * - hoverIcon?: ReactNode                 // icon shown on hover at row end (defaults to '…')\n * - onItemClick?: (item) => void          // click on any row\n * - onToggle?: (item, isOpen) => void     // when a parent is toggled\n * - sections?: Array<{ id?: string, title: string, description?: string, collapsible?: boolean, defaultOpen?: boolean, filter?: (item) => boolean }>\n * - groupBy?: (item) => string            // alternative to sections: derive section title from function\n * - sectionOrder?: string[]               // optional order for groupBy section titles\n * - customStyles?: { container?, header?, list?, row?, label?, icon?, hoverIcon?, child?, parent?, sectionHeader? }\n */\nexport default function List({\n  data = [],\n  // headless props\n  classNames = {},\n  styles: styleProps = {},\n  renderers = {},\n  // deprecated: ui library selection (kept for backward compat, ignored in headless)\n  _uiLibrary = 'chakra',\n  startIcon = null,\n  headerTitle = 'My List title',\n  headerDescription = null,\n  mode = 'dark',\n  parentIcon = null,\n  parentOpenIcon = null,\n  parentClosedIcon = null,\n  childIcon = null,\n  hoverIcon = null,\n  onItemClick = () => {},\n  onToggle = () => {},\n  sections = null,\n  groupBy = null,\n  sectionOrder = null,\n  customStyles = {},\n}) {\n  // mark unused legacy prop\n  _uiLibrary\n  // Primitive UI (headless). Consumers can override via `renderers`.\n  const UI = {\n    Container: renderers.Container || 'div',\n    Box: renderers.Box || 'div',\n    Heading: renderers.Heading || 'h2',\n    Text: renderers.Text || 'span',\n  }\n\n  const palette = useMemo(() => {\n    if (mode === 'light') {\n      return {\n        bg: '#ffffff',\n        headerText: '#4B5563',\n        text: '#111827',\n        rowHoverBg: '#F3F4F6',\n        icon: '#374151',\n        hoverIcon: '#6B7280',\n        border: '#E5E7EB',\n      }\n    }\n    // dark (default)\n    return {\n      bg: '#111827',\n      headerText: '#9CA3AF',\n      text: '#E5E7EB',\n      rowHoverBg: '#1F2937',\n      icon: '#E5E7EB',\n      hoverIcon: '#9CA3AF',\n      border: '#374151',\n    }\n  }, [mode])\n\n  const defaults = {\n    container: { background: palette.bg },\n    header: {\n      padding: '8px 12px',\n      color: palette.headerText,\n      fontSize: '12px',\n      textTransform: 'uppercase',\n      letterSpacing: '0.08em',\n    },\n    headerDescription: { padding: '0 12px 8px 12px', color: palette.headerText, fontSize: '12px' },\n    list: { padding: '8px' },\n    row: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      padding: '8px 10px',\n      borderRadius: '6px',\n      cursor: 'pointer',\n      color: palette.text,\n    },\n    label: { flex: 1 },\n    icon: {\n      width: '18px',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: palette.icon,\n    },\n    hoverIcon: { color: palette.hoverIcon },\n    parent: {},\n    child: { paddingLeft: '28px' },\n  }\n\n  const styles = useMemo(\n    () => ({\n      container: {\n        ...defaults.container,\n        ...(customStyles.container || {}),\n        ...(styleProps.container || {}),\n      },\n      header: { ...defaults.header, ...(customStyles.header || {}), ...(styleProps.header || {}) },\n      headerDescription: {\n        ...defaults.headerDescription,\n        ...(customStyles.headerDescription || {}),\n        ...(styleProps.headerDescription || {}),\n      },\n      list: { ...defaults.list, ...(customStyles.list || {}), ...(styleProps.list || {}) },\n      row: { ...defaults.row, ...(customStyles.row || {}), ...(styleProps.row || {}) },\n      label: { ...defaults.label, ...(customStyles.label || {}), ...(styleProps.label || {}) },\n      icon: { ...defaults.icon, ...(customStyles.icon || {}), ...(styleProps.icon || {}) },\n      hoverIcon: {\n        ...defaults.hoverIcon,\n        ...(customStyles.hoverIcon || {}),\n        ...(styleProps.hoverIcon || {}),\n      },\n      parent: { ...defaults.parent, ...(customStyles.parent || {}), ...(styleProps.parent || {}) },\n      child: { ...defaults.child, ...(customStyles.child || {}), ...(styleProps.child || {}) },\n      sectionHeader: { ...(customStyles.sectionHeader || {}), ...(styleProps.sectionHeader || {}) },\n    }),\n    [\n      customStyles,\n      styleProps,\n      defaults.container,\n      defaults.header,\n      defaults.headerDescription,\n      defaults.list,\n      defaults.row,\n      defaults.label,\n      defaults.icon,\n      defaults.hoverIcon,\n      defaults.parent,\n      defaults.child,\n    ],\n  )\n\n  const [openIds, setOpenIds] = useState(() => new Set())\n  const [openSectionIds, setOpenSectionIds] = useState(() => new Set())\n\n  const isParent = (item) => Array.isArray(item.children) && item.children.length > 0\n  const getId = (item, idx, parentPath = '') => item.id ?? `${parentPath}${idx}`\n\n  // Default disclosure and item icons\n  const DefaultParentOpenIcon = <span style={{ fontSize: 14 }}>▼</span>\n  const DefaultParentClosedIcon = <span style={{ fontSize: 14 }}>▶</span>\n  const DefaultParentIcon = <span style={{ fontSize: 14 }}>📁</span>\n  const DefaultChildIcon = <span style={{ fontSize: 14 }}>🗂️</span>\n  const DefaultHoverIcon = <span style={{ fontSize: 16 }}>…</span>\n\n  const toggle = (itemId, item) => {\n    setOpenIds((prev) => {\n      const next = new Set(prev)\n      if (next.has(itemId)) next.delete(itemId)\n      else next.add(itemId)\n      onToggle(item, next.has(itemId))\n      return next\n    })\n  }\n\n  const Row = ({ item, depth = 0, index, parentPath = '' }) => {\n    const [hovered, setHovered] = useState(false)\n    const id = getId(item, index, `${parentPath}${depth}-`)\n    const parent = isParent(item)\n    const open = parent && openIds.has(id)\n\n    return (\n      <UI.Box>\n        <UI.Box\n          onClick={() => {\n            onItemClick(item)\n            if (parent) toggle(id, item)\n          }}\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n          style={{\n            ...styles.row,\n            ...(parent ? styles.parent : styles.child),\n            paddingLeft: parent ? `${10 + depth * 16}px` : `${28 + depth * 16}px`,\n          }}\n          className=\"json-to-list-row\"\n        >\n          {parent ? (\n            <>\n              {/* Disclosure icon for parent (open/closed) */}\n              <UI.Box style={styles.icon}>\n                {open\n                  ? parentOpenIcon || DefaultParentOpenIcon\n                  : parentClosedIcon || DefaultParentClosedIcon}\n              </UI.Box>\n              {/* Item icon (per-item override, then parentIcon, then default) */}\n              <UI.Box style={styles.icon}>{item.icon || parentIcon || DefaultParentIcon}</UI.Box>\n            </>\n          ) : (\n            <UI.Box style={styles.icon}>{item.icon || childIcon || DefaultChildIcon}</UI.Box>\n          )}\n          <UI.Box style={styles.label}>{item.label}</UI.Box>\n          <UI.Box\n            className=\"json-to-list-row-hover\"\n            style={{\n              ...styles.icon,\n              ...styles.hoverIcon,\n              opacity: hovered ? 1 : 0,\n              transition: 'opacity 0.15s ease',\n            }}\n          >\n            {hoverIcon || DefaultHoverIcon}\n          </UI.Box>\n        </UI.Box>\n        {parent && open && (\n          <UI.Box>\n            {item.children.map((child, cIdx) => (\n              <Row\n                key={getId(child, cIdx, id + '-')}\n                item={child}\n                depth={depth + 1}\n                index={cIdx}\n                parentPath={id + '-'}\n              />\n            ))}\n          </UI.Box>\n        )}\n      </UI.Box>\n    )\n  }\n\n  // Section rendering\n  const renderSectionHeader = (id, title, description, collapsible = true, defaultOpen = true) => {\n    const baselineOpen = !!(defaultOpen || !collapsible)\n    const isOpen = openSectionIds.has(id) ? !baselineOpen : baselineOpen\n    const toggle = () =>\n      setOpenSectionIds((prev) => {\n        const next = new Set(prev)\n        if (next.has(id)) next.delete(id)\n        else next.add(id)\n        return next\n      })\n    return (\n      <UI.Box\n        key={`header-${id}`}\n        className={classNames.sectionHeader}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          margin: '8px 8px 4px 8px',\n          ...styles.sectionHeader,\n        }}\n      >\n        <UI.Box\n          className={classNames.sectionHeaderLeft}\n          style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\n        >\n          {collapsible && (\n            <button\n              aria-label={`Toggle ${title}`}\n              onClick={toggle}\n              style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n            >\n              <span>{isOpen ? '▼' : '▶'}</span>\n            </button>\n          )}\n          <UI.Heading className={classNames.heading} style={{ margin: 0, color: '#ffffff' }}>\n            {title}\n          </UI.Heading>\n        </UI.Box>\n        {description && (\n          <UI.Text className={classNames.text} style={{ opacity: 0.8 }}>\n            {description}\n          </UI.Text>\n        )}\n      </UI.Box>\n    )\n  }\n\n  const renderSections = () => {\n    // Explicit sections with filter\n    if (Array.isArray(sections) && sections.length) {\n      return sections.map((sec, sIdx) => {\n        const id = sec.id || `sec-${sIdx}`\n        const header = renderSectionHeader(\n          id,\n          sec.title,\n          sec.description,\n          sec.collapsible !== false,\n          sec.defaultOpen !== false,\n        )\n        const baselineOpen = !!(sec.defaultOpen !== false || sec.collapsible === false)\n        const isOpen = openSectionIds.has(id) ? !baselineOpen : baselineOpen\n        const items = (sec.filter ? data.filter(sec.filter) : data) || []\n        return (\n          <React.Fragment key={`frag-${id}`}>\n            {header}\n            {(!sec.collapsible || isOpen) && (\n              <UI.Box style={styles.list}>\n                {items.map((item, idx) => (\n                  <Row key={getId(item, idx)} item={item} index={idx} />\n                ))}\n              </UI.Box>\n            )}\n          </React.Fragment>\n        )\n      })\n    }\n\n    // groupBy mode\n    if (typeof groupBy === 'function') {\n      const buckets = new Map()\n      data.forEach((item) => {\n        const key = groupBy(item) ?? 'Other'\n        if (!buckets.has(key)) buckets.set(key, [])\n        buckets.get(key).push(item)\n      })\n      const titles =\n        sectionOrder && sectionOrder.length\n          ? sectionOrder.filter((t) => buckets.has(t))\n          : Array.from(buckets.keys())\n      return titles.map((title, sIdx) => {\n        const id = `grp-${sIdx}-${title}`\n        const header = renderSectionHeader(id, title, null, true, true)\n        const baselineOpen = true\n        const isOpen = openSectionIds.has(id) ? !baselineOpen : baselineOpen\n        return (\n          <React.Fragment key={`frag-${id}`}>\n            {header}\n            {isOpen && (\n              <UI.Box style={styles.list}>\n                {buckets.get(title).map((item, idx) => (\n                  <Row key={getId(item, idx)} item={item} index={idx} />\n                ))}\n              </UI.Box>\n            )}\n          </React.Fragment>\n        )\n      })\n    }\n\n    // default (no sections)\n    return (\n      <UI.Box style={styles.list}>\n        {data.map((item, idx) => (\n          <Row key={getId(item, idx)} item={item} index={idx} />\n        ))}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container className={classNames.container} style={styles.container}>\n      <UI.Box className={classNames.header} style={styles.header}>\n        <UI.Box\n          className={classNames.headerLeft}\n          style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\n        >\n          {startIcon && <UI.Box style={styles.icon}>{startIcon}</UI.Box>}\n          <span className={classNames.title}>{headerTitle}</span>\n        </UI.Box>\n      </UI.Box>\n      {headerDescription && (\n        <UI.Box className={classNames.headerDescription} style={styles.headerDescription}>\n          {headerDescription}\n        </UI.Box>\n      )}\n      {renderSections()}\n    </UI.Container>\n  )\n}\n"],"names":["getUIComponents","Container","Box","Button","Input","Select","Textarea","Table","Thead","Tbody","Tr","Th","Td","Text","Heading","Stack","HStack","VStack","Card","Alert","Badge","Grid","GridItem","Flex","Label","getUIClasses","uiLibrary","arguments","length","undefined","component","variant","libraryClasses","tailwind","default","secondary","checkbox","error","success","warning","info","shadcn","componentClasses","_typeof","flattenObject","obj","prefix","flattened","key","Object","prototype","hasOwnProperty","call","newKey","concat","Array","isArray","assign","unflattenObject","flat","result","keys","split","current","i","getInputType","value","fieldConfig","_objectSpread","type","items","rows","includes","toLowerCase","startsWith","match","parseJsonSafely","jsonString","data","JSON","parse","message","getDisplayName","pop","replace","l","toUpperCase","trim","_ref","_ref$uiLibrary","onSave","onCancel","onFieldChange","_ref$saveButtonText","saveButtonText","_ref$cancelButtonText","cancelButtonText","_ref$initialJson","initialJson","_ref$customStyles","customStyles","_ref$showControls","showControls","_ref$pagination","pagination","_ref$pageSize","pageSize","_ref$cacheSize","cacheSize","_ref$initialPage","initialPage","onPageChange","_ref$paginationCompon","paginationComponent","PaginationComponent","_ref$paginationRender","paginationRenderer","props","_objectWithoutProperties","_excluded","_useState2","_slicedToArray","useState","jsonInput","setJsonInput","_useState4","tableData","setTableData","_useState6","setError","_useState8","editableData","setEditableData","_useState0","currentPage","setCurrentPage","pageCacheRef","useRef","Map","lruRef","UI","parseJson","useCallback","parsed","_toConsumableArray","arrayData","err","useEffect","clear","totalRows","useMemo","totalPages","Math","max","ceil","goToPage","nextPage","clamped","min","prevPage","nextPageFn","_jsx","className","style","container","children","_jsxs","gap","stack","alert","errorText","columns","allKeys","Set","forEach","row","add","from","getColumns","page","safePage","has","idx","indexOf","splice","push","get","start","end","slice","set","evictPage","shift","getPageSlice","overflowX","tableContainer","table","map","column","textAlign","th","rowIndex","td","onChange","e","newData","handleCellEdit","target","border","background","input","pagerProps","marginTop","Comp","display","alignItems","justifyContent","onClick","disabled","opacity","renderTable","controlButtons","flatData","saveButton","cancelButton","Fields","_classNames","styles","_styleProps","_ref$renderers","renderers","_ref$columns","_ref$fieldConfig","_ref$sections","sections","_ref$includeUnsection","includeUnsectioned","_ref$unsectionedTitle","unsectionedTitle","formData","setFormData","originalFormData","setOriginalFormData","setParsedJson","_useState10","tagInputs","setTagInputs","_useState12","sectionOpenIds","setSectionOpenIds","handleFieldChange","newFormData","_defineProperty","nestedData","renderFormField","fieldTypeConfig","displayName","renderCheckboxField","renderSelectField","renderMultiSelectField","renderTextareaField","renderSpecialInputField","renderNumberField","renderSliderField","_renderTagsField","renderArrayField","renderObjectField","renderTextInputField","_fieldTypeConfig$min","_fieldTypeConfig$max","_fieldTypeConfig$step","_fieldTypeConfig$defa","step","marginBottom","fieldContainer","label","fontWeight","fieldLabel","Number","width","minWidth","cursor","checked","_fieldTypeConfig$opti","select","options","option","_fieldTypeConfig$opti2","selectedValues","flexDirection","newValues","filter","v","fontSize","text","minHeight","textarea","val","parseFloat","every","tags","newTag","addTag","tag","t","prev","removeTag","pillStyle","padding","borderRadius","color","pillCloseStyle","lineHeight","flexWrap","onKeyDown","preventDefault","placeholder","flex","stringify","_unused","fontFamily","_unused2","formCard","used","sectionBlocks","sec","secId","id","listed","fields","k","sectionKeys","content","fieldsPerColumn","columnGroups","startIndex","endIndex","gridStyles","gridTemplateColumns","formGrid","group","formColumn","baselineOpen","defaultOpen","collapsible","open","title","next","margin","description","otherBlock","remaining","formStack","formEntries","entries","_ref2","_ref3","columnFields","columnIndex","_ref4","_ref5","renderFormFields","List","_ref$data","_ref$classNames","classNames","_ref$styles","styleProps","_uiLibrary","_ref$startIcon","startIcon","_ref$headerTitle","headerTitle","_ref$headerDescriptio","headerDescription","_ref$mode","mode","_ref$parentIcon","parentIcon","_ref$parentOpenIcon","parentOpenIcon","_ref$parentClosedIcon","parentClosedIcon","_ref$childIcon","childIcon","_ref$hoverIcon","hoverIcon","_ref$onItemClick","onItemClick","_ref$onToggle","onToggle","_ref$groupBy","groupBy","_ref$sectionOrder","sectionOrder","palette","bg","headerText","rowHoverBg","icon","defaults","header","textTransform","letterSpacing","list","parent","child","paddingLeft","sectionHeader","openIds","setOpenIds","openSectionIds","setOpenSectionIds","getId","item","_item$id","parentPath","DefaultParentOpenIcon","DefaultParentClosedIcon","DefaultParentIcon","DefaultChildIcon","DefaultHoverIcon","Row","_ref2$depth","depth","index","_ref2$parentPath","hovered","setHovered","isParent","itemId","toggle","onMouseEnter","onMouseLeave","_Fragment","transition","cIdx","_Row","renderSectionHeader","isOpen","sectionHeaderLeft","heading","headerLeft","sIdx","React","Fragment","buckets","_groupBy","renderSections","spaces"],"mappings":"w9FAGaA,EAAkB,WAG7B,MAAO,CACLC,UAAW,MACXC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,SAAU,WACVC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,QAAS,KACTC,MAAO,MACPC,OAAQ,MACRC,OAAQ,MACRC,KAAM,MACNC,MAAO,MACPC,MAAO,OACPC,KAAM,MACNC,SAAU,MACVC,KAAM,MACNC,MAAO,QAEX,EAEaC,EAAe,WAA0D,IAAzDC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAAUG,EAASH,UAAAC,OAAA,EAAAD,kBAAAE,EAAEE,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UA+FtE,GAAkB,WAAdD,EACF,MAAO,GAGT,IAAMM,EAlGW,CACfC,SAAU,CACRhC,UAAW,yCACXC,IAAK,QACLC,OAAQ,CACN+B,QACE,yNACFC,UACE,4MAEJ/B,MAAO,CACL8B,QACE,kKACFE,SAAU,qEAEZ/B,OACE,6IACFC,SACE,kLACFC,MAAO,sCACPC,MAAO,aACPC,MAAO,oCACPC,GAAI,mBACJC,GAAI,iFACJC,GAAI,oDACJC,KAAM,gBACNC,QAAS,wCACTC,MAAO,YACPC,OAAQ,8BACRC,OAAQ,0BACRC,KAAM,iDACNC,MAAO,CACLkB,MAAO,8DACPC,QAAS,oEACTC,QAAS,uEACTC,KAAM,kEAERpB,MACE,oGACFC,KAAM,OACNC,SAAU,GACVC,KAAM,OACNC,MAAO,2CAETiB,OAAQ,CACNxC,UAAW,yBACXC,IAAK,QACLC,OAAQ,CACN+B,QACE,6UACFC,UACE,oVAEJ/B,MAAO,CACL8B,QACE,+VACFE,SACE,iOAEJ/B,OACE,6PACFC,SACE,uSACFC,MAAO,gCACPC,MAAO,kBACPC,MAAO,6BACPC,GAAI,8EACJC,GAAI,mGACJC,GAAI,iDACJC,KAAM,gCACNC,QAAS,oDACTC,MAAO,0BACPC,OAAQ,iBACRC,OAAQ,0BACRC,KAAM,2DACNC,MAAO,CACLkB,MACE,oPACFC,QACE,4JACFC,QACE,4JACFC,KAAM,6JAERpB,MACE,yKACFC,KAAM,OACNC,SAAU,GACVC,KAAM,OACNC,MACE,+FAQ0BE,GAChC,IAAKM,IAAmBA,EAAeF,GACrC,MAAO,GAGT,IAAMY,EAAmBV,EAAeF,GACxC,MAAgC,WAA5Ba,EAAOD,GACFA,EAAiBX,IAAYW,EAAgB,SAAY,GAG3DA,CACT,ECtIaE,EAAgB,SAACC,GAAqB,IAAhBC,EAAMnB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtCoB,EAAY,CAAA,EAEhB,IAAK,IAAIC,KAAOH,EACd,GAAII,OAAOC,UAAUC,eAAeC,KAAKP,EAAKG,GAAM,CAClD,IAAMK,EAASP,EAAM,GAAAQ,OAAMR,EAAM,KAAAQ,OAAIN,GAAQA,EAErB,WAApBL,EAAOE,EAAIG,KAAkC,OAAbH,EAAIG,IAAkBO,MAAMC,QAAQX,EAAIG,IAG1ED,EAAUM,GAAUR,EAAIG,GAFxBC,OAAOQ,OAAOV,EAAWH,EAAcC,EAAIG,GAAMK,GAIrD,CAGF,OAAON,CACT,EAOaW,EAAkB,SAACC,GAC9B,IAAMC,EAAS,CAAA,EAEf,IAAK,IAAIZ,KAAOW,EAAM,CAIpB,IAHA,IAAME,EAAOb,EAAIc,MAAM,KACnBC,EAAUH,EAELI,EAAI,EAAGA,EAAIH,EAAKjC,OAAS,EAAGoC,IAC9BD,EAAQF,EAAKG,MAChBD,EAAQF,EAAKG,IAAM,CAAA,GAErBD,EAAUA,EAAQF,EAAKG,IAGzBD,EAAQF,EAAKA,EAAKjC,OAAS,IAAM+B,EAAKX,EACxC,CAEA,OAAOY,CACT,EASaK,EAAe,SAACC,GAAsC,IAA/BlB,EAAGrB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIwC,EAAWxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAA,EAE1D,GAAIwC,EAAYnB,GACd,OAAAoB,EAAA,CAASC,KAAMF,EAAYnB,GAAKqB,MAASF,EAAYnB,IAIvD,GAAqB,kBAAVkB,EAAqB,MAAO,CAAEG,KAAM,YAC/C,GAAqB,iBAAVH,EAAoB,MAAO,CAAEG,KAAM,UAC9C,GAAId,MAAMC,QAAQU,GAAQ,MAAO,CAAEG,KAAM,QAASC,MAAOJ,GACzD,GAAqB,WAAjBvB,EAAOuB,IAAgC,OAAVA,EAAgB,MAAO,CAAEG,KAAM,UAGhE,GAAqB,iBAAVH,EAAoB,CAE7B,GAAIA,EAAMtC,OAAS,IAAK,MAAO,CAAEyC,KAAM,WAAYE,KAAM,GAGzD,GAAIL,EAAMM,SAAS,MAAQxB,EAAIyB,cAAcD,SAAS,SACpD,MAAO,CAAEH,KAAM,SAIjB,GAAIH,EAAMQ,WAAW,SAAW1B,EAAIyB,cAAcD,SAAS,OACzD,MAAO,CAAEH,KAAM,OAIjB,GAAIH,EAAMS,MAAM,wBAA0B3B,EAAIyB,cAAcD,SAAS,QACnE,MAAO,CAAEH,KAAM,QAIjB,GAAIrB,EAAIyB,cAAcD,SAAS,YAC7B,MAAO,CAAEH,KAAM,WAEnB,CAGA,MAAO,CAAEA,KAAM,OACjB,EAOaO,EAAkB,SAACC,GAC9B,IAEE,MAAO,CAAEvC,SAAS,EAAMwC,KADTC,KAAKC,MAAMH,GAE5B,CAAE,MAAOxC,GACP,MAAO,CAAEC,SAAS,EAAOD,MAAOA,EAAM4C,QACxC,CACF,EA0BaC,EAAiB,SAAClC,GAC7B,OAAOA,EACJc,MAAM,KACNqB,MACAC,QAAQ,WAAY,OACpBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,SAACC,GAAC,OAAKA,EAAEC,aAAa,GACvCC,MACL,kPCnIMhF,EAAQ,SAAHiF,GAoBL,IAAAC,EAAAD,EAnBJ9D,UAAAA,OAAS,IAAA+D,EAAG,SAAQA,EACpBC,EAAMF,EAANE,OACAC,EAAQH,EAARG,SACAC,EAAaJ,EAAbI,cAAaC,EAAAL,EACbM,eAAAA,OAAc,IAAAD,EAAG,eAAcA,EAAAE,EAAAP,EAC/BQ,iBAAAA,OAAgB,IAAAD,EAAG,aAAYA,EAAAE,EAAAT,EAC/BU,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAAX,EAChBY,aAAAA,OAAY,IAAAD,EAAG,CAAA,EAAEA,EAAAE,EAAAb,EACjBc,aAAAA,OAAY,IAAAD,GAAOA,EAAAE,EAAAf,EAEnBgB,WAAAA,OAAU,IAAAD,GAAOA,EAAAE,EAAAjB,EACjBkB,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EAAAE,EAAAnB,EACboB,UAAAA,OAAS,IAAAD,EAAG,EAACA,EAAAE,EAAArB,EACbsB,YAAAA,OAAW,IAAAD,EAAG,EAACA,EACfE,EAAYvB,EAAZuB,aAAYC,EAAAxB,EAEZyB,oBAAqBC,OAAmB,IAAAF,EAAG,KAAIA,EAAAG,EAAA3B,EAC/C4B,mBAAAA,OAAkB,IAAAD,EAAG,KAAIA,EACtBE,EAAKC,EAAA9B,EAAA+B,GAE+CC,EAAAC,EAArBC,EAAAA,SAASxB,GAAY,GAAhDyB,EAASH,EAAA,GAAEI,EAAYJ,EAAA,GACkBK,EAAAJ,EAAdC,EAAAA,SAAS,MAAK,GAAzCI,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACQG,EAAAP,EAAZC,EAAAA,SAAS,IAAG,GAA/BrF,EAAK2F,EAAA,GAAEC,EAAQD,EAAA,GACgCE,EAAAT,EAAdC,EAAAA,SAAS,MAAK,GAA/CS,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC6CG,EAAAZ,EAA3CC,EAAAA,SAASZ,EAAc,EAAIA,EAAc,GAAE,GAA1EwB,EAAWD,EAAA,GAAEE,GAAcF,EAAA,GAE5BG,GAAeC,EAAAA,OAAO,IAAIC,KAC1BC,GAASF,SAAO,IAEhBG,GFzCC,CACL3I,UAAW,MACXC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,SAAU,WACVC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,QAAS,KACTC,MAAO,MACPC,OAAQ,MACRC,OAAQ,MACRC,KAAM,MACNC,MAAO,MACPC,MAAO,OACPC,KAAM,MACNC,SAAU,MACVC,KAAM,MACNC,MAAO,SEmBHqH,GAAYC,EAAAA,YAChB,WAA4B,IAA3BjE,EAAUlD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGgG,EAIZ,GAHAM,EAAS,IACTF,EAAa,MAERlD,EAAWU,OAKhB,IACE,IAAMwD,EAAShE,KAAKC,MAAMH,GAE1B,GAAItB,MAAMC,QAAQuF,GAAS,CACzB,GAAsB,IAAlBA,EAAOnH,OAET,YADAqG,EAAS,2BAGXF,EAAagB,GACbX,EAAeY,EAAKD,GACtB,KAAO,IAAsB,WAAlBpG,EAAOoG,IAAkC,OAAXA,EAMvC,YADAd,EAAS,8CAJT,IAAMgB,EAAY,CAACF,GACnBhB,EAAakB,GACbb,EAAe,GAAA9E,OAAK2F,GAItB,CACF,CAAE,MAAOC,GACPjB,mBAAQ3E,OAAkB4F,EAAIjE,SAChC,MAxBEgD,EAAS,8BAyBb,EACA,CAACN,IAGHwB,EAAAA,UAAU,WACJjD,GACF0B,EAAa1B,GACb2C,GAAU3C,IACe,KAAhBA,IAET0B,EAAa,IACbG,EAAa,MACbK,EAAgB,MAChBH,EAAS,IAEb,EAAG,CAAC/B,EAAa2C,KAGjBM,EAAAA,UAAU,WAERX,GAAazE,QAAQqF,QACrBT,GAAO5E,QAAU,GAEjBwE,GAAezB,EAAc,EAAIA,EAAc,EACjD,EAAG,CAACqB,EAAcrB,IAIlB,IAqCMuC,GAAYC,EAAAA,QAChB,WAAA,OAAO/F,MAAMC,QAAQ2E,GAAgBA,EAAavG,OAAS,CAAC,EAC5D,CAACuG,IAEGoB,GAAaD,EAAAA,QAAQ,WACzB,OAAK9C,EACEgD,KAAKC,IAAI,EAAGD,KAAKE,MAAML,IAAa,GAAKG,KAAKC,IAAI,EAAG/C,KADpC,CAE1B,EAAG,CAACF,EAAY6C,GAAW3C,IA2BrBiD,GAAW,SAACC,GAChB,IAAMC,EAAUL,KAAKM,IAAIN,KAAKC,IAAI,EAAGG,GAAWL,IAC5CM,IAAYvB,IACdC,GAAesB,GACa,mBAAjB9C,GAA6BA,EAAa8C,GAEzD,EAEME,GAAW,WAAH,OAASJ,GAASrB,EAAc,EAAE,EAC1C0B,GAAa,WAAH,OAASL,GAASrB,EAAc,EAAE,EAuHlD,OACE2B,EAAAA,IAACrB,GAAG3I,UAASmE,EAAAA,EAAA,CACX8F,UAAWzI,EAAaC,EAAW,aACnCyI,MAAO/D,EAAagE,WAChB/C,GAAK,GAAA,CAAAgD,SAETC,EAAAA,KAAC1B,GAAG3H,OAAM,CACRiJ,UAAWzI,EAAaC,EAAW,UACnCyI,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAaoE,OAAQH,UAI7ChI,GACC4H,MAACrB,GAAGzH,MAAK,CACP+I,UAAWzI,EAAaC,EAAW,QAAS,SAC5CyI,MAAO/D,EAAaqE,MAAMJ,SAE1BJ,EAAAA,IAACrB,GAAG/H,KAAI,CAACsJ,MAAO/D,EAAasE,UAAUL,SAAEhI,MAtI/B,WAClB,IAAK8F,GAAwC,IAAxBA,EAAavG,OAAc,OAAO,KAEvD,IAAM+I,EA3DW,WACjB,IAAK7C,GAAkC,IAArBA,EAAUlG,OAAc,MAAO,GAEjD,IAAMgJ,EAAU,IAAIC,IAKpB,OAJA/C,EAAUgD,QAAQ,SAACC,GACjB9H,OAAOY,KAAKkH,GAAKD,QAAQ,SAAC9H,GAAG,OAAK4H,EAAQI,IAAIhI,EAAI,EACpD,GAEOO,MAAM0H,KAAKL,EACpB,CAkDkBM,GACV3G,EAAOiC,EAxCM,SAAC2E,GACpB,IAAK3E,IAAejD,MAAMC,QAAQ2E,GAAe,OAAOA,GAAgB,GACxE,IAAMiD,EAAW5B,KAAKM,IAAIN,KAAKC,IAAI,EAAG0B,GAAO5B,IAE7C,GAAIf,GAAazE,QAAQsH,IAAID,GAAW,CAEtC,IAAME,EAAM3C,GAAO5E,QAAQwH,QAAQH,GAGnC,OAFY,IAARE,GAAY3C,GAAO5E,QAAQyH,OAAOF,EAAK,GAC3C3C,GAAO5E,QAAQ0H,KAAKL,GACb5C,GAAazE,QAAQ2H,IAAIN,EAClC,CACA,IAAMO,GAASP,EAAW,GAAK1E,EACzBkF,EAAMD,EAAQjF,EACdmF,EAAQ1D,EAAa0D,MAAMF,EAAOC,GAKxC,IAHApD,GAAazE,QAAQ+H,IAAIV,EAAUS,GACnClD,GAAO5E,QAAQ0H,KAAKL,GAEbzC,GAAO5E,QAAQnC,OAAS4H,KAAKC,IAAI,EAAG7C,IAAY,CACrD,IAAMmF,EAAYpD,GAAO5E,QAAQiI,QAChB,MAAbD,GAAmBvD,GAAazE,QAAO,OAAQgI,EACrD,CACA,OAAOF,CACT,CAiB4BI,CAAa3D,GAAeH,EAEtD,OACEmC,EAAAA,KAAC1B,GAAG1I,IAAG,CACLgK,UAAWzI,EAAaC,EAAW,OACnCyI,MAAK/F,EAAA,CAAI8H,UAAW,QAAW9F,EAAa+F,gBAAiB9B,SAAA,CAE7DC,EAAAA,KAAC1B,GAAGrI,MAAK,CAAC2J,UAAWzI,EAAaC,EAAW,SAAUyI,MAAO/D,EAAagG,MAAM/B,SAAA,CAC/EJ,EAAAA,IAACrB,GAAGpI,MAAK,CAAC0J,UAAWzI,EAAaC,EAAW,SAAS2I,SACpDJ,EAAAA,IAACrB,GAAGlI,GAAE,CAACwJ,UAAWzI,EAAaC,EAAW,MAAM2I,SAC7CM,EAAQ0B,IAAI,SAACC,GAAM,OAClBrC,EAAAA,IAACrB,GAAGjI,GAAE,CAEJuJ,UAAWzI,EAAaC,EAAW,MACnCyI,MAAK/F,EAAA,CAAImI,UAAW,UAAanG,EAAaoG,IAAKnC,SAElDnF,EAAeoH,IAJXA,EAKC,OAIdrC,EAAAA,IAACrB,GAAGnI,MAAK,CAACyJ,UAAWzI,EAAaC,EAAW,SAAS2I,SACnD9F,EAAK8H,IAAI,SAACtB,EAAK0B,GAAQ,OACtBxC,EAAAA,IAACrB,GAAGlI,GAAE,CAAgBwJ,UAAWzI,EAAaC,EAAW,MAAM2I,SAC5DM,EAAQ0B,IAAI,SAACC,GAAM,OAClBrC,EAAAA,IAACrB,GAAGhI,GAAE,CAEJsJ,UAAWzI,EAAaC,EAAW,MACnCyI,MAAO/D,EAAasG,GAAGrC,SAEvBJ,EAAAA,IAACrB,GAAGxI,MAAK,CACPiE,KAAK,OACLH,MAAO6G,EAAIuB,IAAW,GACtBK,SAAU,SAACC,GAAC,OAvHT,SAACH,EAAUzJ,EAAKkB,GACrC,IAAM2I,EAAO7D,EAAOb,GACpB0E,EAAQJ,GAAUzJ,GAAOkB,EACzBkE,EAAgByE,GAEZjH,GACFA,EAAc5C,EAAKkB,EAAO2I,EAE9B,CAgHsBC,CACEtG,GAAc8B,EAAc,GAAK5B,EAAW+F,EAAWA,EACvDH,EACAM,EAAEG,OAAO7I,MACV,EAEHgG,UAAWzI,EAAaC,EAAW,SACnCyI,MAAK/F,EAAA,CACH4I,OAAQ,OACRC,WAAY,eACT7G,EAAa8G,UAlBfZ,EAqBC,IAxBAG,EA0BJ,QAIbjG,GACC+C,GAAa,GACZ,WACC,IAAM4D,EAAa,CACjB7E,YAAAA,EACAiB,WAAAA,GACA7C,SAAAA,EACAE,UAAAA,EACA+C,SAAAA,GACAI,SAAAA,GACAH,SAAUI,IAEZ,GAAkC,mBAAvB5C,EACT,OAAO6C,EAAAA,IAACrB,GAAG1I,IAAG,CAACiK,MAAO,CAAEiD,UAAW,QAAS/C,SAAEjD,EAAmB+F,KAEnE,GAAIjG,EAAqB,CACvB,IAAMmG,EAAOnG,EACb,OACE+C,EAAAA,IAACrB,GAAG1I,IAAG,CAACiK,MAAO,CAAEiD,UAAW,QAAS/C,SACnCJ,EAAAA,IAACoD,EAAIjJ,EAAA,CAAA,EAAK+I,KAGhB,CACA,OACE7C,EAAAA,KAAC1B,GAAG5H,OAAM,CACRkJ,UAAWzI,EAAaC,EAAW,UACnCyI,MAAK/F,EAAA,CACHkJ,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBJ,UAAW,QACPhH,EAAaI,YAAc,IAC/B6D,SAAA,CAEFJ,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QAAS1D,GACT2D,SAAUpF,GAAe,EACzB4B,UAAWzI,EAAaC,EAAW,SAAU,aAC7CyI,MAAO,CAAEwD,QAASrF,GAAe,EAAI,GAAM,GAAI+B,SAChD,SAGDC,EAAAA,KAAC1B,GAAG/H,KAAI,CAAAwJ,SAAA,CACL/B,EAAY,MAAIiB,MAEnBU,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QAASzD,GACT0D,SAAUpF,GAAeiB,GACzBW,UAAWzI,EAAaC,EAAW,SAAU,aAC7CyI,MAAO,CAAEwD,QAASrF,GAAeiB,GAAa,GAAM,GAAIc,SACzD,WAKP,CArDC,KAwDT,CAuBOuD,GAEAtH,GAAgB6B,GACfmC,EAAAA,KAAC1B,GAAG5H,OAAM,CACRuJ,IAAI,IACJL,UAAWzI,EAAaC,EAAW,UACnCyI,MAAK/F,EAAA,CAAImG,IAAK,SAAU6C,UAAW,QAAWhH,EAAayH,gBAAiBxD,SAAA,CAE5EJ,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QA3NO,WACjB,GAAI/H,GAAUyC,EAAc,CAC1B,IAAM2F,EAAW3F,EAAakE,IAAI,SAACtB,GAAG,OAAA3G,KAAW2G,EAAG,GACpDrF,EAAOyC,EAAc2F,EACvB,CACF,EAuNY5D,UAAWzI,EAAaC,EAAW,SAAU,WAC7CyI,MAAO/D,EAAa2H,WAAW1D,SAE9BvE,IAEHmE,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QA3NS,WACf3F,GACFM,EAAeY,EAAKlB,IAElBnC,GACFA,GAEJ,EAqNYuE,UAAWzI,EAAaC,EAAW,SAAU,aAC7CyI,MAAO/D,EAAa4H,aAAa3D,SAEhCrE,YAOf,oPCrUMiI,EAAS,SAAHzI,GAsBNA,EApBJ0I,YAAgB1I,EAChB2I,OAAQC,IAAgBC,EAAA7I,EACxB8I,UAAAA,OAAS,IAAAD,EAAG,CAAA,EAAEA,EAAA7I,EAEd9D,UAAAA,IACAgE,EAAMF,EAANE,OACAC,EAAQH,EAARG,SACAC,EAAaJ,EAAbI,cAAaC,EAAAL,EACbM,eAAAA,OAAc,IAAAD,EAAG,eAAcA,EAAAE,EAAAP,EAC/BQ,iBAAAA,OAAgB,IAAAD,EAAG,aAAYA,EAAAE,EAAAT,EAC/BU,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAAX,EAChBY,aAAAA,OAAY,IAAAD,EAAG,CAAA,EAAEA,EAAAE,EAAAb,EACjBc,aAAAA,OAAY,IAAAD,GAAOA,EAAAkI,EAAA/I,EAEnBmF,QAAAA,OAAO,IAAA4D,EAAG,EAACA,EAAAC,EAAAhJ,EACXrB,YAAAA,OAAW,IAAAqK,EAAG,CAAA,EAAEA,EAAAC,EAAAjJ,EAChBkJ,SAAAA,OAAQ,IAAAD,EAAG,KAAIA,EAAAE,EAAAnJ,EACfoJ,mBAAAA,OAAkB,IAAAD,GAAQA,EAAAE,EAAArJ,EAC1BsJ,iBAAAA,OAAgB,IAAAD,EAAG,QAAOA,EACvBxH,EAAKC,EAAA9B,EAAA+B,GAK+CC,EAAAC,EAArBC,EAAAA,SAASxB,GAAY,GAAhDyB,EAASH,EAAA,GAAEI,EAAYJ,EAAA,GACcK,EAAAJ,EAAZC,EAAAA,SAAS,IAAG,GAArCqH,EAAQlH,EAAA,GAAEmH,EAAWnH,EAAA,GACgCG,EAAAP,EAAZC,EAAAA,SAAS,IAAG,GAArDuH,EAAgBjH,EAAA,GAAEkH,EAAmBlH,EAAA,GACnCmH,EAA+B1H,EAAdC,EAAAA,SAAS,MAAK,GAAlB,GACgBW,EAAAZ,EAAZC,EAAAA,SAAS,IAAG,GAA/BrF,EAAKgG,EAAA,GAAEJ,EAAQI,EAAA,GAEwB+G,EAAA3H,EAAZC,EAAAA,SAAS,IAAG,GAAvC2H,GAASD,EAAA,GAAEE,GAAYF,EAAA,GAEuCG,GAAA9H,EAAzBC,EAAAA,SAAS,WAAA,OAAM,IAAImD,GAAK,GAAC,GAA9D2E,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GAGlC3G,GAAK,CACT3I,UAAWqO,EAAUrO,WAAa,MAClCC,IAAKoO,EAAUpO,KAAO,MACtBC,OAAQmO,EAAUnO,QAAU,SAC5BC,MAAOkO,EAAUlO,OAAS,QAC1BC,OAAQiO,EAAUjO,QAAU,SAC5BC,SAAUgO,EAAUhO,UAAY,WAChCO,KAAMyN,EAAUzN,MAAQ,OACxBC,QAASwN,EAAUxN,SAAW,KAC9BG,OAAQqN,EAAUrN,QAAU,MAC5BD,OAAQsN,EAAUtN,QAAU,MAC5BE,KAAMoN,EAAUpN,MAAQ,MACxBC,MAAOmN,EAAUnN,OAAS,MAC1BK,MAAO8M,EAAU9M,OAAS,SAMtBqH,GAAYC,EAAAA,YAChB,WAA4B,IACpBlF,EAASgB,EADNjD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGgG,GAGZ,GAAI/D,EAAOtB,QAAS,CAClB6M,EAAcvL,EAAOkB,MACrB,IAAM/B,EAAYH,EAAcgB,EAAOkB,MACvCkK,EAAYjM,GACZmM,EAAmB9K,EAAA,GAAMrB,IACzBkF,EAAS,GACX,MACEA,EAASrE,EAAOvB,OAChB8M,EAAc,MACdH,EAAY,CAAA,GACZE,EAAoB,CAAA,EAExB,EACA,CAACvH,IAGHwB,EAAAA,UAAU,WACJjD,GACF0B,EAAa1B,GACb2C,GAAU3C,IACe,KAAhBA,IAET0B,EAAa,IACboH,EAAY,CAAA,GACZE,EAAoB,CAAA,GACpBC,EAAc,MACdlH,EAAS,IAEb,EAAG,CAAC/B,EAAa2C,KAIjB,IAAM6G,GAAoB,SAAC1M,EAAKkB,GAC9B,IAAMyL,EAAWvL,EAAAA,EAAA,CAAA,EACZ2K,GAAQ,CAAA,EAAAa,EAAA,CAAA,EACV5M,EAAMkB,IAIT,GAFA8K,EAAYW,GAER/J,EAAe,CACjB,IAAMiK,EAAanM,EAAgBiM,GACnC/J,EAAc5C,EAAKkB,EAAO2L,EAC5B,CACF,EAgBMC,GAAkB,SAAC9M,EAAKkB,GAC5B,IAAM6L,EAAkB9L,EAAaC,EAAOlB,EAAKmB,GAC3C6L,EAAc9K,EAAelC,GAGnC,OAAQ+M,EAAgB1L,MACtB,IAAK,WACH,OAAO4L,GAAoBjN,EAAKkB,EAAO8L,GACzC,IAAK,SACH,OAAOE,GAAkBlN,EAAKkB,EAAO8L,EAAaD,GACpD,IAAK,eACH,OAAOI,GAAuBnN,EAAKkB,EAAO8L,EAAaD,GACzD,IAAK,WACH,OAAOK,GAAoBpN,EAAKkB,EAAO8L,EAAaD,GACtD,IAAK,QACL,IAAK,MACL,IAAK,OACL,IAAK,WACH,OAAOM,GAAwBrN,EAAKkB,EAAO8L,EAAaD,GAC1D,IAAK,SACH,OAAOO,GAAkBtN,EAAKkB,EAAO8L,GACvC,IAAK,SACH,OAAOO,GAAkBvN,EAAKkB,EAAO8L,EAAaD,GACpD,IAAK,OACH,OAAOS,GAAiBxN,EAAKkB,EAAO8L,EAAaD,GACnD,IAAK,QACH,OAAOU,GAAiBzN,EAAKkB,EAAO8L,EAAaD,GACnD,IAAK,SACH,OAAOW,GAAkB1N,EAAKkB,EAAO8L,GACvC,QACE,OAAOW,GAAqB3N,EAAKkB,EAAO8L,GAE9C,EAGMO,GAAoB,SAACvN,EAAKkB,EAAO8L,EAAaD,GAAoB,IAAAa,EAAAC,EAAAC,EAAAC,EAChEjH,EAAyB,QAAtB8G,EAAGb,EAAgBjG,WAAG,IAAA8G,EAAAA,EAAI,EAC7BnH,EAAyB,QAAtBoH,EAAGd,EAAgBtG,WAAG,IAAAoH,EAAAA,EAAI,IAC7BG,EAA2B,QAAvBF,EAAGf,EAAgBiB,YAAI,IAAAF,EAAAA,EAAI,EAC/B/M,EAAmC,iBAAlBgL,EAAS/L,GAAoB+L,EAAS/L,WAAI+N,EAAIhB,EAAe,eAAQ,IAAAgB,EAAAA,EAAIjH,EAEhG,OACEQ,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UA7GqB,GA8GrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CAAC0I,UAhHW,GAgHkCC,MAAO/D,EAAa+K,MAAM9G,SAC/EJ,EAAAA,IAACrB,GAAG/H,KAAI,CAACqJ,UAjHU,GAiHkCC,MAAK/F,EAAA,CAAIgN,WAAY,OAAUhL,EAAaiL,YAAahH,SAC3G2F,MAGL1F,EAAAA,KAAA,MAAA,CAAKH,MAAO,CAAEmD,QAAS,OAAQC,WAAY,SAAUhD,IAAK,WAAYF,UACpEJ,EAAAA,IAAA,QAAA,CACE5F,KAAK,QACLyF,IAAKA,EACLL,IAAKA,EACLuH,KAAMA,EACN9M,MAAOH,EACP4I,SAAU,SAACC,GAAC,OAAK8C,GAAkB1M,EAAKsO,OAAO1E,EAAEG,OAAO7I,OAAO,EAC/DgG,UA7HiB,GA8HjBC,MAAO,CAAEoH,MAAO,UAElBtH,EAAAA,IAACrB,GAAG/H,KAAI,CAACqJ,UAhIU,GAgIkCC,MAAO,CAAEqH,SAAU,OAAQjF,UAAW,SAAUlC,SAClGtG,SArBAf,EA0BX,EAGMiN,GAAsB,SAACjN,EAAKkB,EAAO8L,GACvC,OACE/F,EAAAA,IAACrB,GAAG1I,IAAG,CAELgK,UA7IqB,GA8IrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAEhEC,EAAAA,KAAC1B,GAAGpH,MAAK,CACP0I,UAjJmB,GAkJnBC,MAAK/F,EAAA,CACHkJ,QAAS,OACTC,WAAY,SACZhD,IAAK,SACLkH,OAAQ,WACLrL,EAAa+K,OAChB9G,UAEFJ,EAAAA,IAAA,QAAA,CACE5F,KAAK,WACLqN,QAAS3C,EAAS/L,KAAQ,EAC1B2J,SAAU,SAACC,GAAC,OAAK8C,GAAkB1M,EAAK4J,EAAEG,OAAO2E,QAAQ,EACzDxH,UA9JiB,GA+JjBC,MAAO/D,EAAahE,WAEtB6H,EAAAA,IAACrB,GAAG/H,KAAI,CACNqJ,UAlKiB,GAmKjBC,MAAK/F,EAAA,CAAIgN,WAAY,OAAUhL,EAAaiL,YAAahH,SAExD2F,QAzBAhN,EA8BX,EAGMkN,GAAoB,SAAClN,EAAKkB,EAAO8L,EAAaD,GAAoB,IAAA4B,EACtE,OACErH,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAjLqB,GAkLrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UArLmB,GAsLnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH1F,EAAAA,KAAC1B,GAAGvI,OAAM,CACR6D,MAAO6K,EAAS/L,IAAQ,GACxB2J,SAAU,SAACC,GAAC,OAAK8C,GAAkB1M,EAAK4J,EAAEG,OAAO7I,MAAM,EACvDgG,UAlMmB,GAmMnBC,MAAK/F,EAAA,CAAImN,MAAO,QAAWnL,EAAawL,QAASvH,UAEjDC,EAAAA,KAAA,SAAA,CAAQpG,MAAM,GAAEmG,SAAA,CAAC,UAAQ2F,KACD,QADsB2B,EAC7C5B,EAAgB8B,mBAAOF,SAAvBA,EAAyBtF,IAAI,SAACyF,GAAM,OACnC7H,EAAAA,IAAA,SAAA,CAAqB/F,MAAO4N,EAAOzH,SAChCyH,GADUA,EAEJ,QAzBR9O,EA8BX,EAGMmN,GAAyB,SAACnN,EAAKkB,EAAO8L,EAAaD,GAAoB,IAAAgC,EACrEC,EAAiBzO,MAAMC,QAAQuL,EAAS/L,IAAQ+L,EAAS/L,GAAO,GAEtE,OACEsH,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAvNqB,GAwNrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UA3NmB,GA4NnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH/F,EAAAA,IAACrB,GAAG1I,IAAG,CAACiK,MAAO,CAAEmD,QAAS,OAAQ2E,cAAe,SAAU1H,IAAK,UAAWF,SACjD,QADiD0H,EACxEhC,EAAgB8B,eAAO,IAAAE,OAAA,EAAvBA,EAAyB1F,IAAI,SAACyF,GAAM,OACnCxH,EAAAA,KAAC1B,GAAGpH,MAAK,CAEP2I,MAAO,CAAEmD,QAAS,OAAQC,WAAY,SAAUhD,IAAK,SAAUkH,OAAQ,WAAYpH,UAEnFJ,EAAAA,IAAA,QAAA,CACE5F,KAAK,WACLqN,QAASM,EAAexN,SAASsN,GACjCnF,SAAU,SAACC,GACT,IAAMsF,EAAYtF,EAAEG,OAAO2E,WAAOpO,OAAA0F,EAC1BgJ,IAAgBF,IACpBE,EAAeG,OAAO,SAACC,GAAC,OAAKA,IAAMN,CAAM,GAC7CpC,GAAkB1M,EAAKkP,EACzB,EACA/H,MAAO/D,EAAahE,WAEtB6H,EAAAA,IAACrB,GAAG/H,KAAI,CAACsJ,MAAK/F,EAAA,CAAIiO,SAAU,QAAWjM,EAAakM,MAAOjI,SAAEyH,MAdxDA,EAeI,OAjCV9O,EAsCX,EAGMoN,GAAsB,SAACpN,EAAKkB,EAAO8L,EAAaD,GACpD,OACEzF,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAnQqB,GAoQrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UAvQmB,GAwQnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH/F,EAAAA,IAACrB,GAAGtI,SAAQ,CACV4D,MAAO6K,EAAS/L,IAAQ,GACxB2J,SAAU,SAACC,GAAC,OAAK8C,GAAkB1M,EAAK4J,EAAEG,OAAO7I,MAAM,EACvDgG,UApRmB,GAqRnBC,MAAK/F,EAAA,CACHmN,MAAO,OACPgB,UAAS,GAAAjP,OAAmC,KAA7ByM,EAAgBxL,MAAQ,GAAQ,QAC5C6B,EAAaoM,cAtBfxP,EA2BX,EAGMqN,GAA0B,SAACrN,EAAKkB,EAAO8L,EAAaD,GACxD,OACEzF,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UApSqB,GAqSrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UAxSmB,GAySnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH/F,EAAAA,IAACrB,GAAGxI,MAAK,CACPiE,KAAM0L,EAAgB1L,KACtBH,MAAO6K,EAAS/L,IAAQ,GACxB2J,SAAU,SAACC,GAAC,OAAK8C,GAAkB1M,EAAK4J,EAAEG,OAAO7I,MAAM,EACvDgG,UAtTmB,GAuTnBC,MAAK/F,EAAA,CAAImN,MAAO,QAAWnL,EAAa8G,WApBrClK,EAwBX,EAGMsN,GAAoB,SAACtN,EAAKkB,EAAO8L,GACrC,OACE1F,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAlUqB,GAmUrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UAtUmB,GAuUnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH/F,EAAAA,IAACrB,GAAGxI,MAAK,CACPiE,KAAK,SACLH,MAAO6K,EAAS/L,IAAQ,GACxB2J,SAAU,SAACC,GACT,IAAM6F,EAAMC,WAAW9F,EAAEG,OAAO7I,QAAU,EAC1CwL,GAAkB1M,EAAKyP,EACzB,EACAvI,UAvVmB,GAwVnBC,MAAK/F,EAAA,CAAImN,MAAO,QAAWnL,EAAa8G,WAvBrClK,EA2BX,EAGMyN,GAAmB,SAACzN,EAAKkB,EAAO8L,EAAaD,GAKjD,IAJYxM,MAAMC,QAAQU,GAASA,EAAQ,IACjByO,MAAM,SAACP,GAAC,MAAkB,iBAANA,CAAc,GAGzC,CACjB,IAAMQ,EAAOrP,MAAMC,QAAQuL,EAAS/L,IAAQ+L,EAAS/L,GAAO,GACtD6P,EAASxD,GAAUrM,IAAQ,GAE3B8P,EAAS,SAACC,GACd,IAAMC,GAAKD,GAAO,IAAIxN,OACjByN,IACDJ,EAAKpO,SAASwO,KAClBtD,GAAkB1M,EAAG,GAAAM,OAAA0F,EAAM4J,GAAI,CAAEI,KACjC1D,GAAa,SAAC2D,GAAI,OAAA7O,EAAAA,EAAA,CAAA,EAAW6O,MAAIrD,EAAA,CAAA,EAAG5M,EAAM,IAAE,IAC9C,EAEMkQ,EAAY,SAACH,GACjBrD,GACE1M,EACA4P,EAAKT,OAAO,SAACa,GAAC,OAAKA,IAAMD,CAAG,GAEhC,EAWMI,EAAY,CAChB7F,QAAS,cACTC,WAAY,SACZhD,IAAK,MACL6I,QAAS,UACTC,aAAc,QACdpG,WAAY,UACZqG,MAAO,UACPtG,OAAQ,oBACRqF,SAAU,QAGNkB,EAAiB,CACrB9B,OAAQ,UACRzE,OAAQ,OACRC,WAAY,cACZqG,MAAO,UACPjB,SAAU,OACVmB,WAAY,GAGd,OACElJ,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAxZmB,GAyZnBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UA5ZiB,GA6ZjBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH1F,EAAAA,KAAC1B,GAAG1I,IAAG,CAACiK,MAAO,CAAEmD,QAAS,OAAQmG,SAAU,OAAQlJ,IAAK,MAAOgD,WAAY,UAAWlD,UACpFuI,EAAKvG,IAAI,SAAC0G,GAAG,OACZzI,EAAAA,KAAA,OAAA,CAAgBH,MAAOgJ,EAAU9I,SAAA,CAC9B0I,EACD9I,EAAAA,IAAA,SAAA,CACE,aAAA,UAAA3G,OAAsByP,GACtBtF,QAAS,WAAF,OAAQyF,EAAUH,EAAI,EAC7B5I,MAAOoJ,EAAelJ,SACvB,QANQ0I,EASJ,GAET9I,EAAAA,IAACrB,GAAGxI,MAAK,CACPiE,KAAK,OACLH,MAAO2O,EACPlG,SAAU,SAACC,GAAC,OAAK0C,GAAa,SAAC2D,GAAI,OAAA7O,EAAAA,EAAA,GAAW6O,GAAI,CAAA,EAAArD,EAAA,CAAA,EAAG5M,EAAM4J,EAAEG,OAAO7I,OAAK,EAAI,EAC7EwP,UAhEU,SAAC9G,GACH,UAAVA,EAAE5J,KAA6B,MAAV4J,EAAE5J,KACzB4J,EAAE+G,iBACFb,EAAOD,IACY,cAAVjG,EAAE5J,MAAwB6P,GAAUD,EAAKhR,QAClDsR,EAAUN,EAAKA,EAAKhR,OAAS,GAEjC,EA0DQgS,YAAa7D,EAAgB6D,oBAAWtQ,OAAW0M,EAAW,oBAC9D9F,UAzbe,GA0bfC,MAAK/F,EAAA,CAAIoN,SAAU,QAASqC,KAAM,YAAezN,EAAa8G,SAEhEjD,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QAAS,WAAF,OAAQqF,EAAOD,EAAO,EAC7B3I,UA9be,GA+bfC,MAAO,CAAEiJ,QAAS,YAAa/I,SAChC,aAzCErH,EA+CX,CAGA,OACEsH,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UA5cqB,GA6crBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEC,EAAAA,KAAC1B,GAAGpH,MAAK,CACP0I,UAhdmB,GAidnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAAA,CAED2F,EAAY,cAEf/F,EAAAA,IAACrB,GAAGtI,SAAQ,CACV4D,MAAOa,KAAK+O,UAAU5P,EAAO,KAAM,GACnCyI,SAAU,SAACC,GACT,IACE,IAAM7D,EAAShE,KAAKC,MAAM4H,EAAEG,OAAO7I,OACnCwL,GAAkB1M,EAAK+F,EACzB,CAAE,MAAAgL,GACArE,GAAkB1M,EAAK4J,EAAEG,OAAO7I,MAClC,CACF,EACAgG,UApemB,GAqenBC,MAAK/F,EAAA,CACH4P,WAAY,YACZzB,UAAW,QACXhB,MAAO,QACJnL,EAAaoM,cA9BfxP,EAmCX,EAGMwN,GAAmB,SAACxN,EAAKkB,EAAO8L,EAAaD,GACjD,IAAM6C,EAAOrP,MAAMC,QAAQuL,EAAS/L,IAAQ+L,EAAS/L,GAAO,GACtD6P,EAASxD,GAAUrM,IAAQ,GAE3B8P,EAAS,SAACC,GACd,IAAMC,GAAKD,GAAO,IAAIxN,OACjByN,IACDJ,EAAKpO,SAASwO,KAClBtD,GAAkB1M,EAAG,GAAAM,OAAA0F,EAAM4J,GAAI,CAAEI,KACjC1D,GAAa,SAAC2D,GAAI,OAAA7O,EAAAA,EAAA,CAAA,EAAW6O,MAAIrD,EAAA,CAAA,EAAG5M,EAAM,IAAE,IAC9C,EAEMkQ,EAAY,SAACH,GACjBrD,GACE1M,EACA4P,EAAKT,OAAO,SAACa,GAAC,OAAKA,IAAMD,CAAG,GAEhC,EAYMI,EAAY,CAChB7F,QAAS,cACTC,WAAY,SACZhD,IAAK,MACL6I,QAAS,UACTC,aAAc,QACdpG,WAAY,UACZqG,MAAO,UACPtG,OAAQ,oBACRqF,SAAU,QAGNkB,EAAiB,CACrB9B,OAAQ,UACRzE,OAAQ,OACRC,WAAY,cACZqG,MAAO,UACPjB,SAAU,OACVmB,WAAY,GAGd,OACElJ,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAtiBqB,GAuiBrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UA1iBmB,GA2iBnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH1F,EAAAA,KAAC1B,GAAG1I,IAAG,CAACiK,MAAO,CAAEmD,QAAS,OAAQmG,SAAU,OAAQlJ,IAAK,MAAOgD,WAAY,UAAWlD,UACpFuI,EAAKvG,IAAI,SAAC0G,GAAG,OACZzI,EAAAA,KAAA,OAAA,CAAgBH,MAAOgJ,EAAU9I,SAAA,CAC9B0I,EACD9I,EAAAA,IAAA,SAAA,CACE,aAAA,UAAA3G,OAAsByP,GACtBtF,QAAS,WAAF,OAAQyF,EAAUH,EAAI,EAC7B5I,MAAOoJ,EAAelJ,SACvB,QANQ0I,EASJ,GAET9I,EAAAA,IAACrB,GAAGxI,MAAK,CACPiE,KAAK,OACLH,MAAO2O,EACPlG,SAAU,SAACC,GAAC,OAAK0C,GAAa,SAAC2D,GAAI,OAAA7O,EAAAA,EAAA,GAAW6O,GAAI,CAAA,EAAArD,EAAA,CAAA,EAAG5M,EAAM4J,EAAEG,OAAO7I,OAAK,EAAI,EAC7EwP,UAjEU,SAAC9G,GACH,UAAVA,EAAE5J,KAA6B,MAAV4J,EAAE5J,KACzB4J,EAAE+G,iBACFb,EAAOD,IACY,cAAVjG,EAAE5J,MAAwB6P,GAAUD,EAAKhR,QAElDsR,EAAUN,EAAKA,EAAKhR,OAAS,GAEjC,EA0DQgS,YAAa7D,EAAgB6D,aAAe,0BAC5C1J,UAvkBiB,GAwkBjBC,MAAK/F,EAAA,CAAIoN,SAAU,QAASqC,KAAM,YAAezN,EAAa8G,SAEhEjD,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QAAS,WAAF,OAAQqF,EAAOD,EAAO,EAC7B3I,UA5kBiB,GA6kBjBC,MAAO,CAAEiJ,QAAS,YAAa/I,SAChC,aAzCErH,EA+CX,EAGM0N,GAAoB,SAAC1N,EAAKkB,EAAO8L,GACrC,OACE1F,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UA3lBqB,GA4lBrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEC,EAAAA,KAAC1B,GAAGpH,MAAK,CACP0I,UA/lBmB,GAgmBnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAAA,CAED2F,EAAY,eAEf/F,EAAAA,IAACrB,GAAGtI,SAAQ,CACV4D,MAAOa,KAAK+O,UAAU5P,EAAO,KAAM,GACnCyI,SAAU,SAACC,GACT,IACE,IAAM7D,EAAShE,KAAKC,MAAM4H,EAAEG,OAAO7I,OACnCwL,GAAkB1M,EAAK+F,EACzB,CAAE,MAAAkL,GAEAvE,GAAkB1M,EAAK4J,EAAEG,OAAO7I,MAClC,CACF,EACAgG,UApnBmB,GAqnBnBC,MAAK/F,EAAA,CACH4P,WAAY,YACZzB,UAAW,QACXhB,MAAO,QACJnL,EAAaoM,cA/BfxP,EAoCX,EAGM2N,GAAuB,SAAC3N,EAAKkB,EAAO8L,GACxC,OACE1F,EAAAA,KAAC1B,GAAG1I,IAAG,CAELgK,UAroBqB,GAsoBrBC,MAAK/F,EAAA,CAAI6M,aAAc,QAAW7K,EAAa8K,gBAAiB7G,SAAA,CAEhEJ,EAAAA,IAACrB,GAAGpH,MAAK,CACP0I,UAzoBmB,GA0oBnBC,MAAK/F,EAAA,CACHkJ,QAAS,QACT8D,WAAY,MACZH,aAAc,UACX7K,EAAaiL,YAChBhH,SAED2F,IAEH/F,EAAAA,IAACrB,GAAGxI,MAAK,CACPiE,KAAK,OACLH,MAAO6K,EAAS/L,IAAQ,GACxB2J,SAAU,SAACC,GAAC,OAAK8C,GAAkB1M,EAAK4J,EAAEG,OAAO7I,MAAM,EACvDgG,UAvpBmB,GAwpBnBC,MAAK/F,EAAA,CAAImN,MAAO,QAAWnL,EAAa8G,WApBrClK,EAwBX,EA0OA,OACEiH,EAAAA,IAACrB,GAAG3I,UAASmE,EAAAA,EAAA,CACX8F,UAx4BuB,GAy4BvBC,MAAO/D,EAAagE,WAChB/C,GAAK,GAAA,CAAAgD,SAETC,EAAAA,KAAC1B,GAAG3H,OAAM,CACRiJ,UA74BqB,GA84BrBC,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAaoE,OAAQH,UAI7ChI,GACC4H,MAACrB,GAAGzH,MAAK,CACP+I,UAp5BiB,GAq5BjBC,MAAO/D,EAAaqE,MAAMJ,SAE1BJ,EAAAA,IAACrB,GAAG/H,KAAI,CAACsJ,MAAO/D,EAAasE,UAAUL,SAAEhI,MAI5CY,OAAOY,KAAKkL,GAAUnN,OAAS,GAC9BqI,EAAAA,IAACrB,GAAG1H,KAAI,CACNgJ,UA75BiB,GA85BjBC,MAAK/F,EAAA,CAAImN,MAAO,OAAQ6B,QAAS,QAAWhN,EAAa8N,UAAW7J,SA/PrD,WAEvB,GAAI9G,MAAMC,QAAQkL,IAAaA,EAAS9M,OAAQ,CAC9C,IAAMgJ,EAAU3H,OAAOY,KAAKkL,GACtBoF,EAAO,IAAItJ,IACXuJ,EAAgB1F,EAASrC,IAAI,SAACgI,EAAK/I,GACvC,IAAMgJ,EAAQD,EAAIE,IAAE,WAAAjR,OAAegI,GAC7BkJ,EAASjR,MAAMC,QAAQ6Q,EAAII,QAAUJ,EAAII,OAAS,GACxDD,EAAO1J,QAAQ,SAAC4J,GAAC,OAAKP,EAAKnJ,IAAI0J,EAAE,GAEjC,IAAMC,EAAcH,EAAOrC,OAAO,SAACuC,GAAC,OAAK9J,EAAQpG,SAASkQ,EAAE,GACtDE,EAAW,WACf,GAAIjK,GAAW,EACb,OACEV,EAAAA,IAACrB,GAAG3H,OAAM,CAAakJ,MAAO,CAAEI,IAAK,QAASF,SAC3CsK,EAAYtI,IAAI,SAACqI,GAAC,OAAK5E,GAAgB4E,EAAG3F,EAAS2F,GAAG,IADzCJ,GAOpB,IAFA,IAAMO,EAAkBrL,KAAKE,KAAKiL,EAAY/S,OAAS+I,GACjDmK,EAAe,GACZ9Q,EAAI,EAAGA,EAAI2G,EAAS3G,IAAK,CAChC,IAAM+Q,EAAa/Q,EAAI6Q,EACjBG,EAAWxL,KAAKM,IAAIiL,EAAaF,EAAiBF,EAAY/S,QACpEkT,EAAarJ,KAAKkJ,EAAY9I,MAAMkJ,EAAYC,GAClD,CACA,IAAMC,EAAU7Q,EAAA,CACdkJ,QAAS,OACT4H,oBAAmB,UAAA5R,OAAYqH,EAAO,UACtCJ,IAAK,OACLgH,MAAO,QACJnL,EAAa+O,UAElB,OACElL,EAAAA,IAACrB,GAAG1I,IAAG,CAAagK,UAjsBH,GAisB8CC,MAAO8K,EAAW5K,SAC9EyK,EAAazI,IAAI,SAAC+I,EAAO9J,GAAG,OAC3BrB,EAAAA,IAACrB,GAAG3H,OAAM,CAERiJ,UArsBW,GAssBXC,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAaiP,YAAahL,SAElD+K,EAAM/I,IAAI,SAACqI,GAAC,OAAK5E,GAAgB4E,EAAG3F,EAAS2F,GAAG,IAJ5CpJ,EAKK,IARHgJ,EAYjB,CAnCiB,GAqCXgB,KAAkBjB,EAAIkB,aAAgBlB,EAAImB,aAC1CC,EAAOjG,GAAenE,IAAIiJ,IAAUgB,EAAeA,EASzD,OACEhL,EAAAA,KAAC1B,GAAG1I,IAAG,CAAuBiK,MAAO,CAAE8G,aAAc,WAAY5G,SAAA,CAC/DC,EAAAA,KAAC1B,GAAG1I,IAAG,CACLiK,MAAO,CACLmD,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChByD,aAAc,UACd5G,SAAA,CAEFC,EAAAA,KAAC1B,GAAG1I,IAAG,CAACiK,MAAO,CAAEmD,QAAS,OAAQC,WAAY,SAAUhD,IAAK,OAAQF,SAAA,CAClEgK,EAAImB,aACHvL,EAAAA,IAAA,SAAA,CACE,aAAA,UAAA3G,OAAsB+Q,EAAIqB,OAC1BjI,QAtBG,WAAH,OACVgC,GAAkB,SAACwD,GACjB,IAAM0C,EAAO,IAAI9K,IAAIoI,GAGrB,OAFI0C,EAAKtK,IAAIiJ,GAAQqB,EAAI,OAAQrB,GAC5BqB,EAAK3K,IAAIsJ,GACPqB,CACT,EAAE,EAiBQxL,MAAO,CAAE6C,OAAQ,OAAQC,WAAY,cAAewE,OAAQ,WAAYpH,SAExEJ,EAAAA,IAAA,OAAA,CAAAI,SAAOoL,EAAO,IAAM,QAGxBxL,EAAAA,IAACrB,GAAG9H,QAAO,CAACoJ,UA7uBC,GA6uB8CC,MAAO,CAAEyL,OAAQ,GAAIvL,SAC7EgK,EAAIqB,WAGRrB,EAAIwB,aACH5L,EAAAA,IAACrB,GAAG/H,KAAI,CAACqJ,UAlvBI,GAkvBwCC,MAAO,CAAEwD,QAAS,IAAMtD,SAC1EgK,EAAIwB,mBAIRxB,EAAImB,aAAeC,IAASb,IAAO,QAAAtR,OA7BnBgR,GAgCzB,GAGIwB,EAAa,KACjB,GAAIlH,EAAoB,CACtB,IAAMmH,EAAYnL,EAAQuH,OAAO,SAACuC,GAAC,OAAMP,EAAK9I,IAAIqJ,EAAE,GACpD,GAAIqB,EAAUnU,OAAQ,CACpB,IAAM0S,EAAQ,cACRgB,GAAe,EACfG,GAAOjG,GAAenE,IAAIiJ,IAAyBgB,EAQzDQ,EACExL,EAAAA,KAAC1B,GAAG1I,IAAG,CAAuBiK,MAAO,CAAE8G,aAAc,WAAY5G,SAAA,CAC/DJ,EAAAA,IAACrB,GAAG1I,IAAG,CACLiK,MAAO,CACLmD,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChByD,aAAc,UACd5G,SAEFC,EAAAA,KAAC1B,GAAG1I,IAAG,CAACiK,MAAO,CAAEmD,QAAS,OAAQC,WAAY,SAAUhD,IAAK,OAAQF,UACnEJ,EAAAA,IAAA,SAAA,CACE,aAAA,UAAA3G,OAAsBwL,GACtBrB,QApBK,WAAH,OACVgC,GAAkB,SAACwD,GACjB,IAAM0C,EAAO,IAAI9K,IAAIoI,GAGrB,OAFI0C,EAAKtK,IAAIiJ,GAAQqB,EAAI,OAAQrB,GAC5BqB,EAAK3K,IAAIsJ,GACPqB,CACT,EAAE,EAeMxL,MAAO,CAAE6C,OAAQ,OAAQC,WAAY,cAAewE,OAAQ,WAAYpH,SAExEJ,EAAAA,IAAA,OAAA,CAAAI,SAAOoL,EAAO,IAAM,QAEtBxL,EAAAA,IAACrB,GAAG9H,QAAO,CAACoJ,UA7xBD,GA6xBgDC,MAAO,CAAEyL,OAAQ,GAAIvL,SAC7EyE,SAIN2G,GACE,WACC,GAAI9K,GAAW,EACb,OACEV,EAAAA,IAACrB,GAAG3H,OAAM,CAACkJ,MAAO,CAAEI,IAAK,QAASF,SAC/B0L,EAAU1J,IAAI,SAACqI,GAAC,OAAK5E,GAAgB4E,EAAG3F,EAAS2F,GAAG,KAM3D,IAFA,IAAMG,EAAkBrL,KAAKE,KAAKqM,EAAUnU,OAAS+I,GAC/CmK,EAAe,GACZ9Q,EAAI,EAAGA,EAAI2G,EAAS3G,IAAK,CAChC,IAAM+Q,EAAa/Q,EAAI6Q,EACjBG,EAAWxL,KAAKM,IAAIiL,EAAaF,EAAiBkB,EAAUnU,QAClEkT,EAAarJ,KAAKsK,EAAUlK,MAAMkJ,EAAYC,GAChD,CACA,IAAMC,EAAU7Q,EAAA,CACdkJ,QAAS,OACT4H,oBAAmB,UAAA5R,OAAYqH,EAAO,UACtCJ,IAAK,OACLgH,MAAO,QACJnL,EAAa+O,UAElB,OACElL,EAAAA,IAACrB,GAAG1I,IAAG,CAACgK,UA1zBC,GA0zB0CC,MAAO8K,EAAW5K,SAClEyK,EAAazI,IAAI,SAAC+I,EAAO9J,GAAG,OAC3BrB,EAAAA,IAACrB,GAAG3H,OAAM,CAERiJ,UA9zBG,GA+zBHC,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAaiP,YAAahL,SAElD+K,EAAM/I,IAAI,SAACqI,GAAC,OAAK5E,GAAgB4E,EAAG3F,EAAS2F,GAAG,IAJ5CpJ,EAKK,IAIpB,CAnCC,KAmCG,QAAAhI,OA1DagR,GA6DzB,CACF,CAEA,OACEhK,EAAAA,KAAC1B,GAAG3H,OAAM,CACRiJ,UA90BmB,GA+0BnBC,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAa4P,WAAY3L,SAAA,CAEjD+J,EACA0B,IAGP,CAEA,IAAMG,EAAchT,OAAOiT,QAAQnH,GAEnC,GAAIpE,GAAW,EAEb,OACEV,EAAAA,IAACrB,GAAG3H,OAAM,CACRiJ,UA71BmB,GA81BnBC,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAa4P,WAAY3L,SAEjD4L,EAAY5J,IAAI,SAAA8J,GAAA,IAAAC,EAAA3O,EAAA0O,EAAA,GAAEnT,EAAGoT,EAAA,GAAElS,EAAKkS,EAAA,GAAA,OAAMtG,GAAgB9M,EAAKkB,EAAM,KASpE,IAHA,IAAM2Q,EAAkBrL,KAAKE,KAAKuM,EAAYrU,OAAS+I,GACjDmK,EAAe,GAEZ9Q,EAAI,EAAGA,EAAI2G,EAAS3G,IAAK,CAChC,IAAM+Q,EAAa/Q,EAAI6Q,EACjBG,EAAWxL,KAAKM,IAAIiL,EAAaF,EAAiBoB,EAAYrU,QACpEkT,EAAarJ,KAAKwK,EAAYpK,MAAMkJ,EAAYC,GAClD,CAEA,IAAMC,EAAU7Q,EAAA,CACdkJ,QAAS,OACT4H,oBAAmB,UAAA5R,OAAYqH,EAAO,UACtCJ,IAAK,OACLgH,MAAO,QACJnL,EAAa+O,UAGlB,OACElL,EAAAA,IAACrB,GAAG1I,IAAG,CAACgK,UAx3Be,GAw3B4BC,MAAO8K,EAAW5K,SAClEyK,EAAazI,IAAI,SAACgK,EAAcC,GAAW,OAC1CrM,EAAAA,IAACrB,GAAG3H,OAAM,CAERiJ,UA53BiB,GA63BjBC,MAAK/F,EAAA,CAAImG,IAAK,QAAWnE,EAAaiP,YAAahL,SAElDgM,EAAahK,IAAI,SAAAkK,GAAA,IAAAC,EAAA/O,EAAA8O,EAAA,GAAEvT,EAAGwT,EAAA,GAAEtS,EAAKsS,EAAA,GAAA,OAAM1G,GAAgB9M,EAAKkB,EAAM,IAJ1DoS,EAKK,IAIpB,CA4BWG,KAIJnQ,GAAgBrD,OAAOY,KAAKkL,GAAUnN,OAAS,GAC9C0I,EAAAA,KAAC1B,GAAG5H,OAAM,CACRkJ,UAt6BiB,GAu6BjBC,MAAK/F,EAAA,CAAImG,IAAK,SAAU6C,UAAW,QAAWhH,EAAayH,gBAAiBxD,SAAA,CAE5EJ,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QAv3BO,WACjB,GAAI/H,EAAQ,CACV,IAAMmK,EAAanM,EAAgBqL,GACnCrJ,EAAOmK,EAAYd,EACrB,CACF,EAm3BY7E,UA36Be,GA46BfC,MAAO/D,EAAa2H,WAAW1D,SAE9BvE,IAEHmE,EAAAA,IAACrB,GAAGzI,OAAM,CACRsN,QAv3BS,WACnBuB,EAAW5K,EAAA,GAAM6K,IACbtJ,GACFA,GAEJ,EAm3BYuE,UAl7Be,GAm7BfC,MAAO/D,EAAa4H,aAAa3D,SAEhCrE,YAOf,ECv/Be,SAAS0Q,EAAIlR,GAuBzB,IAAAmR,EAAAnR,EAtBDV,KAAAA,OAAI,IAAA6R,EAAG,GAAEA,EAAAC,EAAApR,EAETqR,WAAAA,OAAU,IAAAD,EAAG,CAAA,EAAEA,EAAAE,EAAAtR,EACf2I,OAAQ4I,OAAU,IAAAD,EAAG,CAAA,EAAEA,EAAAzI,EAAA7I,EACvB8I,UAAAA,OAAS,IAAAD,EAAG,CAAA,EAAEA,EAAA7I,EAEdwR,WAAAA,IAAqBC,EAAAzR,EACrB0R,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAAAE,EAAA3R,EAChB4R,YAAAA,OAAW,IAAAD,EAAG,gBAAeA,EAAAE,EAAA7R,EAC7B8R,kBAAAA,OAAiB,IAAAD,EAAG,KAAIA,EAAAE,EAAA/R,EACxBgS,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAAAE,EAAAjS,EACbkS,WAAAA,OAAU,IAAAD,EAAG,KAAIA,EAAAE,EAAAnS,EACjBoS,eAAAA,OAAc,IAAAD,EAAG,KAAIA,EAAAE,EAAArS,EACrBsS,iBAAAA,OAAgB,IAAAD,EAAG,KAAIA,EAAAE,EAAAvS,EACvBwS,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAAAE,EAAAzS,EAChB0S,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAAAE,EAAA3S,EAChB4S,YAAAA,OAAW,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAA7S,EACtB8S,SAAAA,OAAQ,IAAAD,EAAG,WAAO,EAACA,EAAA5J,EAAAjJ,EACnBkJ,SAAAA,OAAQ,IAAAD,EAAG,KAAIA,EAAA8J,EAAA/S,EACfgT,QAAAA,OAAO,IAAAD,EAAG,KAAIA,EAAAE,EAAAjT,EACdkT,aAAAA,OAAY,IAAAD,EAAG,KAAIA,EAAAtS,EAAAX,EACnBY,aAAAA,OAAY,IAAAD,EAAG,GAAEA,EAKXyC,EAAK,CACT3I,UAAWqO,EAAUrO,WAAa,MAClCC,IAAKoO,EAAUpO,KAAO,MACtBY,QAASwN,EAAUxN,SAAW,KAC9BD,KAAMyN,EAAUzN,MAAQ,QAGpB8X,EAAUrP,EAAAA,QAAQ,WACtB,MAAa,UAATkO,EACK,CACLoB,GAAI,UACJC,WAAY,UACZvG,KAAM,UACNwG,WAAY,UACZC,KAAM,UACNb,UAAW,UACXlL,OAAQ,WAIL,CACL4L,GAAI,UACJC,WAAY,UACZvG,KAAM,UACNwG,WAAY,UACZC,KAAM,UACNb,UAAW,UACXlL,OAAQ,UAEZ,EAAG,CAACwK,IAEEwB,EAAW,CACf5O,UAAW,CAAE6C,WAAY0L,EAAQC,IACjCK,OAAQ,CACN7F,QAAS,WACTE,MAAOqF,EAAQE,WACfxG,SAAU,OACV6G,cAAe,YACfC,cAAe,UAEjB7B,kBAAmB,CAAElE,QAAS,kBAAmBE,MAAOqF,EAAQE,WAAYxG,SAAU,QACtF+G,KAAM,CAAEhG,QAAS,OACjBrI,IAAK,CACHuC,QAAS,OACTC,WAAY,SACZhD,IAAK,OACL6I,QAAS,WACTC,aAAc,MACd5B,OAAQ,UACR6B,MAAOqF,EAAQrG,MAEjBnB,MAAO,CAAE0C,KAAM,GACfkF,KAAM,CACJxH,MAAO,OACPjE,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChB8F,MAAOqF,EAAQI,MAEjBb,UAAW,CAAE5E,MAAOqF,EAAQT,WAC5BmB,OAAQ,CAAA,EACRC,MAAO,CAAEC,YAAa,SAGlBpL,EAAS7E,EAAAA,QACb,WAAA,MAAO,CACLc,UAAShG,EAAAA,EAAAA,EAAA,CAAA,EACJ4U,EAAS5O,WACRhE,EAAagE,WAAa,CAAA,GAC1B2M,EAAW3M,WAAa,CAAA,GAE9B6O,OAAM7U,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAASC,QAAY7S,EAAa6S,QAAU,CAAA,GAASlC,EAAWkC,QAAU,CAAA,GACvF3B,kBAAiBlT,EAAAA,EAAAA,EAAA,CAAA,EACZ4U,EAAS1B,mBACRlR,EAAakR,mBAAqB,CAAA,GAClCP,EAAWO,mBAAqB,CAAA,GAEtC8B,KAAIhV,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAASI,MAAUhT,EAAagT,MAAQ,CAAA,GAASrC,EAAWqC,MAAQ,CAAA,GAC/ErO,IAAG3G,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAASjO,KAAS3E,EAAa2E,KAAO,CAAA,GAASgM,EAAWhM,KAAO,CAAA,GAC3EoG,MAAK/M,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAAS7H,OAAW/K,EAAa+K,OAAS,CAAA,GAAS4F,EAAW5F,OAAS,CAAA,GACnF4H,KAAI3U,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAASD,MAAU3S,EAAa2S,MAAQ,CAAA,GAAShC,EAAWgC,MAAQ,CAAA,GAC/Eb,UAAS9T,EAAAA,EAAAA,EAAA,CAAA,EACJ4U,EAASd,WACR9R,EAAa8R,WAAa,CAAA,GAC1BnB,EAAWmB,WAAa,CAAA,GAE9BmB,OAAMjV,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAASK,QAAYjT,EAAaiT,QAAU,CAAA,GAAStC,EAAWsC,QAAU,CAAA,GACvFC,MAAKlV,EAAAA,EAAAA,EAAA,CAAA,EAAO4U,EAASM,OAAWlT,EAAakT,OAAS,CAAA,GAASvC,EAAWuC,OAAS,CAAA,GACnFE,cAAapV,EAAAA,EAAA,GAAQgC,EAAaoT,eAAiB,IAASzC,EAAWyC,eAAiB,CAAA,GACzF,EACD,CACEpT,EACA2Q,EACAiC,EAAS5O,UACT4O,EAASC,OACTD,EAAS1B,kBACT0B,EAASI,KACTJ,EAASjO,IACTiO,EAAS7H,MACT6H,EAASD,KACTC,EAASd,UACTc,EAASK,OACTL,EAASM,QAI0C9R,EAAAC,EAAzBC,EAAAA,SAAS,WAAA,OAAM,IAAImD,GAAK,GAAC,GAAhD4O,EAAOjS,EAAA,GAAEkS,EAAUlS,EAAA,GAC2CK,EAAAJ,EAAzBC,EAAAA,SAAS,WAAA,OAAM,IAAImD,GAAK,GAAC,GAA9D8O,EAAc9R,EAAA,GAAE+R,EAAiB/R,EAAA,GAGlCgS,EAAQ,SAACC,EAAMxO,GAAG,IAAAyO,EAAEC,EAAUrY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,eAAAoY,EAAKD,EAAKvF,UAAE,IAAAwF,EAAAA,EAAA,GAAAzW,OAAO0W,GAAU1W,OAAGgI,EAAG,EAGtE2O,GAAwBhQ,EAAAA,IAAA,OAAA,CAAME,MAAO,CAAEkI,SAAU,IAAKhI,SAAC,MACvD6P,GAA0BjQ,EAAAA,IAAA,OAAA,CAAME,MAAO,CAAEkI,SAAU,IAAKhI,SAAC,MACzD8P,GAAoBlQ,EAAAA,IAAA,OAAA,CAAME,MAAO,CAAEkI,SAAU,IAAKhI,SAAC,OACnD+P,GAAmBnQ,EAAAA,IAAA,OAAA,CAAME,MAAO,CAAEkI,SAAU,IAAKhI,SAAC,QAClDgQ,GAAmBpQ,EAAAA,IAAA,OAAA,CAAME,MAAO,CAAEkI,SAAU,IAAKhI,SAAC,MAYlDiQ,GAAM,SAAHnE,GAAoD,IAA9C2D,EAAI3D,EAAJ2D,KAAIS,EAAApE,EAAEqE,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAEE,EAAKtE,EAALsE,MAAKC,EAAAvE,EAAE6D,WAAAA,OAAU,IAAAU,EAAG,GAAEA,EACP1S,EAAAP,EAAfC,EAAAA,UAAS,GAAM,GAAtCiT,EAAO3S,EAAA,GAAE4S,EAAU5S,EAAA,GACpBuM,EAAKsF,EAAMC,EAAMW,EAAK,GAAAnX,OAAK0W,GAAU1W,OAAGkX,QACxCnB,EAvBS,SAACS,GAAI,OAAKvW,MAAMC,QAAQsW,EAAKzP,WAAayP,EAAKzP,SAASzI,OAAS,CAAC,CAuBlEiZ,CAASf,GAClBrE,EAAO4D,GAAUI,EAAQpO,IAAIkJ,GAEnC,OACEjK,EAAAA,KAAC1B,EAAG1I,IAAG,CAAAmK,SAAA,CACLC,EAAAA,KAAC1B,EAAG1I,IAAG,CACLuN,QAAS,WACP2K,EAAY0B,GACRT,GArBC,SAACyB,EAAQhB,GACtBJ,EAAW,SAACzG,GACV,IAAM0C,EAAO,IAAI9K,IAAIoI,GAIrB,OAHI0C,EAAKtK,IAAIyP,GAASnF,EAAI,OAAQmF,GAC7BnF,EAAK3K,IAAI8P,GACdxC,EAASwB,EAAMnE,EAAKtK,IAAIyP,IACjBnF,CACT,EACF,CAasBoF,CAAOxG,EAAIuF,EACzB,EACAkB,aAAc,WAAF,OAAQJ,GAAW,EAAK,EACpCK,aAAc,WAAF,OAAQL,GAAW,EAAM,EACrCzQ,MAAK/F,EAAAA,EAAAA,KACA+J,EAAOpD,KACNsO,EAASlL,EAAOkL,OAASlL,EAAOmL,OAAK,CAAA,EAAA,CACzCC,YAAmB,GAAAjW,OAAN+V,EAAY,GAAa,GAARmB,EAAoB,GAAa,GAARA,UAEzDtQ,UAAU,mBAAkBG,SAAA,CAE3BgP,EACC/O,EAAAA,KAAA4Q,WAAA,CAAA7Q,SAAA,CAEEJ,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAO4K,KAAK1O,SACxBoL,EACGmC,GAAkBqC,GAClBnC,GAAoBoC,KAG1BjQ,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAO4K,KAAK1O,SAAEyP,EAAKf,MAAQrB,GAAcyC,QAG1DlQ,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAO4K,KAAK1O,SAAEyP,EAAKf,MAAQf,GAAaoC,KAEzDnQ,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAOgD,MAAM9G,SAAEyP,EAAK3I,QACnClH,EAAAA,IAACrB,EAAG1I,IAAG,CACLgK,UAAU,yBACVC,MAAK/F,EAAAA,EAAAA,EAAA,CAAA,EACA+J,EAAO4K,MACP5K,EAAO+J,WAAS,CAAA,EAAA,CACnBvK,QAASgN,EAAU,EAAI,EACvBQ,WAAY,uBACZ9Q,SAED6N,GAAamC,QAGjBhB,GAAU5D,GACTxL,EAAAA,IAACrB,EAAG1I,IAAG,CAAAmK,SACJyP,EAAKzP,SAASgC,IAAI,SAACiN,EAAO8B,GAAI,OAC7BnR,EAAAA,IAACoR,GAAG,CAEFvB,KAAMR,EACNkB,MAAOA,EAAQ,EACfC,MAAOW,EACPpB,WAAYzF,EAAK,KAJZsF,EAAMP,EAAO8B,EAAM7G,EAAK,KAK7B,OAMd,EAGM+G,GAAsB,SAAC/G,EAAImB,EAAOG,GAAwD,IAA3CL,IAAW7T,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACxD2T,QAD4E3T,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,KAC1C6T,GAClC+F,EAAS5B,EAAetO,IAAIkJ,IAAOe,EAAeA,EAQxD,OACEhL,EAAAA,KAAC1B,EAAG1I,IAAG,CAELgK,UAAW2M,EAAW2C,cACtBrP,MAAK/F,EAAA,CACHkJ,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBoI,OAAQ,mBACLzH,EAAOqL,eACVnP,SAAA,CAEFC,EAAAA,KAAC1B,EAAG1I,IAAG,CACLgK,UAAW2M,EAAW2E,kBACtBrR,MAAO,CAAEmD,QAAS,OAAQC,WAAY,SAAUhD,IAAK,OAAQF,SAAA,CAE5DmL,GACCvL,EAAAA,IAAA,SAAA,CACE,aAAA,UAAA3G,OAAsBoS,GACtBjI,QA1BK,WAAH,OACVmM,EAAkB,SAAC3G,GACjB,IAAM0C,EAAO,IAAI9K,IAAIoI,GAGrB,OAFI0C,EAAKtK,IAAIkJ,GAAKoB,EAAI,OAAQpB,GACzBoB,EAAK3K,IAAIuJ,GACPoB,CACT,EAAE,EAqBMxL,MAAO,CAAE6C,OAAQ,OAAQC,WAAY,cAAewE,OAAQ,WAAYpH,SAExEJ,EAAAA,IAAA,OAAA,CAAAI,SAAOkR,EAAS,IAAM,QAG1BtR,EAAAA,IAACrB,EAAG9H,QAAO,CAACoJ,UAAW2M,EAAW4E,QAAStR,MAAO,CAAEyL,OAAQ,EAAGtC,MAAO,WAAYjJ,SAC/EqL,OAGJG,GACC5L,MAACrB,EAAG/H,KAAI,CAACqJ,UAAW2M,EAAWvE,KAAMnI,MAAO,CAAEwD,QAAS,IAAMtD,SAC1DwL,MAEJ,UAAAvS,OA/BciR,GAkCrB,EA0EA,OACEjK,EAAAA,KAAC1B,EAAG3I,UAAS,CAACiK,UAAW2M,EAAWzM,UAAWD,MAAOgE,EAAO/D,UAAUC,SAAA,CACrEJ,EAAAA,IAACrB,EAAG1I,IAAG,CAACgK,UAAW2M,EAAWoC,OAAQ9O,MAAOgE,EAAO8K,OAAO5O,SACzDC,EAAAA,KAAC1B,EAAG1I,IAAG,CACLgK,UAAW2M,EAAW6E,WACtBvR,MAAO,CAAEmD,QAAS,OAAQC,WAAY,SAAUhD,IAAK,OAAQF,UAE5D6M,GAAajN,MAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAO4K,KAAK1O,SAAE6M,IAC3CjN,EAAAA,IAAA,OAAA,CAAMC,UAAW2M,EAAWnB,MAAMrL,SAAE+M,SAGvCE,GACCrN,MAACrB,EAAG1I,IAAG,CAACgK,UAAW2M,EAAWS,kBAAmBnN,MAAOgE,EAAOmJ,kBAAkBjN,SAC9EiN,IArFc,WAErB,GAAI/T,MAAMC,QAAQkL,IAAaA,EAAS9M,OACtC,OAAO8M,EAASrC,IAAI,SAACgI,EAAKsH,GACxB,IAAMpH,EAAKF,EAAIE,IAAE,OAAAjR,OAAWqY,GACtB1C,EAASqC,GACb/G,EACAF,EAAIqB,MACJrB,EAAIwB,aACgB,IAApBxB,EAAImB,aACgB,IAApBnB,EAAIkB,aAEAD,KAAsC,IAApBjB,EAAIkB,cAA6C,IAApBlB,EAAImB,aACnD+F,EAAS5B,EAAetO,IAAIkJ,IAAOe,EAAeA,EAClDhR,GAAS+P,EAAIlC,OAASrN,EAAKqN,OAAOkC,EAAIlC,QAAUrN,IAAS,GAC/D,OACEwF,EAAAA,KAACsR,EAAMC,SAAQ,CAAAxR,SAAA,CACZ4O,IACE5E,EAAImB,aAAe+F,IACpBtR,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAOiL,KAAK/O,SACxB/F,EAAM+H,IAAI,SAACyN,EAAMxO,GAAG,OACnBrB,EAAAA,IAACoR,GAAG,CAAwBvB,KAAMA,EAAMW,MAAOnP,GAArCuO,EAAMC,EAAMxO,GAAgC,OAG3D,QAAAhI,OAR0BiR,GAWjC,GAIF,GAAuB,mBAAZiE,EAAwB,CACjC,IAAMsD,EAAU,IAAIpT,IAUpB,OATA5D,EAAKgG,QAAQ,SAACgP,GAAS,IAAAiC,EACf/Y,EAAmB,QAAhB+Y,EAAGvD,EAAQsB,UAAK,IAAAiC,EAAAA,EAAI,QACxBD,EAAQzQ,IAAIrI,IAAM8Y,EAAQhQ,IAAI9I,EAAK,IACxC8Y,EAAQpQ,IAAI1I,GAAKyI,KAAKqO,EACxB,IAEEpB,GAAgBA,EAAa9W,OACzB8W,EAAavG,OAAO,SAACa,GAAC,OAAK8I,EAAQzQ,IAAI2H,EAAE,GACzCzP,MAAM0H,KAAK6Q,EAAQjY,SACXwI,IAAI,SAACqJ,EAAOiG,GACxB,IAAMpH,SAAEjR,OAAUqY,EAAI,KAAArY,OAAIoS,GACpBuD,EAASqC,GAAoB/G,EAAImB,EAAO,MAAM,GAAM,GACpDJ,GAAe,EACfiG,GAAS5B,EAAetO,IAAIkJ,IAAsBe,EACxD,OACEhL,EAAAA,KAACsR,EAAMC,SAAQ,CAAAxR,SAAA,CACZ4O,EACAsC,GACCtR,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAOiL,KAAK/O,SACxByR,EAAQpQ,IAAIgK,GAAOrJ,IAAI,SAACyN,EAAMxO,GAAG,OAChCrB,EAAAA,IAACoR,GAAG,CAAwBvB,KAAMA,EAAMW,MAAOnP,GAArCuO,EAAMC,EAAMxO,GAAgC,OAG3D,QAAAhI,OAR0BiR,GAWjC,EACF,CAGA,OACEtK,EAAAA,IAACrB,EAAG1I,IAAG,CAACiK,MAAOgE,EAAOiL,KAAK/O,SACxBvF,EAAKuH,IAAI,SAACyN,EAAMxO,GAAG,OAClBrB,EAAAA,IAACoR,GAAG,CAAwBvB,KAAMA,EAAMW,MAAOnP,GAArCuO,EAAMC,EAAMxO,GAAgC,IAI9D,CAkBK0Q,KAGP,8JHzQ0B,SAACnZ,GAAoB,IAAfoZ,EAAMta,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACvC,OAAOoD,KAAK+O,UAAUjR,EAAK,KAAMoZ,EACnC,yEAO8B,SAACjZ,GAC7B,OAAOA,EAAIc,MAAM,KAAKlC,OAAS,CACjC"}