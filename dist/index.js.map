{"version":3,"file":"index.js","sources":["../lib/utils/uiAdapters.js","../lib/utils/jsonUtils.js","../lib/components/JsonToFields.jsx","../lib/components/JsonToTable.jsx"],"sourcesContent":["// UI Library Adapters\n// This file provides adapters for different UI libraries\n\nexport const getUIComponents = (uiLibrary = 'chakra') => {\n  // All UI libraries use the same HTML elements as base\n  // The styling is handled through classes and props\n  // eslint-disable-next-line no-unused-vars\n  const _unused = uiLibrary;\n  return {\n    Container: 'div',\n    Box: 'div',\n    Button: 'button',\n    Input: 'input',\n    Textarea: 'textarea',\n    Table: 'table',\n    Thead: 'thead',\n    Tbody: 'tbody',\n    Tr: 'tr',\n    Th: 'th',\n    Td: 'td',\n    Text: 'span',\n    Heading: 'h2',\n    Stack: 'div',\n    HStack: 'div',\n    VStack: 'div',\n    Card: 'div',\n    Alert: 'div',\n    Badge: 'span',\n    Grid: 'div',\n    GridItem: 'div',\n    Flex: 'div',\n    Label: 'label'\n  };\n};\n\nexport const getUIClasses = (uiLibrary = 'chakra', component, variant = 'default') => {\n  const classMap = {\n    tailwind: {\n      Container: 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n      Box: 'block',\n      Button: {\n        default: 'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n        secondary: 'inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'\n      },\n      Input: {\n        default: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n        checkbox: 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded'\n      },\n      Textarea: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm resize-vertical',\n      Table: 'min-w-full divide-y divide-gray-200',\n      Thead: 'bg-gray-50',\n      Tbody: 'bg-white divide-y divide-gray-200',\n      Tr: 'hover:bg-gray-50',\n      Th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider',\n      Td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-900',\n      Text: 'text-gray-900',\n      Heading: 'text-2xl font-bold text-gray-900 mb-4',\n      Stack: 'space-y-4',\n      HStack: 'flex space-x-4 items-center',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'bg-white overflow-hidden shadow rounded-lg p-6',\n      Alert: {\n        error: 'bg-red-50 border border-red-200 rounded-md p-4 text-red-800',\n        success: 'bg-green-50 border border-green-200 rounded-md p-4 text-green-800',\n        warning: 'bg-yellow-50 border border-yellow-200 rounded-md p-4 text-yellow-800',\n        info: 'bg-blue-50 border border-blue-200 rounded-md p-4 text-blue-800'\n      },\n      Badge: 'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'block text-sm font-medium text-gray-700'\n    },\n    shadcn: {\n      Container: 'container mx-auto px-4',\n      Box: 'block',\n      Button: {\n        default: 'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2',\n        secondary: 'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2'\n      },\n      Input: {\n        default: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        checkbox: 'h-4 w-4 rounded border border-primary text-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n      },\n      Textarea: 'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Table: 'w-full caption-bottom text-sm',\n      Thead: '[&_tr]:border-b',\n      Tbody: '[&_tr:last-child]:border-0',\n      Tr: 'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      Th: 'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      Td: 'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n      Text: 'text-sm text-muted-foreground',\n      Heading: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      Stack: 'flex flex-col space-y-4',\n      HStack: 'flex space-x-4',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'rounded-lg border bg-card text-card-foreground shadow-sm',\n      Alert: {\n        error: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        success: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        warning: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        info: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground'\n      },\n      Badge: 'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n    }\n  };\n\n  if (uiLibrary === 'chakra') {\n    return ''; // Chakra UI uses props, not classes\n  }\n\n  const libraryClasses = classMap[uiLibrary];\n  if (!libraryClasses || !libraryClasses[component]) {\n    return '';\n  }\n\n  const componentClasses = libraryClasses[component];\n  if (typeof componentClasses === 'object') {\n    return componentClasses[variant] || componentClasses.default || '';\n  }\n\n  return componentClasses;\n};\n","/**\n * Utility functions for JSON parsing and object manipulation\n */\n\n/**\n * Flatten nested objects into dot-notation keys\n * @param {Object} obj - Object to flatten\n * @param {string} prefix - Key prefix for nested properties\n * @returns {Object} Flattened object\n */\nexport const flattenObject = (obj, prefix = '') => {\n  let flattened = {};\n  \n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = prefix ? `${prefix}.${key}` : key;\n      \n      if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(flattened, flattenObject(obj[key], newKey));\n      } else {\n        flattened[newKey] = obj[key];\n      }\n    }\n  }\n  \n  return flattened;\n};\n\n/**\n * Convert flattened object back to nested structure\n * @param {Object} flat - Flattened object with dot-notation keys\n * @returns {Object} Nested object\n */\nexport const unflattenObject = (flat) => {\n  const result = {};\n  \n  for (let key in flat) {\n    const keys = key.split('.');\n    let current = result;\n    \n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!current[keys[i]]) {\n        current[keys[i]] = {};\n      }\n      current = current[keys[i]];\n    }\n    \n    current[keys[keys.length - 1]] = flat[key];\n  }\n  \n  return result;\n};\n\n/**\n * Determine input type based on value\n * @param {any} value - Value to check\n * @returns {string} Input type\n */\nexport const getInputType = (value) => {\n  if (typeof value === 'boolean') return 'checkbox';\n  if (typeof value === 'number') return 'number';\n  if (typeof value === 'string' && value.includes('@')) return 'email';\n  if (typeof value === 'string' && value.match(/^\\d{4}-\\d{2}-\\d{2}$/)) return 'date';\n  if (Array.isArray(value)) return 'array';\n  if (typeof value === 'object' && value !== null) return 'object';\n  return 'text';\n};\n\n/**\n * Parse JSON string safely\n * @param {string} jsonString - JSON string to parse\n * @returns {Object} Parsed object or error\n */\nexport const parseJsonSafely = (jsonString) => {\n  try {\n    const parsed = JSON.parse(jsonString);\n    return { success: true, data: parsed };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\n/**\n * Format JSON string with proper indentation\n * @param {any} obj - Object to stringify\n * @param {number} spaces - Number of spaces for indentation\n * @returns {string} Formatted JSON string\n */\nexport const formatJson = (obj, spaces = 2) => {\n  return JSON.stringify(obj, null, spaces);\n};\n\n/**\n * Get nested level from key\n * @param {string} key - Dot-notation key\n * @returns {number} Nesting level\n */\nexport const getNestedLevel = (key) => {\n  return key.split('.').length - 1;\n};\n\n/**\n * Get display name from key\n * @param {string} key - Dot-notation key\n * @returns {string} Display name\n */\nexport const getDisplayName = (key) => {\n  return key\n    .split('.')\n    .pop()\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters\n    .replace(/[_-]/g, ' ') // Replace underscores and hyphens with spaces\n    .replace(/\\b\\w/g, l => l.toUpperCase()) // Capitalize first letter of each word\n    .trim();\n};\n","import React, { useState, useEffect } from 'react';\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters';\nimport { flattenObject, unflattenObject, getInputType, parseJsonSafely, getDisplayName } from '../utils/jsonUtils';\n\n/**\n * JsonToFields Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n * @param {boolean} props.showJsonInput - Whether to show JSON input textarea\n */\nconst JsonToFields = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  showJsonInput = true,\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson);\n  const [formData, setFormData] = useState({});\n  const [originalFormData, setOriginalFormData] = useState({});\n  const [, setParsedJson] = useState(null);\n  const [error, setError] = useState('');\n\n  const UI = getUIComponents(uiLibrary);\n\n  const sampleJson = JSON.stringify({\n    user: {\n      name: \"John Doe\",\n      email: \"john@example.com\",\n      age: 30,\n      isActive: true,\n      preferences: {\n        theme: \"dark\",\n        notifications: true\n      }\n    },\n    settings: {\n      language: \"en\",\n      timezone: \"UTC\"\n    }\n  }, null, 2);\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson);\n      parseJson(initialJson);\n    }\n  }, [initialJson]); // parseJson is stable, no need to include\n\n  const parseJson = (jsonString = jsonInput) => {\n    const result = parseJsonSafely(jsonString);\n    \n    if (result.success) {\n      setParsedJson(result.data);\n      const flattened = flattenObject(result.data);\n      setFormData(flattened);\n      setOriginalFormData({ ...flattened });\n      setError('');\n    } else {\n      setError(result.error);\n      setParsedJson(null);\n      setFormData({});\n      setOriginalFormData({});\n    }\n  };\n\n  const handleFieldChange = (key, value) => {\n    const newFormData = {\n      ...formData,\n      [key]: value\n    };\n    setFormData(newFormData);\n    \n    if (onFieldChange) {\n      const nestedData = unflattenObject(newFormData);\n      onFieldChange(key, value, nestedData);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave) {\n      const nestedData = unflattenObject(formData);\n      onSave(nestedData, formData);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData({ ...originalFormData });\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  const loadSample = () => {\n    setJsonInput(sampleJson);\n    parseJson(sampleJson);\n  };\n\n  const renderFormField = (key, value) => {\n    const inputType = getInputType(value);\n    const displayName = getDisplayName(key);\n\n    if (inputType === 'checkbox') {\n      return (\n        <UI.Box \n          key={key}\n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n        >\n          <UI.Label \n            className={getUIClasses(uiLibrary, 'Label')}\n            style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer', ...customStyles.label }}\n          >\n            <input\n              type=\"checkbox\"\n              checked={formData[key] || false}\n              onChange={(e) => handleFieldChange(key, e.target.checked)}\n              className={getUIClasses(uiLibrary, 'Input', 'checkbox')}\n              style={customStyles.checkbox}\n            />\n            <UI.Text \n              className={getUIClasses(uiLibrary, 'Text')}\n              style={{ fontWeight: '500', ...customStyles.fieldLabel }}\n            >\n              {displayName}\n            </UI.Text>\n          </UI.Label>\n        </UI.Box>\n      );\n    }\n\n    if (inputType === 'array' || inputType === 'object') {\n      return (\n        <UI.Box \n          key={key}\n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n        >\n          <UI.Label \n            className={getUIClasses(uiLibrary, 'Label')}\n            style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n          >\n            {displayName}\n          </UI.Label>\n          <UI.Textarea\n            value={JSON.stringify(value, null, 2)}\n            onChange={(e) => {\n              try {\n                const parsed = JSON.parse(e.target.value);\n                handleFieldChange(key, parsed);\n              } catch {\n                // Keep the raw string value for now\n                handleFieldChange(key, e.target.value);\n              }\n            }}\n            className={getUIClasses(uiLibrary, 'Textarea')}\n            style={{ \n              fontFamily: 'monospace', \n              minHeight: '100px',\n              width: '100%',\n              ...customStyles.textarea \n            }}\n          />\n        </UI.Box>\n      );\n    }\n\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type={inputType}\n          value={formData[key] || ''}\n          onChange={(e) => {\n            const val = inputType === 'number' ? parseFloat(e.target.value) || 0 : e.target.value;\n            handleFieldChange(key, val);\n          }}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  return (\n    <UI.Container \n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack \n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        <UI.Heading \n          className={getUIClasses(uiLibrary, 'Heading')}\n          style={customStyles.heading}\n        >\n          JSON to Form Fields\n        </UI.Heading>\n\n        {showJsonInput && (\n          <>\n            <UI.Box \n              className={getUIClasses(uiLibrary, 'Box')}\n              style={{ width: '100%', ...customStyles.inputContainer }}\n            >\n              <UI.Textarea\n                value={jsonInput}\n                onChange={(e) => setJsonInput(e.target.value)}\n                placeholder=\"Paste your JSON data here...\"\n                className={getUIClasses(uiLibrary, 'Textarea')}\n                style={{ \n                  minHeight: '150px', \n                  fontFamily: 'monospace',\n                  ...customStyles.textarea \n                }}\n              />\n            </UI.Box>\n\n            <UI.HStack \n              className={getUIClasses(uiLibrary, 'HStack')}\n              style={{ gap: '0.5rem', ...customStyles.buttonGroup }}\n            >\n              <UI.Button\n                onClick={() => parseJson()}\n                className={getUIClasses(uiLibrary, 'Button', 'default')}\n                style={customStyles.button}\n              >\n                Generate Form\n              </UI.Button>\n              <UI.Button\n                onClick={loadSample}\n                className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n                style={customStyles.secondaryButton}\n              >\n                Load Sample\n              </UI.Button>\n            </UI.HStack>\n          </>\n        )}\n\n        {error && (\n          <UI.Alert \n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {Object.keys(formData).length > 0 && (\n          <UI.Card \n            className={getUIClasses(uiLibrary, 'Card')}\n            style={{ width: '100%', padding: '1rem', ...customStyles.formCard }}\n          >\n            <UI.VStack \n              className={getUIClasses(uiLibrary, 'VStack')}\n              style={{ gap: '1rem', ...customStyles.formStack }}\n            >\n              {Object.entries(formData).map(([key, value]) => \n                renderFormField(key, value)\n              )}\n            </UI.VStack>\n          </UI.Card>\n        )}\n\n        {showControls && Object.keys(formData).length > 0 && (\n          <UI.HStack \n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  );\n};\n\nexport default JsonToFields;\n","import React, { useState, useEffect } from 'react';\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters';\nimport { getDisplayName } from '../utils/jsonUtils';\n\n/**\n * JsonToTable Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n */\nconst JsonToTable = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson);\n  const [tableData, setTableData] = useState(null);\n  const [error, setError] = useState('');\n  const [editableData, setEditableData] = useState(null);\n\n  const UI = getUIComponents(uiLibrary);\n\n  const sampleJson = JSON.stringify([\n    { id: 1, name: \"John Doe\", email: \"john@example.com\", role: \"Developer\", salary: 75000 },\n    { id: 2, name: \"Jane Smith\", email: \"jane@example.com\", role: \"Designer\", salary: 68000 },\n    { id: 3, name: \"Bob Johnson\", email: \"bob@example.com\", role: \"Manager\", salary: 85000 },\n    { id: 4, name: \"Alice Brown\", email: \"alice@example.com\", role: \"Developer\", salary: 72000 },\n  ], null, 2);\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson);\n      parseJson(initialJson);\n    }\n  }, [initialJson]); // parseJson is stable, no need to include\n\n  const parseJson = (jsonString = jsonInput) => {\n    setError('');\n    setTableData(null);\n    \n    if (!jsonString.trim()) {\n      setError('Please enter some JSON data');\n      return;\n    }\n\n    try {\n      const parsed = JSON.parse(jsonString);\n      \n      if (Array.isArray(parsed)) {\n        if (parsed.length === 0) {\n          setError('The JSON array is empty');\n          return;\n        }\n        setTableData(parsed);\n        setEditableData([...parsed]);\n      } else if (typeof parsed === 'object' && parsed !== null) {\n        const arrayData = [parsed];\n        setTableData(arrayData);\n        setEditableData([...arrayData]);\n      } else {\n        setError('JSON must be an object or array of objects');\n        return;\n      }\n    } catch (err) {\n      setError(`Invalid JSON: ${err.message}`);\n    }\n  };\n\n  const handleCellEdit = (rowIndex, key, value) => {\n    const newData = [...editableData];\n    newData[rowIndex][key] = value;\n    setEditableData(newData);\n    \n    if (onFieldChange) {\n      onFieldChange(key, value, newData);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave && editableData) {\n      const flatData = editableData.map(row => ({ ...row }));\n      onSave(editableData, flatData);\n    }\n  };\n\n  const handleCancel = () => {\n    if (tableData) {\n      setEditableData([...tableData]);\n    }\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  const loadSample = () => {\n    setJsonInput(sampleJson);\n    parseJson(sampleJson);\n  };\n\n  const getColumns = () => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const allKeys = new Set();\n    tableData.forEach(row => {\n      Object.keys(row).forEach(key => allKeys.add(key));\n    });\n    \n    return Array.from(allKeys);\n  };\n\n  const renderTable = () => {\n    if (!editableData || editableData.length === 0) return null;\n\n    const columns = getColumns();\n\n    return (\n      <UI.Box \n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ overflowX: 'auto', ...customStyles.tableContainer }}\n      >\n        <UI.Table \n          className={getUIClasses(uiLibrary, 'Table')}\n          style={customStyles.table}\n        >\n          <UI.Thead className={getUIClasses(uiLibrary, 'Thead')}>\n            <UI.Tr className={getUIClasses(uiLibrary, 'Tr')}>\n              {columns.map(column => (\n                <UI.Th \n                  key={column}\n                  className={getUIClasses(uiLibrary, 'Th')}\n                  style={customStyles.th}\n                >\n                  {getDisplayName(column)}\n                </UI.Th>\n              ))}\n            </UI.Tr>\n          </UI.Thead>\n          <UI.Tbody className={getUIClasses(uiLibrary, 'Tbody')}>\n            {editableData.map((row, rowIndex) => (\n              <UI.Tr \n                key={rowIndex}\n                className={getUIClasses(uiLibrary, 'Tr')}\n              >\n                {columns.map(column => (\n                  <UI.Td \n                    key={column}\n                    className={getUIClasses(uiLibrary, 'Td')}\n                    style={customStyles.td}\n                  >\n                    <UI.Input\n                      type=\"text\"\n                      value={row[column] || ''}\n                      onChange={(e) => handleCellEdit(rowIndex, column, e.target.value)}\n                      className={getUIClasses(uiLibrary, 'Input')}\n                      style={{ \n                        border: 'none', \n                        background: 'transparent',\n                        ...customStyles.input \n                      }}\n                    />\n                  </UI.Td>\n                ))}\n              </UI.Tr>\n            ))}\n          </UI.Tbody>\n        </UI.Table>\n      </UI.Box>\n    );\n  };\n\n  return (\n    <UI.Container \n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack \n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        <UI.Heading \n          className={getUIClasses(uiLibrary, 'Heading')}\n          style={customStyles.heading}\n        >\n          JSON to Table Converter\n        </UI.Heading>\n\n        <UI.Box \n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ width: '100%', ...customStyles.inputContainer }}\n        >\n          <UI.Textarea\n            value={jsonInput}\n            onChange={(e) => setJsonInput(e.target.value)}\n            placeholder=\"Paste your JSON data here...\"\n            className={getUIClasses(uiLibrary, 'Textarea')}\n            style={{ \n              minHeight: '150px', \n              fontFamily: 'monospace',\n              ...customStyles.textarea \n            }}\n          />\n        </UI.Box>\n\n        <UI.HStack \n          className={getUIClasses(uiLibrary, 'HStack')}\n          style={{ gap: '0.5rem', ...customStyles.buttonGroup }}\n        >\n          <UI.Button\n            onClick={() => parseJson()}\n            className={getUIClasses(uiLibrary, 'Button', 'default')}\n            style={customStyles.button}\n          >\n            Generate Table\n          </UI.Button>\n          <UI.Button\n            onClick={loadSample}\n            className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n            style={customStyles.secondaryButton}\n          >\n            Load Sample\n          </UI.Button>\n        </UI.HStack>\n\n        {error && (\n          <UI.Alert \n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {renderTable()}\n\n        {showControls && editableData && (\n          <UI.HStack \n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  );\n};\n\nexport default JsonToTable;\n"],"names":["getUIComponents","Container","Box","Button","Input","Textarea","Table","Thead","Tbody","Tr","Th","Td","Text","Heading","Stack","HStack","VStack","Card","Alert","Badge","Grid","GridItem","Flex","Label","getUIClasses","uiLibrary","arguments","length","undefined","component","variant","libraryClasses","tailwind","default","secondary","checkbox","error","success","warning","info","shadcn","componentClasses","_typeof","flattenObject","obj","prefix","flattened","key","Object","prototype","hasOwnProperty","call","newKey","concat","Array","isArray","assign","unflattenObject","flat","result","keys","split","current","i","getInputType","value","includes","match","parseJsonSafely","jsonString","data","JSON","parse","message","getDisplayName","pop","replace","l","toUpperCase","trim","_ref","_ref$uiLibrary","onSave","onCancel","onFieldChange","_ref$saveButtonText","saveButtonText","_ref$cancelButtonText","cancelButtonText","_ref$initialJson","initialJson","_ref$customStyles","customStyles","_ref$showControls","showControls","_ref$showJsonInput","showJsonInput","props","_objectWithoutProperties","_excluded","_useState2","_slicedToArray","useState","jsonInput","setJsonInput","_useState4","formData","setFormData","_useState6","originalFormData","setOriginalFormData","setParsedJson","_useState0","setError","UI","sampleJson","stringify","user","name","email","age","isActive","preferences","theme","notifications","settings","language","timezone","useEffect","parseJson","_objectSpread","handleFieldChange","newFormData","_defineProperty","nestedData","_jsx","className","style","container","children","_jsxs","gap","stack","heading","_Fragment","width","inputContainer","onChange","e","target","placeholder","minHeight","fontFamily","textarea","buttonGroup","onClick","button","secondaryButton","alert","errorText","padding","formCard","formStack","entries","map","_ref2","_ref3","inputType","displayName","marginBottom","fieldContainer","display","alignItems","cursor","label","type","checked","fontWeight","fieldLabel","parsed","_unused","val","parseFloat","input","renderFormField","marginTop","controlButtons","saveButton","cancelButton","tableData","setTableData","_useState8","editableData","setEditableData","id","role","salary","_toConsumableArray","arrayData","err","columns","allKeys","Set","forEach","row","add","from","getColumns","overflowX","tableContainer","table","column","th","rowIndex","td","newData","handleCellEdit","border","background","renderTable","flatData","spaces"],"mappings":"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"}