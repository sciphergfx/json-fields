{"version":3,"file":"index.esm.js","sources":["../lib/utils/uiAdapters.js","../lib/utils/jsonUtils.js","../lib/components/JsonToTable.jsx","../lib/components/JsonToFields.jsx","../lib/components/JsonToList.jsx"],"sourcesContent":["// UI Library Adapters\n// This file provides adapters for different UI libraries\n\nexport const getUIComponents = () => {\n  // All UI libraries use the same HTML elements as base\n  // The styling is handled through classes and props\n  return {\n    Container: 'div',\n    Box: 'div',\n    Button: 'button',\n    Input: 'input',\n    Select: 'select',\n    Textarea: 'textarea',\n    Table: 'table',\n    Thead: 'thead',\n    Tbody: 'tbody',\n    Tr: 'tr',\n    Th: 'th',\n    Td: 'td',\n    Text: 'span',\n    Heading: 'h2',\n    Stack: 'div',\n    HStack: 'div',\n    VStack: 'div',\n    Card: 'div',\n    Alert: 'div',\n    Badge: 'span',\n    Grid: 'div',\n    GridItem: 'div',\n    Flex: 'div',\n    Label: 'label',\n  }\n}\n\nexport const getUIClasses = (uiLibrary = 'chakra', component, variant = 'default') => {\n  const classMap = {\n    tailwind: {\n      Container: 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n      Box: 'block',\n      Button: {\n        default:\n          'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n        secondary:\n          'inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n      },\n      Input: {\n        default:\n          'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n        checkbox: 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded',\n      },\n      Select:\n        'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n      Textarea:\n        'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm resize-vertical',\n      Table: 'min-w-full divide-y divide-gray-200',\n      Thead: 'bg-gray-50',\n      Tbody: 'bg-white divide-y divide-gray-200',\n      Tr: 'hover:bg-gray-50',\n      Th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider',\n      Td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-900',\n      Text: 'text-gray-900',\n      Heading: 'text-2xl font-bold text-gray-900 mb-4',\n      Stack: 'space-y-4',\n      HStack: 'flex space-x-4 items-center',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'bg-white overflow-hidden shadow rounded-lg p-6',\n      Alert: {\n        error: 'bg-red-50 border border-red-200 rounded-md p-4 text-red-800',\n        success: 'bg-green-50 border border-green-200 rounded-md p-4 text-green-800',\n        warning: 'bg-yellow-50 border border-yellow-200 rounded-md p-4 text-yellow-800',\n        info: 'bg-blue-50 border border-blue-200 rounded-md p-4 text-blue-800',\n      },\n      Badge:\n        'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'block text-sm font-medium text-gray-700',\n    },\n    shadcn: {\n      Container: 'container mx-auto px-4',\n      Box: 'block',\n      Button: {\n        default:\n          'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2',\n        secondary:\n          'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2',\n      },\n      Input: {\n        default:\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        checkbox:\n          'h-4 w-4 rounded border border-primary text-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      },\n      Select:\n        'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Textarea:\n        'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Table: 'w-full caption-bottom text-sm',\n      Thead: '[&_tr]:border-b',\n      Tbody: '[&_tr:last-child]:border-0',\n      Tr: 'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      Th: 'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      Td: 'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n      Text: 'text-sm text-muted-foreground',\n      Heading: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      Stack: 'flex flex-col space-y-4',\n      HStack: 'flex space-x-4',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'rounded-lg border bg-card text-card-foreground shadow-sm',\n      Alert: {\n        error:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        success:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        warning:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        info: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n      },\n      Badge:\n        'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label:\n        'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n    },\n  }\n\n  if (uiLibrary === 'chakra') {\n    return '' // Chakra UI uses props, not classes\n  }\n\n  const libraryClasses = classMap[uiLibrary]\n  if (!libraryClasses || !libraryClasses[component]) {\n    return ''\n  }\n\n  const componentClasses = libraryClasses[component]\n  if (typeof componentClasses === 'object') {\n    return componentClasses[variant] || componentClasses.default || ''\n  }\n\n  return componentClasses\n}\n","/**\n * Utility functions for JSON parsing and object manipulation\n */\n\n/**\n * Flatten nested objects into dot-notation keys\n * @param {Object} obj - Object to flatten\n * @param {string} prefix - Key prefix for nested properties\n * @returns {Object} Flattened object\n */\nexport const flattenObject = (obj, prefix = '') => {\n  let flattened = {}\n\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = prefix ? `${prefix}.${key}` : key\n\n      if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(flattened, flattenObject(obj[key], newKey))\n      } else {\n        flattened[newKey] = obj[key]\n      }\n    }\n  }\n\n  return flattened\n}\n\n/**\n * Convert flattened object back to nested structure\n * @param {Object} flat - Flattened object with dot-notation keys\n * @returns {Object} Nested object\n */\nexport const unflattenObject = (flat) => {\n  const result = {}\n\n  for (let key in flat) {\n    const keys = key.split('.')\n    let current = result\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!current[keys[i]]) {\n        current[keys[i]] = {}\n      }\n      current = current[keys[i]]\n    }\n\n    current[keys[keys.length - 1]] = flat[key]\n  }\n\n  return result\n}\n\n/**\n * Determine input type based on value and optional field configuration\n * @param {any} value - Value to check\n * @param {string} key - Field key/name\n * @param {Object} fieldConfig - Optional field configuration override\n * @returns {Object} Field type configuration\n */\nexport const getInputType = (value, key = '', fieldConfig = {}) => {\n  // 1. Check explicit field configuration first\n  if (fieldConfig[key]) {\n    return { type: fieldConfig[key].type, ...fieldConfig[key] }\n  }\n\n  // 2. Basic type detection\n  if (typeof value === 'boolean') return { type: 'checkbox' }\n  if (typeof value === 'number') return { type: 'number' }\n  if (Array.isArray(value)) return { type: 'array', items: value }\n  if (typeof value === 'object' && value !== null) return { type: 'object' }\n\n  // 3. Enhanced string analysis\n  if (typeof value === 'string') {\n    // Long text detection\n    if (value.length > 100) return { type: 'textarea', rows: 4 }\n\n    // Email detection\n    if (value.includes('@') || key.toLowerCase().includes('email')) {\n      return { type: 'email' }\n    }\n\n    // URL detection\n    if (value.startsWith('http') || key.toLowerCase().includes('url')) {\n      return { type: 'url' }\n    }\n\n    // Date detection\n    if (value.match(/^\\d{4}-\\d{2}-\\d{2}$/) || key.toLowerCase().includes('date')) {\n      return { type: 'date' }\n    }\n\n    // Password detection\n    if (key.toLowerCase().includes('password')) {\n      return { type: 'password' }\n    }\n  }\n\n  // 4. Fallback to text\n  return { type: 'text' }\n}\n\n/**\n * Parse JSON string safely\n * @param {string} jsonString - JSON string to parse\n * @returns {Object} Parsed object or error\n */\nexport const parseJsonSafely = (jsonString) => {\n  try {\n    const parsed = JSON.parse(jsonString)\n    return { success: true, data: parsed }\n  } catch (error) {\n    return { success: false, error: error.message }\n  }\n}\n\n/**\n * Format JSON string with proper indentation\n * @param {any} obj - Object to stringify\n * @param {number} spaces - Number of spaces for indentation\n * @returns {string} Formatted JSON string\n */\nexport const formatJson = (obj, spaces = 2) => {\n  return JSON.stringify(obj, null, spaces)\n}\n\n/**\n * Get nested level from key\n * @param {string} key - Dot-notation key\n * @returns {number} Nesting level\n */\nexport const getNestedLevel = (key) => {\n  return key.split('.').length - 1\n}\n\n/**\n * Get display name from key\n * @param {string} key - Dot-notation key\n * @returns {string} Display name\n */\nexport const getDisplayName = (key) => {\n  return key\n    .split('.')\n    .pop()\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters\n    .replace(/[_-]/g, ' ') // Replace underscores and hyphens with spaces\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Capitalize first letter of each word\n    .trim()\n}\n","import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react'\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters'\nimport { getDisplayName } from '../utils/jsonUtils'\n\n/**\n * Table Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n */\nconst Table = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  // pagination & cache\n  pagination = true,\n  pageSize = 10,\n  cacheSize = 3,\n  initialPage = 1,\n  onPageChange,\n  // optional custom pagination override\n  paginationComponent: PaginationComponent = null,\n  paginationRenderer = null,\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson)\n  const [tableData, setTableData] = useState(null)\n  const [error, setError] = useState('')\n  const [editableData, setEditableData] = useState(null)\n  const [currentPage, setCurrentPage] = useState(initialPage > 0 ? initialPage : 1)\n  // simple LRU cache for page slices\n  const pageCacheRef = useRef(new Map()) // key: page number, value: rows slice\n  const lruRef = useRef([]) // array of page numbers, most-recent at end\n\n  const UI = getUIComponents(uiLibrary)\n\n  const parseJson = useCallback(\n    (jsonString = jsonInput) => {\n      setError('')\n      setTableData(null)\n\n      if (!jsonString.trim()) {\n        setError('Please enter some JSON data')\n        return\n      }\n\n      try {\n        const parsed = JSON.parse(jsonString)\n\n        if (Array.isArray(parsed)) {\n          if (parsed.length === 0) {\n            setError('The JSON array is empty')\n            return\n          }\n          setTableData(parsed)\n          setEditableData([...parsed])\n        } else if (typeof parsed === 'object' && parsed !== null) {\n          const arrayData = [parsed]\n          setTableData(arrayData)\n          setEditableData([...arrayData])\n        } else {\n          setError('JSON must be an object or array of objects')\n          return\n        }\n      } catch (err) {\n        setError(`Invalid JSON: ${err.message}`)\n      }\n    },\n    [jsonInput],\n  )\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson)\n      parseJson(initialJson)\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('')\n      setTableData(null)\n      setEditableData(null)\n      setError('')\n    }\n  }, [initialJson, parseJson])\n\n  // Reset cache on mount and whenever editableData changes (e.g., new JSON parsed)\n  useEffect(() => {\n    // reset cache\n    pageCacheRef.current.clear()\n    lruRef.current = []\n    // clamp and reset page\n    setCurrentPage(initialPage > 0 ? initialPage : 1)\n  }, [editableData, initialPage])\n\n  \n\n  const handleCellEdit = (rowIndex, key, value) => {\n    const newData = [...editableData]\n    newData[rowIndex][key] = value\n    setEditableData(newData)\n\n    if (onFieldChange) {\n      onFieldChange(key, value, newData)\n    }\n  }\n\n  const handleSave = () => {\n    if (onSave && editableData) {\n      const flatData = editableData.map((row) => ({ ...row }))\n      onSave(editableData, flatData)\n    }\n  }\n\n  const handleCancel = () => {\n    if (tableData) {\n      setEditableData([...tableData])\n    }\n    if (onCancel) {\n      onCancel()\n    }\n  }\n\n  const getColumns = () => {\n    if (!tableData || tableData.length === 0) return []\n\n    const allKeys = new Set()\n    tableData.forEach((row) => {\n      Object.keys(row).forEach((key) => allKeys.add(key))\n    })\n\n    return Array.from(allKeys)\n  }\n\n  const totalRows = useMemo(\n    () => (Array.isArray(editableData) ? editableData.length : 0),\n    [editableData],\n  )\n  const totalPages = useMemo(() => {\n    if (!pagination) return 1\n    return Math.max(1, Math.ceil((totalRows || 0) / Math.max(1, pageSize)))\n  }, [pagination, totalRows, pageSize])\n\n  const getPageSlice = (page) => {\n    if (!pagination || !Array.isArray(editableData)) return editableData || []\n    const safePage = Math.min(Math.max(1, page), totalPages)\n    // cache lookup\n    if (pageCacheRef.current.has(safePage)) {\n      // update LRU\n      const idx = lruRef.current.indexOf(safePage)\n      if (idx !== -1) lruRef.current.splice(idx, 1)\n      lruRef.current.push(safePage)\n      return pageCacheRef.current.get(safePage)\n    }\n    const start = (safePage - 1) * pageSize\n    const end = start + pageSize\n    const slice = editableData.slice(start, end)\n    // add to cache\n    pageCacheRef.current.set(safePage, slice)\n    lruRef.current.push(safePage)\n    // evict if needed\n    while (lruRef.current.length > Math.max(1, cacheSize)) {\n      const evictPage = lruRef.current.shift()\n      if (evictPage != null) pageCacheRef.current.delete(evictPage)\n    }\n    return slice\n  }\n\n  const goToPage = (nextPage) => {\n    const clamped = Math.min(Math.max(1, nextPage), totalPages)\n    if (clamped !== currentPage) {\n      setCurrentPage(clamped)\n      if (typeof onPageChange === 'function') onPageChange(clamped)\n    }\n  }\n\n  const prevPage = () => goToPage(currentPage - 1)\n  const nextPageFn = () => goToPage(currentPage + 1)\n\n  const renderTable = () => {\n    if (!editableData || editableData.length === 0) return null\n\n    const columns = getColumns()\n    const rows = pagination ? getPageSlice(currentPage) : editableData\n\n    return (\n      <UI.Box\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ overflowX: 'auto', ...customStyles.tableContainer }}\n      >\n        <UI.Table className={getUIClasses(uiLibrary, 'Table')} style={customStyles.table}>\n          <UI.Thead className={getUIClasses(uiLibrary, 'Thead')}>\n            <UI.Tr className={getUIClasses(uiLibrary, 'Tr')}>\n              {columns.map((column) => (\n                <UI.Th\n                  key={column}\n                  className={getUIClasses(uiLibrary, 'Th')}\n                  style={{ textAlign: 'center', ...customStyles.th }}\n                >\n                  {getDisplayName(column)}\n                </UI.Th>\n              ))}\n            </UI.Tr>\n          </UI.Thead>\n          <UI.Tbody className={getUIClasses(uiLibrary, 'Tbody')}>\n            {rows.map((row, rowIndex) => (\n              <UI.Tr key={rowIndex} className={getUIClasses(uiLibrary, 'Tr')}>\n                {columns.map((column) => (\n                  <UI.Td\n                    key={column}\n                    className={getUIClasses(uiLibrary, 'Td')}\n                    style={customStyles.td}\n                  >\n                    <UI.Input\n                      type=\"text\"\n                      value={row[column] || ''}\n                      onChange={(e) =>\n                        handleCellEdit(\n                          pagination ? (currentPage - 1) * pageSize + rowIndex : rowIndex,\n                          column,\n                          e.target.value,\n                        )\n                      }\n                      className={getUIClasses(uiLibrary, 'Input')}\n                      style={{\n                        border: 'none',\n                        background: 'transparent',\n                        ...customStyles.input,\n                      }}\n                    />\n                  </UI.Td>\n                ))}\n              </UI.Tr>\n            ))}\n          </UI.Tbody>\n        </UI.Table>\n        {pagination &&\n          totalPages > 1 &&\n          (() => {\n            const pagerProps = {\n              currentPage,\n              totalPages,\n              pageSize,\n              cacheSize,\n              goToPage,\n              prevPage,\n              nextPage: nextPageFn,\n            }\n            if (typeof paginationRenderer === 'function') {\n              return <UI.Box style={{ marginTop: '12px' }}>{paginationRenderer(pagerProps)}</UI.Box>\n            }\n            if (PaginationComponent) {\n              const Comp = PaginationComponent\n              return (\n                <UI.Box style={{ marginTop: '12px' }}>\n                  <Comp {...pagerProps} />\n                </UI.Box>\n              )\n            }\n            return (\n              <UI.HStack\n                className={getUIClasses(uiLibrary, 'HStack')}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginTop: '12px',\n                  ...(customStyles.pagination || {}),\n                }}\n              >\n                <UI.Button\n                  onClick={prevPage}\n                  disabled={currentPage <= 1}\n                  className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n                  style={{ opacity: currentPage <= 1 ? 0.5 : 1 }}\n                >\n                  Prev\n                </UI.Button>\n                <UI.Text>\n                  {currentPage} / {totalPages}\n                </UI.Text>\n                <UI.Button\n                  onClick={nextPageFn}\n                  disabled={currentPage >= totalPages}\n                  className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n                  style={{ opacity: currentPage >= totalPages ? 0.5 : 1 }}\n                >\n                  Next\n                </UI.Button>\n              </UI.HStack>\n            )\n          })()}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container\n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack\n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        \n\n        {error && (\n          <UI.Alert\n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {renderTable()}\n\n        {showControls && editableData && (\n          <UI.HStack\n            gap=\"2\"\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  )\n}\n\nexport default Table\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  flattenObject,\n  unflattenObject,\n  getInputType,\n  parseJsonSafely,\n  getDisplayName,\n} from '../utils/jsonUtils'\n\n/**\n * Fields Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - (deprecated, ignored in headless)\n * @param {Object} [props.classNames] - slot classes for headless styling\n * @param {Object} [props.styles] - slot inline styles for headless styling\n * @param {Object} [props.renderers] - primitive render overrides: { Container, Box, Button, Input, Select, Textarea, Text, Heading, VStack, HStack, Card, Alert, Label }\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n * @param {number} props.columns - Number of columns for form layout (default: 2)\n * @param {Object} props.fieldConfig - Field configuration for custom input types\n * @param {Array} [props.sections] - Optional sections to group fields: [{ id?, title, description?, fields: string[], collapsible?: boolean, defaultOpen?: boolean }]\n * @param {boolean} [props.includeUnsectioned=false] - If true, render fields not listed in sections under an \"Other\" section\n * @param {string} [props.unsectionedTitle='Other'] - Title for the unsectioned fields section\n */\nconst Fields = ({\n  // headless styling hooks\n  _classNames = {},\n  styles: _styleProps = {},\n  renderers = {},\n  // deprecated uiLibrary (ignored in headless; kept for backward compat)\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  \n  columns = 2,\n  fieldConfig = {},\n  sections = null,\n  includeUnsectioned = false,\n  unsectionedTitle = 'Other',\n  ...props\n}) => {\n  // mark intentionally unused headless props to satisfy lint\n  _classNames\n  _styleProps\n  const [jsonInput, setJsonInput] = useState(initialJson)\n  const [formData, setFormData] = useState({})\n  const [originalFormData, setOriginalFormData] = useState({})\n  const [, setParsedJson] = useState(null)\n  const [error, setError] = useState('')\n  // Local input state for tags fields keyed by field name\n  const [tagInputs, setTagInputs] = useState({})\n  // Open state for collapsible sections\n  const [sectionOpenIds, setSectionOpenIds] = useState(() => new Set())\n\n  // Headless primitives; can be overridden by `renderers`\n  const UI = {\n    Container: renderers.Container || 'div',\n    Box: renderers.Box || 'div',\n    Button: renderers.Button || 'button',\n    Input: renderers.Input || 'input',\n    Select: renderers.Select || 'select',\n    Textarea: renderers.Textarea || 'textarea',\n    Text: renderers.Text || 'span',\n    Heading: renderers.Heading || 'h2',\n    VStack: renderers.VStack || 'div',\n    HStack: renderers.HStack || 'div',\n    Card: renderers.Card || 'div',\n    Alert: renderers.Alert || 'div',\n    Label: renderers.Label || 'label',\n  }\n\n  // No-op for legacy class mapping\n  const getUIClasses = () => ''\n\n  const parseJson = useCallback(\n    (jsonString = jsonInput) => {\n      const result = parseJsonSafely(jsonString)\n\n      if (result.success) {\n        setParsedJson(result.data)\n        const flattened = flattenObject(result.data)\n        setFormData(flattened)\n        setOriginalFormData({ ...flattened })\n        setError('')\n      } else {\n        setError(result.error)\n        setParsedJson(null)\n        setFormData({})\n        setOriginalFormData({})\n      }\n    },\n    [jsonInput],\n  )\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson)\n      parseJson(initialJson)\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('')\n      setFormData({})\n      setOriginalFormData({})\n      setParsedJson(null)\n      setError('')\n    }\n  }, [initialJson, parseJson])\n\n  \n\n  const handleFieldChange = (key, value) => {\n    const newFormData = {\n      ...formData,\n      [key]: value,\n    }\n    setFormData(newFormData)\n\n    if (onFieldChange) {\n      const nestedData = unflattenObject(newFormData)\n      onFieldChange(key, value, nestedData)\n    }\n  }\n\n  const handleSave = () => {\n    if (onSave) {\n      const nestedData = unflattenObject(formData)\n      onSave(nestedData, formData)\n    }\n  }\n\n  const handleCancel = () => {\n    setFormData({ ...originalFormData })\n    if (onCancel) {\n      onCancel()\n    }\n  }\n\n  const renderFormField = (key, value) => {\n    const fieldTypeConfig = getInputType(value, key, fieldConfig)\n    const displayName = getDisplayName(key)\n\n    // Handle different field types based on configuration\n    switch (fieldTypeConfig.type) {\n      case 'checkbox':\n        return renderCheckboxField(key, value, displayName, fieldTypeConfig)\n      case 'select':\n        return renderSelectField(key, value, displayName, fieldTypeConfig)\n      case 'multi-select':\n        return renderMultiSelectField(key, value, displayName, fieldTypeConfig)\n      case 'textarea':\n        return renderTextareaField(key, value, displayName, fieldTypeConfig)\n      case 'email':\n      case 'url':\n      case 'date':\n      case 'password':\n        return renderSpecialInputField(key, value, displayName, fieldTypeConfig)\n      case 'number':\n        return renderNumberField(key, value, displayName, fieldTypeConfig)\n      case 'slider':\n        return renderSliderField(key, value, displayName, fieldTypeConfig)\n      case 'tags':\n        return _renderTagsField(key, value, displayName, fieldTypeConfig)\n      case 'array':\n        return renderArrayField(key, value, displayName, fieldTypeConfig)\n      case 'object':\n        return renderObjectField(key, value, displayName, fieldTypeConfig)\n      default:\n        return renderTextInputField(key, value, displayName, fieldTypeConfig)\n    }\n  }\n\n  // Slider field renderer (HTML range input)\n  const renderSliderField = (key, value, displayName, fieldTypeConfig) => {\n    const min = fieldTypeConfig.min ?? 0\n    const max = fieldTypeConfig.max ?? 100\n    const step = fieldTypeConfig.step ?? 1\n    const current = typeof formData[key] === 'number' ? formData[key] : (fieldTypeConfig.default ?? min)\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label className={getUIClasses(uiLibrary, 'Label')} style={customStyles.label}>\n          <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ fontWeight: '500', ...customStyles.fieldLabel }}>\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\n          <input\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={current}\n            onChange={(e) => handleFieldChange(key, Number(e.target.value))}\n            className={getUIClasses(uiLibrary, 'Input', 'range')}\n            style={{ width: '100%' }}\n          />\n          <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ minWidth: '3rem', textAlign: 'right' }}>\n            {current}\n          </UI.Text>\n        </div>\n      </UI.Box>\n    )\n  }\n\n  // Checkbox field renderer\n  const renderCheckboxField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem',\n            cursor: 'pointer',\n            ...customStyles.label,\n          }}\n        >\n          <input\n            type=\"checkbox\"\n            checked={formData[key] || false}\n            onChange={(e) => handleFieldChange(key, e.target.checked)}\n            className={getUIClasses(uiLibrary, 'Input', 'checkbox')}\n            style={customStyles.checkbox}\n          />\n          <UI.Text\n            className={getUIClasses(uiLibrary, 'Text')}\n            style={{ fontWeight: '500', ...customStyles.fieldLabel }}\n          >\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n      </UI.Box>\n    )\n  }\n\n  // Select field renderer\n  const renderSelectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Select\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Select')}\n          style={{ width: '100%', ...customStyles.select }}\n        >\n          <option value=\"\">Select {displayName}</option>\n          {fieldTypeConfig.options?.map((option) => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </UI.Select>\n      </UI.Box>\n    )\n  }\n\n  // Multi-select field renderer\n  const renderMultiSelectField = (key, value, displayName, fieldTypeConfig) => {\n    const selectedValues = Array.isArray(formData[key]) ? formData[key] : []\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n          {fieldTypeConfig.options?.map((option) => (\n            <UI.Label\n              key={option}\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selectedValues.includes(option)}\n                onChange={(e) => {\n                  const newValues = e.target.checked\n                    ? [...selectedValues, option]\n                    : selectedValues.filter((v) => v !== option)\n                  handleFieldChange(key, newValues)\n                }}\n                style={customStyles.checkbox}\n              />\n              <UI.Text style={{ fontSize: '14px', ...customStyles.text }}>{option}</UI.Text>\n            </UI.Label>\n          ))}\n        </UI.Box>\n      </UI.Box>\n    )\n  }\n\n  // Textarea field renderer\n  const renderTextareaField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Textarea\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            width: '100%',\n            minHeight: `${(fieldTypeConfig.rows || 4) * 1.5}rem`,\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Special input field renderer (email, url, date, password)\n  const renderSpecialInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type={fieldTypeConfig.type}\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Number field renderer\n  const renderNumberField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"number\"\n          value={formData[key] || ''}\n          onChange={(e) => {\n            const val = parseFloat(e.target.value) || 0\n            handleFieldChange(key, val)\n          }}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Array field renderer\n  const renderArrayField = (key, value, displayName, fieldTypeConfig) => {\n    const arr = Array.isArray(value) ? value : []\n    const isStringArray = arr.every((v) => typeof v === 'string')\n\n    // If it's an array of strings, render as pill chips with add/delete\n    if (isStringArray) {\n      const tags = Array.isArray(formData[key]) ? formData[key] : []\n      const newTag = tagInputs[key] || ''\n\n      const addTag = (tag) => {\n        const t = (tag || '').trim()\n        if (!t) return\n        if (tags.includes(t)) return\n        handleFieldChange(key, [...tags, t])\n        setTagInputs((prev) => ({ ...prev, [key]: '' }))\n      }\n\n      const removeTag = (tag) => {\n        handleFieldChange(\n          key,\n          tags.filter((t) => t !== tag),\n        )\n      }\n\n      const onKeyDown = (e) => {\n        if (e.key === 'Enter' || e.key === ',') {\n          e.preventDefault()\n          addTag(newTag)\n        } else if (e.key === 'Backspace' && !newTag && tags.length) {\n          removeTag(tags[tags.length - 1])\n        }\n      }\n\n      const pillStyle = {\n        display: 'inline-flex',\n        alignItems: 'center',\n        gap: '6px',\n        padding: '4px 8px',\n        borderRadius: '999px',\n        background: '#eef2ff',\n        color: '#3730a3',\n        border: '1px solid #c7d2fe',\n        fontSize: '12px',\n      }\n\n      const pillCloseStyle = {\n        cursor: 'pointer',\n        border: 'none',\n        background: 'transparent',\n        color: '#4338ca',\n        fontSize: '14px',\n        lineHeight: 1,\n      }\n\n      return (\n        <UI.Box\n          key={key}\n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n        >\n          <UI.Label\n            className={getUIClasses(uiLibrary, 'Label')}\n            style={{\n              display: 'block',\n              fontWeight: '600',\n              marginBottom: '0.5rem',\n              ...customStyles.fieldLabel,\n            }}\n          >\n            {displayName}\n          </UI.Label>\n          <UI.Box style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>\n            {tags.map((tag) => (\n              <span key={tag} style={pillStyle}>\n                {tag}\n                <button\n                  aria-label={`Remove ${tag}`}\n                  onClick={() => removeTag(tag)}\n                  style={pillCloseStyle}\n                >\n                  ×\n                </button>\n              </span>\n            ))}\n            <UI.Input\n              type=\"text\"\n              value={newTag}\n              onChange={(e) => setTagInputs((prev) => ({ ...prev, [key]: e.target.value }))}\n              onKeyDown={onKeyDown}\n              placeholder={fieldTypeConfig.placeholder || `Add ${displayName} and press Enter`}\n              className={getUIClasses(uiLibrary, 'Input')}\n              style={{ minWidth: '140px', flex: '0 1 auto', ...customStyles.input }}\n            />\n            <UI.Button\n              onClick={() => addTag(newTag)}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={{ padding: '6px 10px' }}\n            >\n              Add\n            </UI.Button>\n          </UI.Box>\n        </UI.Box>\n      )\n    }\n\n    // Fallback: render as JSON textarea for non-string arrays\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName} (Array)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value)\n              handleFieldChange(key, parsed)\n            } catch {\n              handleFieldChange(key, e.target.value)\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            fontFamily: 'monospace',\n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Tags field renderer (pill chips with delete and input to add)\n  const _renderTagsField = (key, value, displayName, fieldTypeConfig) => {\n    const tags = Array.isArray(formData[key]) ? formData[key] : []\n    const newTag = tagInputs[key] || ''\n\n    const addTag = (tag) => {\n      const t = (tag || '').trim()\n      if (!t) return\n      if (tags.includes(t)) return\n      handleFieldChange(key, [...tags, t])\n      setTagInputs((prev) => ({ ...prev, [key]: '' }))\n    }\n\n    const removeTag = (tag) => {\n      handleFieldChange(\n        key,\n        tags.filter((t) => t !== tag),\n      )\n    }\n\n    const onKeyDown = (e) => {\n      if (e.key === 'Enter' || e.key === ',') {\n        e.preventDefault()\n        addTag(newTag)\n      } else if (e.key === 'Backspace' && !newTag && tags.length) {\n        // quick remove last tag\n        removeTag(tags[tags.length - 1])\n      }\n    }\n\n    const pillStyle = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gap: '6px',\n      padding: '4px 8px',\n      borderRadius: '999px',\n      background: '#eef2ff',\n      color: '#3730a3',\n      border: '1px solid #c7d2fe',\n      fontSize: '12px',\n    }\n\n    const pillCloseStyle = {\n      cursor: 'pointer',\n      border: 'none',\n      background: 'transparent',\n      color: '#4338ca',\n      fontSize: '14px',\n      lineHeight: 1,\n    }\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>\n          {tags.map((tag) => (\n            <span key={tag} style={pillStyle}>\n              {tag}\n              <button\n                aria-label={`Remove ${tag}`}\n                onClick={() => removeTag(tag)}\n                style={pillCloseStyle}\n              >\n                ×\n              </button>\n            </span>\n          ))}\n          <UI.Input\n            type=\"text\"\n            value={newTag}\n            onChange={(e) => setTagInputs((prev) => ({ ...prev, [key]: e.target.value }))}\n            onKeyDown={onKeyDown}\n            placeholder={fieldTypeConfig.placeholder || 'Add tag and press Enter'}\n            className={getUIClasses(uiLibrary, 'Input')}\n            style={{ minWidth: '140px', flex: '0 1 auto', ...customStyles.input }}\n          />\n          <UI.Button\n            onClick={() => addTag(newTag)}\n            className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n            style={{ padding: '6px 10px' }}\n          >\n            Add\n          </UI.Button>\n        </UI.Box>\n      </UI.Box>\n    )\n  }\n\n  // Object field renderer\n  const renderObjectField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName} (Object)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value)\n              handleFieldChange(key, parsed)\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value)\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            fontFamily: 'monospace',\n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Text input field renderer (default)\n  const renderTextInputField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"text\"\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Function to render form fields in columns\n  const renderFormFields = () => {\n    // If sections prop is provided, render grouped sections first\n    if (Array.isArray(sections) && sections.length) {\n      const allKeys = Object.keys(formData)\n      const used = new Set()\n      const sectionBlocks = sections.map((sec, idx) => {\n        const secId = sec.id || `section-${idx}`\n        const listed = Array.isArray(sec.fields) ? sec.fields : []\n        listed.forEach((k) => used.add(k))\n        // Build section content honoring columns\n        const sectionKeys = listed.filter((k) => allKeys.includes(k))\n        const content = (() => {\n          if (columns <= 1) {\n            return (\n              <UI.VStack key={secId} style={{ gap: '1rem' }}>\n                {sectionKeys.map((k) => renderFormField(k, formData[k]))}\n              </UI.VStack>\n            )\n          }\n          const fieldsPerColumn = Math.ceil(sectionKeys.length / columns)\n          const columnGroups = []\n          for (let i = 0; i < columns; i++) {\n            const startIndex = i * fieldsPerColumn\n            const endIndex = Math.min(startIndex + fieldsPerColumn, sectionKeys.length)\n            columnGroups.push(sectionKeys.slice(startIndex, endIndex))\n          }\n          const gridStyles = {\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columns}, 1fr)`,\n            gap: '2rem',\n            width: '100%',\n            ...customStyles.formGrid,\n          }\n          return (\n            <UI.Box key={secId} className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n              {columnGroups.map((group, idx) => (\n                <UI.VStack\n                  key={idx}\n                  className={getUIClasses(uiLibrary, 'VStack')}\n                  style={{ gap: '1rem', ...customStyles.formColumn }}\n                >\n                  {group.map((k) => renderFormField(k, formData[k]))}\n                </UI.VStack>\n              ))}\n            </UI.Box>\n          )\n        })()\n\n        const baselineOpen = !!(sec.defaultOpen || !sec.collapsible)\n        const open = sectionOpenIds.has(secId) ? !baselineOpen : baselineOpen\n        const toggle = () =>\n          setSectionOpenIds((prev) => {\n            const next = new Set(prev)\n            if (next.has(secId)) next.delete(secId)\n            else next.add(secId)\n            return next\n          })\n\n        return (\n          <UI.Box key={`wrap-${secId}`} style={{ marginBottom: '1.25rem' }}>\n            <UI.Box\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '0.5rem',\n              }}\n            >\n              <UI.Box style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                {sec.collapsible && (\n                  <button\n                    aria-label={`Toggle ${sec.title}`}\n                    onClick={toggle}\n                    style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n                  >\n                    <span>{open ? '▼' : '▶'}</span>\n                  </button>\n                )}\n                <UI.Heading className={getUIClasses(uiLibrary, 'Heading')} style={{ margin: 0 }}>\n                  {sec.title}\n                </UI.Heading>\n              </UI.Box>\n              {sec.description && (\n                <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ opacity: 0.8 }}>\n                  {sec.description}\n                </UI.Text>\n              )}\n            </UI.Box>\n            {(!sec.collapsible || open) && content}\n          </UI.Box>\n        )\n      })\n\n      // Unsectioned fields\n      let otherBlock = null\n      if (includeUnsectioned) {\n        const remaining = allKeys.filter((k) => !used.has(k))\n        if (remaining.length) {\n          const secId = 'unsectioned'\n          const baselineOpen = true\n          const open = sectionOpenIds.has(secId) ? !baselineOpen : baselineOpen\n          const toggle = () =>\n            setSectionOpenIds((prev) => {\n              const next = new Set(prev)\n              if (next.has(secId)) next.delete(secId)\n              else next.add(secId)\n              return next\n            })\n          otherBlock = (\n            <UI.Box key={`wrap-${secId}`} style={{ marginBottom: '1.25rem' }}>\n              <UI.Box\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginBottom: '0.5rem',\n                }}\n              >\n                <UI.Box style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <button\n                    aria-label={`Toggle ${unsectionedTitle}`}\n                    onClick={toggle}\n                    style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n                  >\n                    <span>{open ? '▼' : '▶'}</span>\n                  </button>\n                  <UI.Heading className={getUIClasses(uiLibrary, 'Heading')} style={{ margin: 0 }}>\n                    {unsectionedTitle}\n                  </UI.Heading>\n                </UI.Box>\n              </UI.Box>\n              {open &&\n                (() => {\n                  if (columns <= 1) {\n                    return (\n                      <UI.VStack style={{ gap: '1rem' }}>\n                        {remaining.map((k) => renderFormField(k, formData[k]))}\n                      </UI.VStack>\n                    )\n                  }\n                  const fieldsPerColumn = Math.ceil(remaining.length / columns)\n                  const columnGroups = []\n                  for (let i = 0; i < columns; i++) {\n                    const startIndex = i * fieldsPerColumn\n                    const endIndex = Math.min(startIndex + fieldsPerColumn, remaining.length)\n                    columnGroups.push(remaining.slice(startIndex, endIndex))\n                  }\n                  const gridStyles = {\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n                    gap: '2rem',\n                    width: '100%',\n                    ...customStyles.formGrid,\n                  }\n                  return (\n                    <UI.Box className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n                      {columnGroups.map((group, idx) => (\n                        <UI.VStack\n                          key={idx}\n                          className={getUIClasses(uiLibrary, 'VStack')}\n                          style={{ gap: '1rem', ...customStyles.formColumn }}\n                        >\n                          {group.map((k) => renderFormField(k, formData[k]))}\n                        </UI.VStack>\n                      ))}\n                    </UI.Box>\n                  )\n                })()}\n            </UI.Box>\n          )\n        }\n      }\n\n      return (\n        <UI.VStack\n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {sectionBlocks}\n          {otherBlock}\n        </UI.VStack>\n      )\n    }\n\n    const formEntries = Object.entries(formData)\n\n    if (columns <= 1) {\n      // Single column layout (default)\n      return (\n        <UI.VStack\n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {formEntries.map(([key, value]) => renderFormField(key, value))}\n        </UI.VStack>\n      )\n    }\n\n    // Multi-column layout\n    const fieldsPerColumn = Math.ceil(formEntries.length / columns)\n    const columnGroups = []\n\n    for (let i = 0; i < columns; i++) {\n      const startIndex = i * fieldsPerColumn\n      const endIndex = Math.min(startIndex + fieldsPerColumn, formEntries.length)\n      columnGroups.push(formEntries.slice(startIndex, endIndex))\n    }\n\n    const gridStyles = {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gap: '2rem',\n      width: '100%',\n      ...customStyles.formGrid,\n    }\n\n    return (\n      <UI.Box className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n        {columnGroups.map((columnFields, columnIndex) => (\n          <UI.VStack\n            key={columnIndex}\n            className={getUIClasses(uiLibrary, 'VStack')}\n            style={{ gap: '1rem', ...customStyles.formColumn }}\n          >\n            {columnFields.map(([key, value]) => renderFormField(key, value))}\n          </UI.VStack>\n        ))}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container\n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack\n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        \n\n        {error && (\n          <UI.Alert\n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {Object.keys(formData).length > 0 && (\n          <UI.Card\n            className={getUIClasses(uiLibrary, 'Card')}\n            style={{ width: '100%', padding: '1rem', ...customStyles.formCard }}\n          >\n            {renderFormFields()}\n          </UI.Card>\n        )}\n\n        {showControls && Object.keys(formData).length > 0 && (\n          <UI.HStack\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  )\n}\n\nexport default Fields\n","import React, { useMemo, useState } from 'react'\n\n/**\n * List\n * UI-agnostic collapsible list from JSON.\n *\n * Props:\n * - data: Array<{ id?: string|number, label: string, children?: Array, icon?: ReactNode }>\n * - uiLibrary: 'chakra' | 'tailwind' | 'shadcn'\n * - startIcon?: ReactNode                 // appears near the header title (optional)\n * - headerTitle?: React.ReactNode         // title content above the list (default: 'Projects')\n * - headerDescription?: React.ReactNode   // optional description text under the title\n * - mode?: 'light' | 'dark'               // per-component color mode (default: 'dark')\n * - parentIcon?: ReactNode                // legacy parent icon (use open/closed below for disclosure)\n * - parentOpenIcon?: ReactNode            // icon for an open parent (defaults to ▼)\n * - parentClosedIcon?: ReactNode          // icon for a closed parent (defaults to ▶)\n * - childIcon?: ReactNode                 // icon for child leaf nodes\n * - hoverIcon?: ReactNode                 // icon shown on hover at row end (defaults to '…')\n * - onItemClick?: (item) => void          // click on any row\n * - onToggle?: (item, isOpen) => void     // when a parent is toggled\n * - sections?: Array<{ id?: string, title: string, description?: string, collapsible?: boolean, defaultOpen?: boolean, filter?: (item) => boolean }>\n * - groupBy?: (item) => string            // alternative to sections: derive section title from function\n * - sectionOrder?: string[]               // optional order for groupBy section titles\n * - customStyles?: { container?, header?, list?, row?, label?, icon?, hoverIcon?, child?, parent?, sectionHeader? }\n */\nexport default function List({\n  data = [],\n  // headless props\n  classNames = {},\n  styles: styleProps = {},\n  renderers = {},\n  // deprecated: ui library selection (kept for backward compat, ignored in headless)\n  _uiLibrary = 'chakra',\n  startIcon = null,\n  headerTitle = 'My List title',\n  headerDescription = null,\n  mode = 'dark',\n  parentIcon = null,\n  parentOpenIcon = null,\n  parentClosedIcon = null,\n  childIcon = null,\n  hoverIcon = null,\n  onItemClick = () => {},\n  onToggle = () => {},\n  sections = null,\n  groupBy = null,\n  sectionOrder = null,\n  customStyles = {},\n}) {\n  // mark unused legacy prop\n  _uiLibrary\n  // Primitive UI (headless). Consumers can override via `renderers`.\n  const UI = {\n    Container: renderers.Container || 'div',\n    Box: renderers.Box || 'div',\n    Heading: renderers.Heading || 'h2',\n    Text: renderers.Text || 'span',\n  }\n\n  const palette = useMemo(() => {\n    if (mode === 'light') {\n      return {\n        bg: '#ffffff',\n        headerText: '#4B5563',\n        text: '#111827',\n        rowHoverBg: '#F3F4F6',\n        icon: '#374151',\n        hoverIcon: '#6B7280',\n        border: '#E5E7EB',\n      }\n    }\n    // dark (default)\n    return {\n      bg: '#111827',\n      headerText: '#9CA3AF',\n      text: '#E5E7EB',\n      rowHoverBg: '#1F2937',\n      icon: '#E5E7EB',\n      hoverIcon: '#9CA3AF',\n      border: '#374151',\n    }\n  }, [mode])\n\n  const defaults = {\n    container: { background: palette.bg },\n    header: {\n      padding: '8px 12px',\n      color: palette.headerText,\n      fontSize: '12px',\n      textTransform: 'uppercase',\n      letterSpacing: '0.08em',\n    },\n    headerDescription: { padding: '0 12px 8px 12px', color: palette.headerText, fontSize: '12px' },\n    list: { padding: '8px' },\n    row: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      padding: '8px 10px',\n      borderRadius: '6px',\n      cursor: 'pointer',\n      color: palette.text,\n    },\n    label: { flex: 1 },\n    icon: {\n      width: '18px',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: palette.icon,\n    },\n    hoverIcon: { color: palette.hoverIcon },\n    parent: {},\n    child: { paddingLeft: '28px' },\n  }\n\n  const styles = useMemo(\n    () => ({\n      container: {\n        ...defaults.container,\n        ...(customStyles.container || {}),\n        ...(styleProps.container || {}),\n      },\n      header: { ...defaults.header, ...(customStyles.header || {}), ...(styleProps.header || {}) },\n      headerDescription: {\n        ...defaults.headerDescription,\n        ...(customStyles.headerDescription || {}),\n        ...(styleProps.headerDescription || {}),\n      },\n      list: { ...defaults.list, ...(customStyles.list || {}), ...(styleProps.list || {}) },\n      row: { ...defaults.row, ...(customStyles.row || {}), ...(styleProps.row || {}) },\n      label: { ...defaults.label, ...(customStyles.label || {}), ...(styleProps.label || {}) },\n      icon: { ...defaults.icon, ...(customStyles.icon || {}), ...(styleProps.icon || {}) },\n      hoverIcon: {\n        ...defaults.hoverIcon,\n        ...(customStyles.hoverIcon || {}),\n        ...(styleProps.hoverIcon || {}),\n      },\n      parent: { ...defaults.parent, ...(customStyles.parent || {}), ...(styleProps.parent || {}) },\n      child: { ...defaults.child, ...(customStyles.child || {}), ...(styleProps.child || {}) },\n      sectionHeader: { ...(customStyles.sectionHeader || {}), ...(styleProps.sectionHeader || {}) },\n    }),\n    [\n      customStyles,\n      styleProps,\n      defaults.container,\n      defaults.header,\n      defaults.headerDescription,\n      defaults.list,\n      defaults.row,\n      defaults.label,\n      defaults.icon,\n      defaults.hoverIcon,\n      defaults.parent,\n      defaults.child,\n    ],\n  )\n\n  const [openIds, setOpenIds] = useState(() => new Set())\n  const [openSectionIds, setOpenSectionIds] = useState(() => new Set())\n\n  const isParent = (item) => Array.isArray(item.children) && item.children.length > 0\n  const getId = (item, idx, parentPath = '') => item.id ?? `${parentPath}${idx}`\n\n  // Default disclosure and item icons\n  const DefaultParentOpenIcon = <span style={{ fontSize: 14 }}>▼</span>\n  const DefaultParentClosedIcon = <span style={{ fontSize: 14 }}>▶</span>\n  const DefaultParentIcon = <span style={{ fontSize: 14 }}>📁</span>\n  const DefaultChildIcon = <span style={{ fontSize: 14 }}>🗂️</span>\n  const DefaultHoverIcon = <span style={{ fontSize: 16 }}>…</span>\n\n  const toggle = (itemId, item) => {\n    setOpenIds((prev) => {\n      const next = new Set(prev)\n      if (next.has(itemId)) next.delete(itemId)\n      else next.add(itemId)\n      onToggle(item, next.has(itemId))\n      return next\n    })\n  }\n\n  const Row = ({ item, depth = 0, index, parentPath = '' }) => {\n    const [hovered, setHovered] = useState(false)\n    const id = getId(item, index, `${parentPath}${depth}-`)\n    const parent = isParent(item)\n    const open = parent && openIds.has(id)\n\n    return (\n      <UI.Box>\n        <UI.Box\n          onClick={() => {\n            onItemClick(item)\n            if (parent) toggle(id, item)\n          }}\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n          style={{\n            ...styles.row,\n            ...(parent ? styles.parent : styles.child),\n            paddingLeft: parent ? `${10 + depth * 16}px` : `${28 + depth * 16}px`,\n          }}\n          className=\"json-to-list-row\"\n        >\n          {parent ? (\n            <>\n              {/* Disclosure icon for parent (open/closed) */}\n              <UI.Box style={styles.icon}>\n                {open\n                  ? parentOpenIcon || DefaultParentOpenIcon\n                  : parentClosedIcon || DefaultParentClosedIcon}\n              </UI.Box>\n              {/* Item icon (per-item override, then parentIcon, then default) */}\n              <UI.Box style={styles.icon}>{item.icon || parentIcon || DefaultParentIcon}</UI.Box>\n            </>\n          ) : (\n            <UI.Box style={styles.icon}>{item.icon || childIcon || DefaultChildIcon}</UI.Box>\n          )}\n          <UI.Box style={styles.label}>{item.label}</UI.Box>\n          <UI.Box\n            className=\"json-to-list-row-hover\"\n            style={{\n              ...styles.icon,\n              ...styles.hoverIcon,\n              opacity: hovered ? 1 : 0,\n              transition: 'opacity 0.15s ease',\n            }}\n          >\n            {hoverIcon || DefaultHoverIcon}\n          </UI.Box>\n        </UI.Box>\n        {parent && open && (\n          <UI.Box>\n            {item.children.map((child, cIdx) => (\n              <Row\n                key={getId(child, cIdx, id + '-')}\n                item={child}\n                depth={depth + 1}\n                index={cIdx}\n                parentPath={id + '-'}\n              />\n            ))}\n          </UI.Box>\n        )}\n      </UI.Box>\n    )\n  }\n\n  // Section rendering\n  const renderSectionHeader = (id, title, description, collapsible = true, defaultOpen = true) => {\n    const baselineOpen = !!(defaultOpen || !collapsible)\n    const isOpen = openSectionIds.has(id) ? !baselineOpen : baselineOpen\n    const toggle = () =>\n      setOpenSectionIds((prev) => {\n        const next = new Set(prev)\n        if (next.has(id)) next.delete(id)\n        else next.add(id)\n        return next\n      })\n    return (\n      <UI.Box\n        key={`header-${id}`}\n        className={classNames.sectionHeader}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          margin: '8px 8px 4px 8px',\n          ...styles.sectionHeader,\n        }}\n      >\n        <UI.Box\n          className={classNames.sectionHeaderLeft}\n          style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\n        >\n          {collapsible && (\n            <button\n              aria-label={`Toggle ${title}`}\n              onClick={toggle}\n              style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n            >\n              <span>{isOpen ? '▼' : '▶'}</span>\n            </button>\n          )}\n          <UI.Heading className={classNames.heading} style={{ margin: 0, color: '#ffffff' }}>\n            {title}\n          </UI.Heading>\n        </UI.Box>\n        {description && (\n          <UI.Text className={classNames.text} style={{ opacity: 0.8 }}>\n            {description}\n          </UI.Text>\n        )}\n      </UI.Box>\n    )\n  }\n\n  const renderSections = () => {\n    // Explicit sections with filter\n    if (Array.isArray(sections) && sections.length) {\n      return sections.map((sec, sIdx) => {\n        const id = sec.id || `sec-${sIdx}`\n        const header = renderSectionHeader(\n          id,\n          sec.title,\n          sec.description,\n          sec.collapsible !== false,\n          sec.defaultOpen !== false,\n        )\n        const baselineOpen = !!(sec.defaultOpen !== false || sec.collapsible === false)\n        const isOpen = openSectionIds.has(id) ? !baselineOpen : baselineOpen\n        const items = (sec.filter ? data.filter(sec.filter) : data) || []\n        return (\n          <React.Fragment key={`frag-${id}`}>\n            {header}\n            {(!sec.collapsible || isOpen) && (\n              <UI.Box style={styles.list}>\n                {items.map((item, idx) => (\n                  <Row key={getId(item, idx)} item={item} index={idx} />\n                ))}\n              </UI.Box>\n            )}\n          </React.Fragment>\n        )\n      })\n    }\n\n    // groupBy mode\n    if (typeof groupBy === 'function') {\n      const buckets = new Map()\n      data.forEach((item) => {\n        const key = groupBy(item) ?? 'Other'\n        if (!buckets.has(key)) buckets.set(key, [])\n        buckets.get(key).push(item)\n      })\n      const titles =\n        sectionOrder && sectionOrder.length\n          ? sectionOrder.filter((t) => buckets.has(t))\n          : Array.from(buckets.keys())\n      return titles.map((title, sIdx) => {\n        const id = `grp-${sIdx}-${title}`\n        const header = renderSectionHeader(id, title, null, true, true)\n        const baselineOpen = true\n        const isOpen = openSectionIds.has(id) ? !baselineOpen : baselineOpen\n        return (\n          <React.Fragment key={`frag-${id}`}>\n            {header}\n            {isOpen && (\n              <UI.Box style={styles.list}>\n                {buckets.get(title).map((item, idx) => (\n                  <Row key={getId(item, idx)} item={item} index={idx} />\n                ))}\n              </UI.Box>\n            )}\n          </React.Fragment>\n        )\n      })\n    }\n\n    // default (no sections)\n    return (\n      <UI.Box style={styles.list}>\n        {data.map((item, idx) => (\n          <Row key={getId(item, idx)} item={item} index={idx} />\n        ))}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container className={classNames.container} style={styles.container}>\n      <UI.Box className={classNames.header} style={styles.header}>\n        <UI.Box\n          className={classNames.headerLeft}\n          style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\n        >\n          {startIcon && <UI.Box style={styles.icon}>{startIcon}</UI.Box>}\n          <span className={classNames.title}>{headerTitle}</span>\n        </UI.Box>\n      </UI.Box>\n      {headerDescription && (\n        <UI.Box className={classNames.headerDescription} style={styles.headerDescription}>\n          {headerDescription}\n        </UI.Box>\n      )}\n      {renderSections()}\n    </UI.Container>\n  )\n}\n"],"names":["getUIComponents","Container","Box","Button","Input","Select","Textarea","Table","Thead","Tbody","Tr","Th","Td","Text","Heading","Stack","HStack","VStack","Card","Alert","Badge","Grid","GridItem","Flex","Label","getUIClasses","uiLibrary","arguments","length","undefined","component","variant","libraryClasses","tailwind","default","secondary","checkbox","error","success","warning","info","shadcn","componentClasses","_typeof","flattenObject","obj","prefix","flattened","key","Object","prototype","hasOwnProperty","call","newKey","concat","Array","isArray","assign","unflattenObject","flat","result","keys","split","current","i","getInputType","value","fieldConfig","_objectSpread","type","items","rows","includes","toLowerCase","startsWith","match","parseJsonSafely","jsonString","data","JSON","parse","message","formatJson","spaces","stringify","getNestedLevel","getDisplayName","pop","replace","l","toUpperCase","trim","_ref","_ref$uiLibrary","onSave","onCancel","onFieldChange","_ref$saveButtonText","saveButtonText","_ref$cancelButtonText","cancelButtonText","_ref$initialJson","initialJson","_ref$customStyles","customStyles","_ref$showControls","showControls","_ref$pagination","pagination","_ref$pageSize","pageSize","_ref$cacheSize","cacheSize","_ref$initialPage","initialPage","onPageChange","_ref$paginationCompon","paginationComponent","PaginationComponent","_ref$paginationRender","paginationRenderer","props","_objectWithoutProperties","_excluded","_useState2","_slicedToArray","useState","jsonInput","setJsonInput","_useState4","tableData","setTableData","_useState6","setError","_useState8","editableData","setEditableData","_useState0","currentPage","setCurrentPage","pageCacheRef","useRef","Map","lruRef","UI","parseJson","useCallback","parsed","_toConsumableArray","arrayData","err","useEffect","clear","totalRows","useMemo","totalPages","Math","max","ceil","goToPage","nextPage","clamped","min","prevPage","nextPageFn","_jsx","className","style","container","children","_jsxs","gap","stack","alert","errorText","pagerProps","columns","allKeys","Set","forEach","row","add","from","getColumns","page","safePage","has","idx","indexOf","splice","push","get","start","end","slice","set","evictPage","shift","getPageSlice","overflowX","tableContainer","table","map","column","textAlign","th","rowIndex","td","onChange","e","newData","handleCellEdit","target","border","background","input","marginTop","display","alignItems","justifyContent","onClick","disabled","opacity","renderTable","controlButtons","flatData","saveButton","cancelButton","Fields","_classNames","styles","_styleProps","_ref$renderers","renderers","_ref$columns","_ref$fieldConfig","_ref$sections","sections","_ref$includeUnsection","includeUnsectioned","_ref$unsectionedTitle","unsectionedTitle","formData","setFormData","originalFormData","setOriginalFormData","setParsedJson","_useState10","tagInputs","setTagInputs","_useState12","sectionOpenIds","setSectionOpenIds","handleFieldChange","newFormData","_defineProperty","nestedData","renderFormField","fieldTypeConfig","displayName","renderCheckboxField","renderSelectField","renderMultiSelectField","renderTextareaField","renderSpecialInputField","renderNumberField","renderSliderField","_renderTagsField","renderArrayField","renderObjectField","renderTextInputField","_fieldTypeConfig$min","_fieldTypeConfig$max","_fieldTypeConfig$step","_fieldTypeConfig$defa","step","marginBottom","fieldContainer","label","fontWeight","fieldLabel","Number","width","minWidth","cursor","checked","_fieldTypeConfig$opti","select","options","option","_fieldTypeConfig$opti2","selectedValues","flexDirection","newValues","filter","v","fontSize","text","minHeight","textarea","val","parseFloat","every","tags","newTag","addTag","tag","t","prev","removeTag","pillStyle","padding","borderRadius","color","pillCloseStyle","lineHeight","flexWrap","onKeyDown","preventDefault","placeholder","flex","_unused","fontFamily","_unused2","formCard","used","sectionBlocks","sec","secId","id","listed","fields","k","sectionKeys","content","fieldsPerColumn","columnGroups","startIndex","endIndex","gridStyles","gridTemplateColumns","formGrid","group","formColumn","baselineOpen","defaultOpen","collapsible","open","title","next","margin","description","otherBlock","remaining","formStack","formEntries","entries","_ref2","_ref3","columnFields","columnIndex","_ref4","_ref5","renderFormFields","List","_ref$data","_ref$classNames","classNames","_ref$styles","styleProps","_uiLibrary","_ref$startIcon","startIcon","_ref$headerTitle","headerTitle","_ref$headerDescriptio","headerDescription","_ref$mode","mode","_ref$parentIcon","parentIcon","_ref$parentOpenIcon","parentOpenIcon","_ref$parentClosedIcon","parentClosedIcon","_ref$childIcon","childIcon","_ref$hoverIcon","hoverIcon","_ref$onItemClick","onItemClick","_ref$onToggle","onToggle","_ref$groupBy","groupBy","_ref$sectionOrder","sectionOrder","palette","bg","headerText","rowHoverBg","icon","defaults","header","textTransform","letterSpacing","list","parent","child","paddingLeft","sectionHeader","openIds","setOpenIds","openSectionIds","setOpenSectionIds","getId","item","_item$id","parentPath","DefaultParentOpenIcon","DefaultParentClosedIcon","DefaultParentIcon","DefaultChildIcon","DefaultHoverIcon","Row","_ref2$depth","depth","index","_ref2$parentPath","hovered","setHovered","isParent","itemId","toggle","onMouseEnter","onMouseLeave","_Fragment","transition","cIdx","_Row","renderSectionHeader","isOpen","sectionHeaderLeft","heading","headerLeft","sIdx","React","Fragment","buckets","_groupBy","renderSections"],"mappings":"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"}