{"version":3,"file":"index.esm.js","sources":["../lib/utils/uiAdapters.js","../lib/utils/jsonUtils.js","../lib/components/JsonToTable.jsx","../lib/components/JsonToFields.jsx"],"sourcesContent":["// UI Library Adapters\n// This file provides adapters for different UI libraries\n\nexport const getUIComponents = (uiLibrary = 'chakra') => {\n  // All UI libraries use the same HTML elements as base\n  // The styling is handled through classes and props\n  // eslint-disable-next-line no-unused-vars\n  // const _unused = uiLibrary;\n  return {\n    Container: 'div',\n    Box: 'div',\n    Button: 'button',\n    Input: 'input',\n    Select: 'select',\n    Textarea: 'textarea',\n    Table: 'table',\n    Thead: 'thead',\n    Tbody: 'tbody',\n    Tr: 'tr',\n    Th: 'th',\n    Td: 'td',\n    Text: 'span',\n    Heading: 'h2',\n    Stack: 'div',\n    HStack: 'div',\n    VStack: 'div',\n    Card: 'div',\n    Alert: 'div',\n    Badge: 'span',\n    Grid: 'div',\n    GridItem: 'div',\n    Flex: 'div',\n    Label: 'label'\n  };\n};\n\nexport const getUIClasses = (uiLibrary = 'chakra', component, variant = 'default') => {\n  const classMap = {\n    tailwind: {\n      Container: 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n      Box: 'block',\n      Button: {\n        default: 'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n        secondary: 'inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'\n      },\n      Input: {\n        default: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n        checkbox: 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded'\n      },\n      Select: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n      Textarea: 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm resize-vertical',\n      Table: 'min-w-full divide-y divide-gray-200',\n      Thead: 'bg-gray-50',\n      Tbody: 'bg-white divide-y divide-gray-200',\n      Tr: 'hover:bg-gray-50',\n      Th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider',\n      Td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-900',\n      Text: 'text-gray-900',\n      Heading: 'text-2xl font-bold text-gray-900 mb-4',\n      Stack: 'space-y-4',\n      HStack: 'flex space-x-4 items-center',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'bg-white overflow-hidden shadow rounded-lg p-6',\n      Alert: {\n        error: 'bg-red-50 border border-red-200 rounded-md p-4 text-red-800',\n        success: 'bg-green-50 border border-green-200 rounded-md p-4 text-green-800',\n        warning: 'bg-yellow-50 border border-yellow-200 rounded-md p-4 text-yellow-800',\n        info: 'bg-blue-50 border border-blue-200 rounded-md p-4 text-blue-800'\n      },\n      Badge: 'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'block text-sm font-medium text-gray-700'\n    },\n    shadcn: {\n      Container: 'container mx-auto px-4',\n      Box: 'block',\n      Button: {\n        default: 'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2',\n        secondary: 'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2'\n      },\n      Input: {\n        default: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        checkbox: 'h-4 w-4 rounded border border-primary text-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50'\n      },\n      Select: 'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Textarea: 'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Table: 'w-full caption-bottom text-sm',\n      Thead: '[&_tr]:border-b',\n      Tbody: '[&_tr:last-child]:border-0',\n      Tr: 'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      Th: 'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      Td: 'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n      Text: 'text-sm text-muted-foreground',\n      Heading: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      Stack: 'flex flex-col space-y-4',\n      HStack: 'flex space-x-4',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'rounded-lg border bg-card text-card-foreground shadow-sm',\n      Alert: {\n        error: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        success: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        warning: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        info: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground'\n      },\n      Badge: 'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n    }\n  };\n\n  if (uiLibrary === 'chakra') {\n    return ''; // Chakra UI uses props, not classes\n  }\n\n  const libraryClasses = classMap[uiLibrary];\n  if (!libraryClasses || !libraryClasses[component]) {\n    return '';\n  }\n\n  const componentClasses = libraryClasses[component];\n  if (typeof componentClasses === 'object') {\n    return componentClasses[variant] || componentClasses.default || '';\n  }\n\n  return componentClasses;\n};\n","/**\n * Utility functions for JSON parsing and object manipulation\n */\n\n/**\n * Flatten nested objects into dot-notation keys\n * @param {Object} obj - Object to flatten\n * @param {string} prefix - Key prefix for nested properties\n * @returns {Object} Flattened object\n */\nexport const flattenObject = (obj, prefix = '') => {\n  let flattened = {};\n  \n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = prefix ? `${prefix}.${key}` : key;\n      \n      if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(flattened, flattenObject(obj[key], newKey));\n      } else {\n        flattened[newKey] = obj[key];\n      }\n    }\n  }\n  \n  return flattened;\n};\n\n/**\n * Convert flattened object back to nested structure\n * @param {Object} flat - Flattened object with dot-notation keys\n * @returns {Object} Nested object\n */\nexport const unflattenObject = (flat) => {\n  const result = {};\n  \n  for (let key in flat) {\n    const keys = key.split('.');\n    let current = result;\n    \n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!current[keys[i]]) {\n        current[keys[i]] = {};\n      }\n      current = current[keys[i]];\n    }\n    \n    current[keys[keys.length - 1]] = flat[key];\n  }\n  \n  return result;\n};\n\n/**\n * Determine input type based on value and optional field configuration\n * @param {any} value - Value to check\n * @param {string} key - Field key/name\n * @param {Object} fieldConfig - Optional field configuration override\n * @returns {Object} Field type configuration\n */\nexport const getInputType = (value, key = '', fieldConfig = {}) => {\n  // 1. Check explicit field configuration first\n  if (fieldConfig[key]) {\n    return { type: fieldConfig[key].type, ...fieldConfig[key] };\n  }\n  \n  // 2. Basic type detection\n  if (typeof value === 'boolean') return { type: 'checkbox' };\n  if (typeof value === 'number') return { type: 'number' };\n  if (Array.isArray(value)) return { type: 'array', items: value };\n  if (typeof value === 'object' && value !== null) return { type: 'object' };\n  \n  // 3. Enhanced string analysis\n  if (typeof value === 'string') {\n    // Long text detection\n    if (value.length > 100) return { type: 'textarea', rows: 4 };\n    \n    // Email detection\n    if (value.includes('@') || key.toLowerCase().includes('email')) {\n      return { type: 'email' };\n    }\n    \n    // URL detection\n    if (value.startsWith('http') || key.toLowerCase().includes('url')) {\n      return { type: 'url' };\n    }\n    \n    // Date detection\n    if (value.match(/^\\d{4}-\\d{2}-\\d{2}$/) || key.toLowerCase().includes('date')) {\n      return { type: 'date' };\n    }\n    \n    // Password detection\n    if (key.toLowerCase().includes('password')) {\n      return { type: 'password' };\n    }\n  }\n  \n  // 4. Fallback to text\n  return { type: 'text' };\n};\n\n/**\n * Parse JSON string safely\n * @param {string} jsonString - JSON string to parse\n * @returns {Object} Parsed object or error\n */\nexport const parseJsonSafely = (jsonString) => {\n  try {\n    const parsed = JSON.parse(jsonString);\n    return { success: true, data: parsed };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\n/**\n * Format JSON string with proper indentation\n * @param {any} obj - Object to stringify\n * @param {number} spaces - Number of spaces for indentation\n * @returns {string} Formatted JSON string\n */\nexport const formatJson = (obj, spaces = 2) => {\n  return JSON.stringify(obj, null, spaces);\n};\n\n/**\n * Get nested level from key\n * @param {string} key - Dot-notation key\n * @returns {number} Nesting level\n */\nexport const getNestedLevel = (key) => {\n  return key.split('.').length - 1;\n};\n\n/**\n * Get display name from key\n * @param {string} key - Dot-notation key\n * @returns {string} Display name\n */\nexport const getDisplayName = (key) => {\n  return key\n    .split('.')\n    .pop()\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters\n    .replace(/[_-]/g, ' ') // Replace underscores and hyphens with spaces\n    .replace(/\\b\\w/g, l => l.toUpperCase()) // Capitalize first letter of each word\n    .trim();\n};\n","import React, { useState, useEffect } from 'react';\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters';\nimport { getDisplayName } from '../utils/jsonUtils';\n\n/**\n * JsonToTable Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n */\nconst JsonToTable = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson);\n  const [tableData, setTableData] = useState(null);\n  const [error, setError] = useState('');\n  const [editableData, setEditableData] = useState(null);\n\n  const UI = getUIComponents(uiLibrary);\n\n\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson);\n      parseJson(initialJson);\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('');\n      setTableData(null);\n      setEditableData(null);\n      setError('');\n    }\n  }, [initialJson]); // parseJson is stable, no need to include\n\n  const parseJson = (jsonString = jsonInput) => {\n    setError('');\n    setTableData(null);\n    \n    if (!jsonString.trim()) {\n      setError('Please enter some JSON data');\n      return;\n    }\n\n    try {\n      const parsed = JSON.parse(jsonString);\n      \n      if (Array.isArray(parsed)) {\n        if (parsed.length === 0) {\n          setError('The JSON array is empty');\n          return;\n        }\n        setTableData(parsed);\n        setEditableData([...parsed]);\n      } else if (typeof parsed === 'object' && parsed !== null) {\n        const arrayData = [parsed];\n        setTableData(arrayData);\n        setEditableData([...arrayData]);\n      } else {\n        setError('JSON must be an object or array of objects');\n        return;\n      }\n    } catch (err) {\n      setError(`Invalid JSON: ${err.message}`);\n    }\n  };\n\n  const handleCellEdit = (rowIndex, key, value) => {\n    const newData = [...editableData];\n    newData[rowIndex][key] = value;\n    setEditableData(newData);\n    \n    if (onFieldChange) {\n      onFieldChange(key, value, newData);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave && editableData) {\n      const flatData = editableData.map(row => ({ ...row }));\n      onSave(editableData, flatData);\n    }\n  };\n\n  const handleCancel = () => {\n    if (tableData) {\n      setEditableData([...tableData]);\n    }\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n\n\n  const getColumns = () => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const allKeys = new Set();\n    tableData.forEach(row => {\n      Object.keys(row).forEach(key => allKeys.add(key));\n    });\n    \n    return Array.from(allKeys);\n  };\n\n  const renderTable = () => {\n    if (!editableData || editableData.length === 0) return null;\n\n    const columns = getColumns();\n\n    return (\n      <UI.Box \n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ overflowX: 'auto', ...customStyles.tableContainer }}\n      >\n        <UI.Table \n          className={getUIClasses(uiLibrary, 'Table')}\n          style={customStyles.table}\n        >\n          <UI.Thead className={getUIClasses(uiLibrary, 'Thead')}>\n            <UI.Tr className={getUIClasses(uiLibrary, 'Tr')}>\n              {columns.map(column => (\n                <UI.Th \n                  key={column}\n                  className={getUIClasses(uiLibrary, 'Th')}\n                  style={{ textAlign: 'center', ...customStyles.th }}\n                >\n                  {getDisplayName(column)}\n                </UI.Th>\n              ))}\n            </UI.Tr>\n          </UI.Thead>\n          <UI.Tbody className={getUIClasses(uiLibrary, 'Tbody')}>\n            {editableData.map((row, rowIndex) => (\n              <UI.Tr \n                key={rowIndex}\n                className={getUIClasses(uiLibrary, 'Tr')}\n              >\n                {columns.map(column => (\n                  <UI.Td \n                    key={column}\n                    className={getUIClasses(uiLibrary, 'Td')}\n                    style={customStyles.td}\n                  >\n                    <UI.Input\n                      type=\"text\"\n                      value={row[column] || ''}\n                      onChange={(e) => handleCellEdit(rowIndex, column, e.target.value)}\n                      className={getUIClasses(uiLibrary, 'Input')}\n                      style={{ \n                        border: 'none', \n                        background: 'transparent',\n                        ...customStyles.input \n                      }}\n                    />\n                  </UI.Td>\n                ))}\n              </UI.Tr>\n            ))}\n          </UI.Tbody>\n        </UI.Table>\n      </UI.Box>\n    );\n  };\n\n  return (\n    <UI.Container \n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack \n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n\n\n        <UI.Box \n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ width: '100%', ...customStyles.inputContainer }}\n        >\n          <UI.Textarea\n            value={jsonInput}\n            onChange={(e) => setJsonInput(e.target.value)}\n            placeholder=\"Paste your JSON data here...\"\n            className={getUIClasses(uiLibrary, 'Textarea')}\n            style={{ \n             width: '100%',\n              minHeight: '150px', \n              fontFamily: 'monospace',\n              ...customStyles.textarea \n            }}\n          />\n        </UI.Box>\n\n\n\n        {error && (\n          <UI.Alert \n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {renderTable()}\n\n        {showControls && editableData && (\n          <UI.HStack \n            gap=\"2\"\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  );\n};\n\nexport default JsonToTable;\n","import React, { useState, useEffect } from 'react';\nimport { getUIComponents, getUIClasses } from '../utils/uiAdapters';\nimport { flattenObject, unflattenObject, getInputType, parseJsonSafely, getDisplayName } from '../utils/jsonUtils';\n\n/**\n * JsonToFields Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - UI library to use (\"chakra\", \"tailwind\", \"shadcn\")\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n * @param {boolean} props.showJsonInput - Whether to show JSON input textarea\n * @param {number} props.columns - Number of columns for form layout (default: 1)\n * @param {Object} props.fieldConfig - Field configuration for custom input types\n */\nconst JsonToFields = ({\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  showJsonInput = true,\n  columns = 1,\n  fieldConfig = {},\n  ...props\n}) => {\n  const [jsonInput, setJsonInput] = useState(initialJson);\n  const [formData, setFormData] = useState({});\n  const [originalFormData, setOriginalFormData] = useState({});\n  const [, setParsedJson] = useState(null);\n  const [error, setError] = useState('');\n\n  const UI = getUIComponents(uiLibrary);\n\n\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson);\n      parseJson(initialJson);\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('');\n      setFormData({});\n      setOriginalFormData({});\n      setParsedJson(null);\n      setError('');\n    }\n  }, [initialJson]); // parseJson is stable, no need to include\n\n  const parseJson = (jsonString = jsonInput) => {\n    const result = parseJsonSafely(jsonString);\n    \n    if (result.success) {\n      setParsedJson(result.data);\n      const flattened = flattenObject(result.data);\n      setFormData(flattened);\n      setOriginalFormData({ ...flattened });\n      setError('');\n    } else {\n      setError(result.error);\n      setParsedJson(null);\n      setFormData({});\n      setOriginalFormData({});\n    }\n  };\n\n  const handleFieldChange = (key, value) => {\n    const newFormData = {\n      ...formData,\n      [key]: value\n    };\n    setFormData(newFormData);\n    \n    if (onFieldChange) {\n      const nestedData = unflattenObject(newFormData);\n      onFieldChange(key, value, nestedData);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave) {\n      const nestedData = unflattenObject(formData);\n      onSave(nestedData, formData);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData({ ...originalFormData });\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n\n\n  const renderFormField = (key, value) => {\n    const fieldTypeConfig = getInputType(value, key, fieldConfig);\n    const displayName = getDisplayName(key);\n\n    // Handle different field types based on configuration\n    switch (fieldTypeConfig.type) {\n      case 'checkbox':\n        return renderCheckboxField(key, value, displayName, fieldTypeConfig);\n      case 'select':\n        return renderSelectField(key, value, displayName, fieldTypeConfig);\n      case 'multi-select':\n        return renderMultiSelectField(key, value, displayName, fieldTypeConfig);\n      case 'textarea':\n        return renderTextareaField(key, value, displayName, fieldTypeConfig);\n      case 'email':\n      case 'url':\n      case 'date':\n      case 'password':\n        return renderSpecialInputField(key, value, displayName, fieldTypeConfig);\n      case 'number':\n        return renderNumberField(key, value, displayName, fieldTypeConfig);\n      case 'array':\n        return renderArrayField(key, value, displayName, fieldTypeConfig);\n      case 'object':\n        return renderObjectField(key, value, displayName, fieldTypeConfig);\n      default:\n        return renderTextInputField(key, value, displayName, fieldTypeConfig);\n    }\n  };\n\n  // Checkbox field renderer\n  const renderCheckboxField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer', ...customStyles.label }}\n        >\n          <input\n            type=\"checkbox\"\n            checked={formData[key] || false}\n            onChange={(e) => handleFieldChange(key, e.target.checked)}\n            className={getUIClasses(uiLibrary, 'Input', 'checkbox')}\n            style={customStyles.checkbox}\n          />\n          <UI.Text \n            className={getUIClasses(uiLibrary, 'Text')}\n            style={{ fontWeight: '500', ...customStyles.fieldLabel }}\n          >\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n      </UI.Box>\n    );\n  };\n\n  // Select field renderer\n  const renderSelectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Select\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Select')}\n          style={{ width: '100%', ...customStyles.select }}\n        >\n          <option value=\"\">Select {displayName}</option>\n          {fieldTypeConfig.options?.map(option => (\n            <option key={option} value={option}>{option}</option>\n          ))}\n        </UI.Select>\n      </UI.Box>\n    );\n  };\n\n  // Multi-select field renderer\n  const renderMultiSelectField = (key, value, displayName, fieldTypeConfig) => {\n    const selectedValues = Array.isArray(formData[key]) ? formData[key] : [];\n    \n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n          {fieldTypeConfig.options?.map(option => (\n            <UI.Label key={option} style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedValues.includes(option)}\n                onChange={(e) => {\n                  const newValues = e.target.checked \n                    ? [...selectedValues, option]\n                    : selectedValues.filter(v => v !== option);\n                  handleFieldChange(key, newValues);\n                }}\n                style={customStyles.checkbox}\n              />\n              <UI.Text style={{ fontSize: '14px', ...customStyles.text }}>{option}</UI.Text>\n            </UI.Label>\n          ))}\n        </UI.Box>\n      </UI.Box>\n    );\n  };\n\n  // Textarea field renderer\n  const renderTextareaField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Textarea\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{ \n            width: '100%',\n            minHeight: `${(fieldTypeConfig.rows || 4) * 1.5}rem`,\n            ...customStyles.textarea \n          }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Special input field renderer (email, url, date, password)\n  const renderSpecialInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type={fieldTypeConfig.type}\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Number field renderer\n  const renderNumberField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"number\"\n          value={formData[key] || ''}\n          onChange={(e) => {\n            const val = parseFloat(e.target.value) || 0;\n            handleFieldChange(key, val);\n          }}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Array field renderer\n  const renderArrayField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName} (Array)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value);\n              handleFieldChange(key, parsed);\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value);\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{ \n            fontFamily: 'monospace', \n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea \n          }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Object field renderer\n  const renderObjectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName} (Object)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value);\n              handleFieldChange(key, parsed);\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value);\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{ \n            fontFamily: 'monospace', \n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea \n          }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Text input field renderer (default)\n  const renderTextInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box \n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label \n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{ display: 'block', fontWeight: '600', marginBottom: '0.5rem', ...customStyles.fieldLabel }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"text\"\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    );\n  };\n\n  // Function to render form fields in columns\n  const renderFormFields = () => {\n    const formEntries = Object.entries(formData);\n    \n    if (columns <= 1) {\n      // Single column layout (default)\n      return (\n        <UI.VStack \n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {formEntries.map(([key, value]) => renderFormField(key, value))}\n        </UI.VStack>\n      );\n    }\n\n    // Multi-column layout\n    const fieldsPerColumn = Math.ceil(formEntries.length / columns);\n    const columnGroups = [];\n    \n    for (let i = 0; i < columns; i++) {\n      const startIndex = i * fieldsPerColumn;\n      const endIndex = Math.min(startIndex + fieldsPerColumn, formEntries.length);\n      columnGroups.push(formEntries.slice(startIndex, endIndex));\n    }\n\n    const gridStyles = {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gap: '2rem',\n      width: '100%',\n      ...customStyles.formGrid\n    };\n\n    return (\n      <UI.Box \n        className={getUIClasses(uiLibrary, 'Box')}\n        style={gridStyles}\n      >\n        {columnGroups.map((columnFields, columnIndex) => (\n          <UI.VStack \n            key={columnIndex}\n            className={getUIClasses(uiLibrary, 'VStack')}\n            style={{ gap: '1rem', ...customStyles.formColumn }}\n          >\n            {columnFields.map(([key, value]) => renderFormField(key, value))}\n          </UI.VStack>\n        ))}\n      </UI.Box>\n    );\n  };\n\n  return (\n    <UI.Container \n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack \n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n\n\n        {showJsonInput && (\n          <>\n            <UI.Box \n              className={getUIClasses(uiLibrary, 'Box')}\n              style={{ width: '100%', ...customStyles.inputContainer }}\n            >\n              <UI.Textarea\n                value={jsonInput}\n                onChange={(e) => setJsonInput(e.target.value)}\n                placeholder=\"Paste your JSON data here...\"\n                className={getUIClasses(uiLibrary, 'Textarea')}\n                style={{ \n                  minHeight: '150px', \n                  fontFamily: 'monospace',\n                  ...customStyles.textarea \n                }}\n              />\n            </UI.Box>\n\n\n          </>\n        )}\n\n        {error && (\n          <UI.Alert \n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {Object.keys(formData).length > 0 && (\n          <UI.Card \n            className={getUIClasses(uiLibrary, 'Card')}\n            style={{ width: '100%', padding: '1rem', ...customStyles.formCard }}\n          >\n            {renderFormFields()}\n          </UI.Card>\n        )}\n\n        {showControls && Object.keys(formData).length > 0 && (\n          <UI.HStack \n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  );\n};\n\nexport default JsonToFields;\n"],"names":["getUIComponents","Container","Box","Button","Input","Select","Textarea","Table","Thead","Tbody","Tr","Th","Td","Text","Heading","Stack","HStack","VStack","Card","Alert","Badge","Grid","GridItem","Flex","Label","getUIClasses","uiLibrary","arguments","length","undefined","component","variant","libraryClasses","tailwind","default","secondary","checkbox","error","success","warning","info","shadcn","componentClasses","_typeof","flattenObject","obj","prefix","flattened","key","Object","prototype","hasOwnProperty","call","newKey","concat","Array","isArray","assign","unflattenObject","flat","result","keys","split","current","i","getInputType","value","fieldConfig","_objectSpread","type","items","rows","includes","toLowerCase","startsWith","match","parseJsonSafely","jsonString","data","JSON","parse","message","formatJson","spaces","stringify","getNestedLevel","getDisplayName","pop","replace","l","toUpperCase","trim","JsonToTable","_ref","_ref$uiLibrary","onSave","onCancel","onFieldChange","_ref$saveButtonText","saveButtonText","_ref$cancelButtonText","cancelButtonText","_ref$initialJson","initialJson","_ref$customStyles","customStyles","_ref$showControls","showControls","props","_objectWithoutProperties","_excluded","_useState2","_slicedToArray","useState","jsonInput","setJsonInput","_useState4","tableData","setTableData","_useState6","setError","_useState8","editableData","setEditableData","UI","useEffect","parseJson","parsed","_toConsumableArray","arrayData","err","_jsx","className","style","container","children","_jsxs","gap","stack","width","inputContainer","onChange","e","target","placeholder","minHeight","fontFamily","textarea","alert","errorText","columns","allKeys","Set","forEach","row","add","from","getColumns","overflowX","tableContainer","table","map","column","textAlign","th","rowIndex","td","newData","handleCellEdit","border","background","input","renderTable","marginTop","controlButtons","onClick","flatData","saveButton","cancelButton","JsonToFields","_ref$showJsonInput","showJsonInput","_ref$columns","_ref$fieldConfig","formData","setFormData","originalFormData","setOriginalFormData","setParsedJson","_useState0","handleFieldChange","newFormData","_defineProperty","nestedData","renderFormField","fieldTypeConfig","displayName","renderCheckboxField","renderSelectField","renderMultiSelectField","renderTextareaField","renderSpecialInputField","renderNumberField","renderArrayField","renderObjectField","renderTextInputField","marginBottom","fieldContainer","display","alignItems","cursor","label","checked","fontWeight","fieldLabel","_fieldTypeConfig$opti","select","options","option","_fieldTypeConfig$opti2","selectedValues","flexDirection","newValues","filter","v","fontSize","text","val","parseFloat","_unused","_unused2","_Fragment","padding","formCard","formEntries","entries","formStack","_ref2","_ref3","fieldsPerColumn","Math","ceil","columnGroups","startIndex","endIndex","min","push","slice","gridStyles","gridTemplateColumns","formGrid","columnFields","columnIndex","formColumn","_ref4","_ref5","renderFormFields"],"mappings":"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"}