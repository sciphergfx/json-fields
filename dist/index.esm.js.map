{"version":3,"file":"index.esm.js","sources":["../lib/utils/jsonUtils.js","../lib/components/JsonToFields.jsx","../lib/utils/uiAdapters.js"],"sourcesContent":["/**\n * Utility functions for JSON parsing and object manipulation\n */\n\n/**\n * Flatten nested objects into dot-notation keys\n * @param {Object} obj - Object to flatten\n * @param {string} prefix - Key prefix for nested properties\n * @returns {Object} Flattened object\n */\nexport const flattenObject = (obj, prefix = '') => {\n  let flattened = {}\n\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = prefix ? `${prefix}.${key}` : key\n\n      if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(flattened, flattenObject(obj[key], newKey))\n      } else {\n        flattened[newKey] = obj[key]\n      }\n    }\n  }\n\n  return flattened\n}\n\n/**\n * Convert flattened object back to nested structure\n * @param {Object} flat - Flattened object with dot-notation keys\n * @returns {Object} Nested object\n */\nexport const unflattenObject = (flat) => {\n  const result = {}\n\n  for (let key in flat) {\n    const keys = key.split('.')\n    let current = result\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      if (!current[keys[i]]) {\n        current[keys[i]] = {}\n      }\n      current = current[keys[i]]\n    }\n\n    current[keys[keys.length - 1]] = flat[key]\n  }\n\n  return result\n}\n\n/**\n * Determine input type based on value and optional field configuration\n * @param {any} value - Value to check\n * @param {string} key - Field key/name\n * @param {Object} fieldConfig - Optional field configuration override\n * @returns {Object} Field type configuration\n */\nexport const getInputType = (value, key = '', fieldConfig = {}) => {\n  // 1. Check explicit field configuration first\n  if (fieldConfig[key]) {\n    return { type: fieldConfig[key].type, ...fieldConfig[key] }\n  }\n\n  // 2. Basic type detection\n  if (typeof value === 'boolean') return { type: 'checkbox' }\n  if (typeof value === 'number') return { type: 'number' }\n  if (Array.isArray(value)) return { type: 'array', items: value }\n  if (typeof value === 'object' && value !== null) return { type: 'object' }\n\n  // 3. Enhanced string analysis\n  if (typeof value === 'string') {\n    // Long text detection\n    if (value.length > 100) return { type: 'textarea', rows: 4 }\n\n    // Email detection\n    if (value.includes('@') || key.toLowerCase().includes('email')) {\n      return { type: 'email' }\n    }\n\n    // URL detection\n    if (value.startsWith('http') || key.toLowerCase().includes('url')) {\n      return { type: 'url' }\n    }\n\n    // Date detection\n    if (value.match(/^\\d{4}-\\d{2}-\\d{2}$/) || key.toLowerCase().includes('date')) {\n      return { type: 'date' }\n    }\n\n    // Password detection\n    if (key.toLowerCase().includes('password')) {\n      return { type: 'password' }\n    }\n  }\n\n  // 4. Fallback to text\n  return { type: 'text' }\n}\n\n/**\n * Parse JSON string safely\n * @param {string} jsonString - JSON string to parse\n * @returns {Object} Parsed object or error\n */\nexport const parseJsonSafely = (jsonString) => {\n  try {\n    const parsed = JSON.parse(jsonString)\n    return { success: true, data: parsed }\n  } catch (error) {\n    return { success: false, error: error.message }\n  }\n}\n\n/**\n * Format JSON string with proper indentation\n * @param {any} obj - Object to stringify\n * @param {number} spaces - Number of spaces for indentation\n * @returns {string} Formatted JSON string\n */\nexport const formatJson = (obj, spaces = 2) => {\n  return JSON.stringify(obj, null, spaces)\n}\n\n/**\n * Get nested level from key\n * @param {string} key - Dot-notation key\n * @returns {number} Nesting level\n */\nexport const getNestedLevel = (key) => {\n  return key.split('.').length - 1\n}\n\n/**\n * Get display name from key\n * @param {string} key - Dot-notation key\n * @returns {string} Display name\n */\nexport const getDisplayName = (key) => {\n  return key\n    .split('.')\n    .pop()\n    .replace(/([A-Z])/g, ' $1') // Add space before capital letters\n    .replace(/[_-]/g, ' ') // Replace underscores and hyphens with spaces\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Capitalize first letter of each word\n    .trim()\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  flattenObject,\n  unflattenObject,\n  getInputType,\n  parseJsonSafely,\n  getDisplayName,\n} from '../utils/jsonUtils'\n\n/**\n * Fields Component - UI Library Agnostic\n * @param {Object} props - Component props\n * @param {string} props.uiLibrary - (deprecated, ignored in headless)\n * @param {Object} [props.classNames] - slot classes for headless styling\n * @param {Object} [props.styles] - slot inline styles for headless styling\n * @param {Object} [props.renderers] - primitive render overrides: { Container, Box, Button, Input, Select, Textarea, Text, Heading, VStack, HStack, Card, Alert, Label }\n * @param {Function} props.onSave - Callback when save is triggered (nestedData, flatData) => void\n * @param {Function} props.onCancel - Callback when cancel is triggered () => void\n * @param {Function} props.onFieldChange - Callback when field changes (key, value, fullData) => void\n * @param {string} props.saveButtonText - Text for save button\n * @param {string} props.cancelButtonText - Text for cancel button\n * @param {string} props.initialJson - Initial JSON string\n * @param {Object} props.customStyles - Custom styles object\n * @param {boolean} props.showControls - Whether to show save/cancel buttons\n * @param {number} props.columns - Number of columns for form layout (default: 2)\n * @param {Object} props.fieldConfig - Field configuration for custom input types\n * @param {Array} [props.sections] - Optional sections to group fields: [{ id?, title, description?, fields: string[], collapsible?: boolean, defaultOpen?: boolean }]\n * @param {boolean} [props.includeUnsectioned=false] - If true, render fields not listed in sections under an \"Other\" section\n * @param {string} [props.unsectionedTitle='Other'] - Title for the unsectioned fields section\n */\nconst Fields = ({\n  // headless styling hooks\n  _classNames = {},\n  styles: _styleProps = {},\n  renderers = {},\n  // deprecated uiLibrary (ignored in headless; kept for backward compat)\n  uiLibrary = 'chakra',\n  onSave,\n  onCancel,\n  onFieldChange,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Reset Form',\n  initialJson = '',\n  customStyles = {},\n  showControls = true,\n  \n  columns = 2,\n  fieldConfig = {},\n  sections = null,\n  includeUnsectioned = false,\n  unsectionedTitle = 'Other',\n  ...props\n}) => {\n  // mark intentionally unused headless props to satisfy lint\n  _classNames\n  _styleProps\n  const [jsonInput, setJsonInput] = useState(initialJson)\n  const [formData, setFormData] = useState({})\n  const [originalFormData, setOriginalFormData] = useState({})\n  const [, setParsedJson] = useState(null)\n  const [error, setError] = useState('')\n  // Local input state for tags fields keyed by field name\n  const [tagInputs, setTagInputs] = useState({})\n  // Open state for collapsible sections\n  const [sectionOpenIds, setSectionOpenIds] = useState(() => new Set())\n\n  // Headless primitives; can be overridden by `renderers`\n  const UI = {\n    Container: renderers.Container || 'div',\n    Box: renderers.Box || 'div',\n    Button: renderers.Button || 'button',\n    Input: renderers.Input || 'input',\n    Select: renderers.Select || 'select',\n    Textarea: renderers.Textarea || 'textarea',\n    Text: renderers.Text || 'span',\n    Heading: renderers.Heading || 'h2',\n    VStack: renderers.VStack || 'div',\n    HStack: renderers.HStack || 'div',\n    Card: renderers.Card || 'div',\n    Alert: renderers.Alert || 'div',\n    Label: renderers.Label || 'label',\n  }\n\n  // Key-Value list renderer (generic object/array of objects)\n  const renderKeyValueListField = (key, value, displayName, fieldTypeConfig = {}) => {\n    const originalIsArray = Array.isArray(value)\n    const originalIsObjectMap = !originalIsArray && typeof value === 'object' && value !== null\n\n    // Normalize to array of row objects for editing\n    const rows = (() => {\n      if (originalIsArray) return value\n      if (originalIsObjectMap) return Object.entries(value).map(([k, v]) => ({ key: k, value: v }))\n      return []\n    })()\n\n    // Determine columns to render\n    let columns = []\n    if (rows.length) {\n      const set = new Set()\n      rows.forEach((r) => Object.keys(r || {}).forEach((k) => set.add(k)))\n      columns = Array.from(set)\n    } else if (Array.isArray(fieldTypeConfig.columns)) {\n      columns = fieldTypeConfig.columns\n    } else if (originalIsObjectMap) {\n      columns = ['key', 'value']\n    } else {\n      columns = ['key', 'value'] // sensible default\n    }\n\n    // Helpers to rebuild the original shape\n    const commit = (nextRows) => {\n      if (originalIsArray) {\n        handleFieldChange(key, nextRows)\n      } else if (originalIsObjectMap) {\n        const nextObj = {}\n        nextRows.forEach((r) => {\n          const k = r.key ?? r.name\n          const v = r.value ?? r.val\n          if (k !== undefined && k !== '') nextObj[k] = v\n        })\n        handleFieldChange(key, nextObj)\n      } else {\n        handleFieldChange(key, nextRows)\n      }\n    }\n\n    const updateCell = (rowIdx, colKey, val) => {\n      const next = rows.map((r, i) => (i === rowIdx ? { ...r, [colKey]: val } : r))\n      commit(next)\n    }\n\n    const addRow = () => {\n      const template = columns.reduce((acc, c) => ({ ...acc, [c]: '' }), {})\n      commit([...rows, template])\n    }\n\n    const removeRow = (idx) => {\n      const next = rows.filter((_, i) => i !== idx)\n      commit(next)\n    }\n\n    const gridRow = {\n      display: 'grid',\n      gridTemplateColumns: `${'1fr '.repeat(columns.length)}auto`.trim(),\n      gap: '0.5rem',\n      alignItems: 'center',\n      padding: '3px 0px',\n    }\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n\n        {/* Header row (optional) */}\n        {fieldTypeConfig.showHeader !== false && (\n          <UI.Box style={{ ...gridRow, fontSize: '12px', opacity: 0.8 }}>\n            {columns.map((c) => (\n              <UI.Text key={`hdr-${c}`}>{c}</UI.Text>\n            ))}\n            <span />\n          </UI.Box>\n        )}\n\n        <UI.VStack style={{ gap: '0.5rem' }}>\n          {rows.map((row, idx) => (\n            <UI.Box key={`${key}-${idx}`} style={gridRow}>\n              {columns.map((c) => (\n                <UI.Input\n                  key={`${key}-${idx}-${c}`}\n                  type=\"text\"\n                  placeholder={c}\n                  value={row?.[c] ?? ''}\n                  onChange={(e) => updateCell(idx, c, e.target.value)}\n                  className={getUIClasses(uiLibrary, 'Input')}\n                  style={customStyles.input}\n                />\n              ))}\n              <UI.Button\n                aria-label={`Remove ${displayName} row ${idx + 1}`}\n                onClick={() => removeRow(idx)}\n                className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n                style={{ padding: '6px 10px' }}\n              >\n                ×\n              </UI.Button>\n            </UI.Box>\n          ))}\n\n          <UI.Button\n            onClick={addRow}\n            className={getUIClasses(uiLibrary, 'Button', 'default')}\n            style={{ alignSelf: 'flex-start', padding: '6px 10px' }}\n          >\n            + Add {displayName}\n          </UI.Button>\n        </UI.VStack>\n      </UI.Box>\n    )\n  }\n\n  // No-op for legacy class mapping\n  const getUIClasses = () => ''\n\n  const parseJson = useCallback(\n    (jsonString = jsonInput) => {\n      const result = parseJsonSafely(jsonString)\n\n      if (result.success) {\n        setParsedJson(result.data)\n        const flattened = flattenObject(result.data)\n        setFormData(flattened)\n        setOriginalFormData({ ...flattened })\n        setError('')\n      } else {\n        setError(result.error)\n        setParsedJson(null)\n        setFormData({})\n        setOriginalFormData({})\n      }\n    },\n    [jsonInput],\n  )\n\n  useEffect(() => {\n    if (initialJson) {\n      setJsonInput(initialJson)\n      parseJson(initialJson)\n    } else if (initialJson === '') {\n      // Clear everything when initialJson is explicitly set to empty string\n      setJsonInput('')\n      setFormData({})\n      setOriginalFormData({})\n      setParsedJson(null)\n      setError('')\n    }\n  }, [initialJson, parseJson])\n\n  \n\n  const handleFieldChange = (key, value) => {\n    const newFormData = {\n      ...formData,\n      [key]: value,\n    }\n    setFormData(newFormData)\n\n    if (onFieldChange) {\n      const nestedData = unflattenObject(newFormData)\n      onFieldChange(key, value, nestedData)\n    }\n  }\n\n  const handleSave = () => {\n    if (onSave) {\n      const nestedData = unflattenObject(formData)\n      onSave(nestedData, formData)\n    }\n  }\n\n  const handleCancel = () => {\n    setFormData({ ...originalFormData })\n    if (onCancel) {\n      onCancel()\n    }\n  }\n\n  const renderFormField = (key, value) => {\n    const fieldTypeConfig = getInputType(value, key, fieldConfig)\n    const displayName = getDisplayName(key)\n\n    // Handle different field types based on configuration\n    switch (fieldTypeConfig.type) {\n      case 'checkbox':\n        return renderCheckboxField(key, value, displayName, fieldTypeConfig)\n      case 'select':\n        return renderSelectField(key, value, displayName, fieldTypeConfig)\n      case 'multi-select':\n        return renderMultiSelectField(key, value, displayName, fieldTypeConfig)\n      case 'textarea':\n        return renderTextareaField(key, value, displayName, fieldTypeConfig)\n      case 'email':\n      case 'url':\n      case 'date':\n      case 'password':\n        return renderSpecialInputField(key, value, displayName, fieldTypeConfig)\n      case 'number':\n        return renderNumberField(key, value, displayName, fieldTypeConfig)\n      case 'slider':\n        return renderSliderField(key, value, displayName, fieldTypeConfig)\n      case 'tags':\n        return _renderTagsField(key, value, displayName, fieldTypeConfig)\n      case 'key-value-list':\n        return renderKeyValueListField(key, value, displayName, fieldTypeConfig)\n      case 'array':\n        return renderArrayField(key, value, displayName, fieldTypeConfig)\n      case 'object':\n        return renderObjectField(key, value, displayName, fieldTypeConfig)\n      default:\n        return renderTextInputField(key, value, displayName, fieldTypeConfig)\n    }\n  }\n\n  // Slider field renderer (HTML range input)\n  const renderSliderField = (key, value, displayName, fieldTypeConfig) => {\n    const min = fieldTypeConfig.min ?? 0\n    const max = fieldTypeConfig.max ?? 100\n    const step = fieldTypeConfig.step ?? 1\n    const current = typeof formData[key] === 'number' ? formData[key] : (fieldTypeConfig.default ?? min)\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label className={getUIClasses(uiLibrary, 'Label')} style={customStyles.label}>\n          <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ fontWeight: '500', ...customStyles.fieldLabel }}>\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\n          <input\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={current}\n            onChange={(e) => handleFieldChange(key, Number(e.target.value))}\n            className={getUIClasses(uiLibrary, 'Input', 'range')}\n            style={{ width: '100%' }}\n          />\n          <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ minWidth: '3rem', textAlign: 'right' }}>\n            {current}\n          </UI.Text>\n        </div>\n      </UI.Box>\n    )\n  }\n\n  // Checkbox field renderer\n  const renderCheckboxField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem',\n            cursor: 'pointer',\n            ...customStyles.label,\n          }}\n        >\n          <input\n            type=\"checkbox\"\n            checked={formData[key] || false}\n            onChange={(e) => handleFieldChange(key, e.target.checked)}\n            className={getUIClasses(uiLibrary, 'Input', 'checkbox')}\n            style={customStyles.checkbox}\n          />\n          <UI.Text\n            className={getUIClasses(uiLibrary, 'Text')}\n            style={{ fontWeight: '500', ...customStyles.fieldLabel }}\n          >\n            {displayName}\n          </UI.Text>\n        </UI.Label>\n      </UI.Box>\n    )\n  }\n\n  // Select field renderer\n  const renderSelectField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Select\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Select')}\n          style={{ width: '100%', ...customStyles.select }}\n        >\n          <option value=\"\">Select {displayName}</option>\n          {fieldTypeConfig.options?.map((option) => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </UI.Select>\n      </UI.Box>\n    )\n  }\n\n  // Multi-select field renderer\n  const renderMultiSelectField = (key, value, displayName, fieldTypeConfig) => {\n    const selectedValues = Array.isArray(formData[key]) ? formData[key] : []\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n          {fieldTypeConfig.options?.map((option) => (\n            <UI.Label\n              key={option}\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={selectedValues.includes(option)}\n                onChange={(e) => {\n                  const newValues = e.target.checked\n                    ? [...selectedValues, option]\n                    : selectedValues.filter((v) => v !== option)\n                  handleFieldChange(key, newValues)\n                }}\n                style={customStyles.checkbox}\n              />\n              <UI.Text style={{ fontSize: '14px', ...customStyles.text }}>{option}</UI.Text>\n            </UI.Label>\n          ))}\n        </UI.Box>\n      </UI.Box>\n    )\n  }\n\n  // Textarea field renderer\n  const renderTextareaField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Textarea\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            width: '100%',\n            minHeight: `${(fieldTypeConfig.rows || 4) * 1.5}rem`,\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Special input field renderer (email, url, date, password)\n  const renderSpecialInputField = (key, value, displayName, fieldTypeConfig) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type={fieldTypeConfig.type}\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Number field renderer\n  const renderNumberField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"number\"\n          value={formData[key] || ''}\n          onChange={(e) => {\n            const val = parseFloat(e.target.value) || 0\n            handleFieldChange(key, val)\n          }}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Array field renderer\n  const renderArrayField = (key, value, displayName, fieldTypeConfig) => {\n    const arr = Array.isArray(value) ? value : []\n    const isStringArray = arr.every((v) => typeof v === 'string')\n\n    // If it's an array of strings, render as pill chips with add/delete\n    if (isStringArray) {\n      const tags = Array.isArray(formData[key]) ? formData[key] : []\n      const newTag = tagInputs[key] || ''\n\n      const addTag = (tag) => {\n        const t = (tag || '').trim()\n        if (!t) return\n        if (tags.includes(t)) return\n        handleFieldChange(key, [...tags, t])\n        setTagInputs((prev) => ({ ...prev, [key]: '' }))\n      }\n\n      const removeTag = (tag) => {\n        handleFieldChange(\n          key,\n          tags.filter((t) => t !== tag),\n        )\n      }\n\n      const onKeyDown = (e) => {\n        if (e.key === 'Enter' || e.key === ',') {\n          e.preventDefault()\n          addTag(newTag)\n        } else if (e.key === 'Backspace' && !newTag && tags.length) {\n          removeTag(tags[tags.length - 1])\n        }\n      }\n\n      const pillStyle = {\n        display: 'inline-flex',\n        alignItems: 'center',\n        gap: '6px',\n        padding: '4px 8px',\n        borderRadius: '999px',\n        background: '#eef2ff',\n        color: '#3730a3',\n        border: '1px solid #c7d2fe',\n        fontSize: '12px',\n      }\n\n      const pillCloseStyle = {\n        cursor: 'pointer',\n        border: 'none',\n        background: 'transparent',\n        color: '#4338ca',\n        fontSize: '14px',\n        lineHeight: 1,\n      }\n\n      return (\n        <UI.Box\n          key={key}\n          className={getUIClasses(uiLibrary, 'Box')}\n          style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n        >\n          <UI.Label\n            className={getUIClasses(uiLibrary, 'Label')}\n            style={{\n              display: 'block',\n              fontWeight: '600',\n              marginBottom: '0.5rem',\n              ...customStyles.fieldLabel,\n            }}\n          >\n            {displayName}\n          </UI.Label>\n          <UI.Box style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>\n            {tags.map((tag) => (\n              <span key={tag} style={pillStyle}>\n                {tag}\n                <button\n                  aria-label={`Remove ${tag}`}\n                  onClick={() => removeTag(tag)}\n                  style={pillCloseStyle}\n                >\n                  ×\n                </button>\n              </span>\n            ))}\n            <UI.Input\n              type=\"text\"\n              value={newTag}\n              onChange={(e) => setTagInputs((prev) => ({ ...prev, [key]: e.target.value }))}\n              onKeyDown={onKeyDown}\n              placeholder={fieldTypeConfig.placeholder || `Add ${displayName} and press Enter`}\n              className={getUIClasses(uiLibrary, 'Input')}\n              style={{ minWidth: '140px', flex: '0 1 auto', ...customStyles.input }}\n            />\n            <UI.Button\n              onClick={() => addTag(newTag)}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={{ padding: '6px 10px' }}\n            >\n              Add\n            </UI.Button>\n          </UI.Box>\n        </UI.Box>\n      )\n    }\n\n    // Fallback: render as JSON textarea for non-string arrays\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName} (Array)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value)\n              handleFieldChange(key, parsed)\n            } catch {\n              handleFieldChange(key, e.target.value)\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            fontFamily: 'monospace',\n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Tags field renderer (pill chips with delete and input to add)\n  const _renderTagsField = (key, value, displayName, fieldTypeConfig) => {\n    const tags = Array.isArray(formData[key]) ? formData[key] : []\n    const newTag = tagInputs[key] || ''\n\n    const addTag = (tag) => {\n      const t = (tag || '').trim()\n      if (!t) return\n      if (tags.includes(t)) return\n      handleFieldChange(key, [...tags, t])\n      setTagInputs((prev) => ({ ...prev, [key]: '' }))\n    }\n\n    const removeTag = (tag) => {\n      handleFieldChange(\n        key,\n        tags.filter((t) => t !== tag),\n      )\n    }\n\n    const onKeyDown = (e) => {\n      if (e.key === 'Enter' || e.key === ',') {\n        e.preventDefault()\n        addTag(newTag)\n      } else if (e.key === 'Backspace' && !newTag && tags.length) {\n        // quick remove last tag\n        removeTag(tags[tags.length - 1])\n      }\n    }\n\n    const pillStyle = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gap: '6px',\n      padding: '4px 8px',\n      borderRadius: '999px',\n      background: '#eef2ff',\n      color: '#3730a3',\n      border: '1px solid #c7d2fe',\n      fontSize: '12px',\n    }\n\n    const pillCloseStyle = {\n      cursor: 'pointer',\n      border: 'none',\n      background: 'transparent',\n      color: '#4338ca',\n      fontSize: '14px',\n      lineHeight: 1,\n    }\n\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Box style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', alignItems: 'center' }}>\n          {tags.map((tag) => (\n            <span key={tag} style={pillStyle}>\n              {tag}\n              <button\n                aria-label={`Remove ${tag}`}\n                onClick={() => removeTag(tag)}\n                style={pillCloseStyle}\n              >\n                ×\n              </button>\n            </span>\n          ))}\n          <UI.Input\n            type=\"text\"\n            value={newTag}\n            onChange={(e) => setTagInputs((prev) => ({ ...prev, [key]: e.target.value }))}\n            onKeyDown={onKeyDown}\n            placeholder={fieldTypeConfig.placeholder || 'Add tag and press Enter'}\n            className={getUIClasses(uiLibrary, 'Input')}\n            style={{ minWidth: '140px', flex: '0 1 auto', ...customStyles.input }}\n          />\n          <UI.Button\n            onClick={() => addTag(newTag)}\n            className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n            style={{ padding: '6px 10px' }}\n          >\n            Add\n          </UI.Button>\n        </UI.Box>\n      </UI.Box>\n    )\n  }\n\n  // Object field renderer\n  const renderObjectField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName} (Object)\n        </UI.Label>\n        <UI.Textarea\n          value={JSON.stringify(value, null, 2)}\n          onChange={(e) => {\n            try {\n              const parsed = JSON.parse(e.target.value)\n              handleFieldChange(key, parsed)\n            } catch {\n              // Keep the raw string value for now\n              handleFieldChange(key, e.target.value)\n            }\n          }}\n          className={getUIClasses(uiLibrary, 'Textarea')}\n          style={{\n            fontFamily: 'monospace',\n            minHeight: '100px',\n            width: '100%',\n            ...customStyles.textarea,\n          }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Text input field renderer (default)\n  const renderTextInputField = (key, value, displayName) => {\n    return (\n      <UI.Box\n        key={key}\n        className={getUIClasses(uiLibrary, 'Box')}\n        style={{ marginBottom: '1rem', ...customStyles.fieldContainer }}\n      >\n        <UI.Label\n          className={getUIClasses(uiLibrary, 'Label')}\n          style={{\n            display: 'block',\n            fontWeight: '600',\n            marginBottom: '0.5rem',\n            ...customStyles.fieldLabel,\n          }}\n        >\n          {displayName}\n        </UI.Label>\n        <UI.Input\n          type=\"text\"\n          value={formData[key] || ''}\n          onChange={(e) => handleFieldChange(key, e.target.value)}\n          className={getUIClasses(uiLibrary, 'Input')}\n          style={{ width: '100%', ...customStyles.input }}\n        />\n      </UI.Box>\n    )\n  }\n\n  // Function to render form fields in columns\n  const renderFormFields = () => {\n    // If sections prop is provided, render grouped sections first\n    if (Array.isArray(sections) && sections.length) {\n      const allKeys = Object.keys(formData)\n      const used = new Set()\n      const sectionBlocks = sections.map((sec, idx) => {\n        const secId = sec.id || `section-${idx}`\n        const listed = Array.isArray(sec.fields) ? sec.fields : []\n        listed.forEach((k) => used.add(k))\n        // Build section content honoring columns\n        const sectionKeys = listed.filter((k) => allKeys.includes(k))\n        const content = (() => {\n          if (columns <= 1) {\n            return (\n              <UI.VStack key={secId} style={{ gap: '1rem' }}>\n                {sectionKeys.map((k) => renderFormField(k, formData[k]))}\n              </UI.VStack>\n            )\n          }\n          const fieldsPerColumn = Math.ceil(sectionKeys.length / columns)\n          const columnGroups = []\n          for (let i = 0; i < columns; i++) {\n            const startIndex = i * fieldsPerColumn\n            const endIndex = Math.min(startIndex + fieldsPerColumn, sectionKeys.length)\n            columnGroups.push(sectionKeys.slice(startIndex, endIndex))\n          }\n          const gridStyles = {\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columns}, 1fr)`,\n            gap: '2rem',\n            width: '100%',\n            ...customStyles.formGrid,\n          }\n          return (\n            <UI.Box key={secId} className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n              {columnGroups.map((group, idx) => (\n                <UI.VStack\n                  key={idx}\n                  className={getUIClasses(uiLibrary, 'VStack')}\n                  style={{ gap: '1rem', ...customStyles.formColumn }}\n                >\n                  {group.map((k) => renderFormField(k, formData[k]))}\n                </UI.VStack>\n              ))}\n            </UI.Box>\n          )\n        })()\n\n        const baselineOpen = !!(sec.defaultOpen || !sec.collapsible)\n        const open = sectionOpenIds.has(secId) ? !baselineOpen : baselineOpen\n        const toggle = () =>\n          setSectionOpenIds((prev) => {\n            const next = new Set(prev)\n            if (next.has(secId)) next.delete(secId)\n            else next.add(secId)\n            return next\n          })\n\n        return (\n          <UI.Box key={`wrap-${secId}`} style={{ marginBottom: '1.25rem' }}>\n            <UI.Box\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '0.5rem',\n              }}\n            >\n              <UI.Box style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                {sec.collapsible && (\n                  <button\n                    aria-label={`Toggle ${sec.title}`}\n                    onClick={toggle}\n                    style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n                  >\n                    <span>{open ? '▼' : '▶'}</span>\n                  </button>\n                )}\n                <UI.Heading className={getUIClasses(uiLibrary, 'Heading')} style={{ margin: 0 }}>\n                  {sec.title}\n                </UI.Heading>\n              </UI.Box>\n              {sec.description && (\n                <UI.Text className={getUIClasses(uiLibrary, 'Text')} style={{ opacity: 0.8 }}>\n                  {sec.description}\n                </UI.Text>\n              )}\n            </UI.Box>\n            {(!sec.collapsible || open) && content}\n          </UI.Box>\n        )\n      })\n\n      // Unsectioned fields\n      let otherBlock = null\n      if (includeUnsectioned) {\n        const remaining = allKeys.filter((k) => !used.has(k))\n        if (remaining.length) {\n          const secId = 'unsectioned'\n          const baselineOpen = true\n          const open = sectionOpenIds.has(secId) ? !baselineOpen : baselineOpen\n          const toggle = () =>\n            setSectionOpenIds((prev) => {\n              const next = new Set(prev)\n              if (next.has(secId)) next.delete(secId)\n              else next.add(secId)\n              return next\n            })\n          otherBlock = (\n            <UI.Box key={`wrap-${secId}`} style={{ marginBottom: '1.25rem' }}>\n              <UI.Box\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  marginBottom: '0.5rem',\n                }}\n              >\n                <UI.Box style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <button\n                    aria-label={`Toggle ${unsectionedTitle}`}\n                    onClick={toggle}\n                    style={{ border: 'none', background: 'transparent', cursor: 'pointer' }}\n                  >\n                    <span>{open ? '▼' : '▶'}</span>\n                  </button>\n                  <UI.Heading className={getUIClasses(uiLibrary, 'Heading')} style={{ margin: 0 }}>\n                    {unsectionedTitle}\n                  </UI.Heading>\n                </UI.Box>\n              </UI.Box>\n              {open &&\n                (() => {\n                  if (columns <= 1) {\n                    return (\n                      <UI.VStack style={{ gap: '1rem' }}>\n                        {remaining.map((k) => renderFormField(k, formData[k]))}\n                      </UI.VStack>\n                    )\n                  }\n                  const fieldsPerColumn = Math.ceil(remaining.length / columns)\n                  const columnGroups = []\n                  for (let i = 0; i < columns; i++) {\n                    const startIndex = i * fieldsPerColumn\n                    const endIndex = Math.min(startIndex + fieldsPerColumn, remaining.length)\n                    columnGroups.push(remaining.slice(startIndex, endIndex))\n                  }\n                  const gridStyles = {\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${columns}, 1fr)`,\n                    gap: '2rem',\n                    width: '100%',\n                    ...customStyles.formGrid,\n                  }\n                  return (\n                    <UI.Box className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n                      {columnGroups.map((group, idx) => (\n                        <UI.VStack\n                          key={idx}\n                          className={getUIClasses(uiLibrary, 'VStack')}\n                          style={{ gap: '1rem', ...customStyles.formColumn }}\n                        >\n                          {group.map((k) => renderFormField(k, formData[k]))}\n                        </UI.VStack>\n                      ))}\n                    </UI.Box>\n                  )\n                })()}\n            </UI.Box>\n          )\n        }\n      }\n\n      return (\n        <UI.VStack\n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {sectionBlocks}\n          {otherBlock}\n        </UI.VStack>\n      )\n    }\n\n    const formEntries = Object.entries(formData)\n\n    if (columns <= 1) {\n      // Single column layout (default)\n      return (\n        <UI.VStack\n          className={getUIClasses(uiLibrary, 'VStack')}\n          style={{ gap: '1rem', ...customStyles.formStack }}\n        >\n          {formEntries.map(([key, value]) => renderFormField(key, value))}\n        </UI.VStack>\n      )\n    }\n\n    // Multi-column layout\n    const fieldsPerColumn = Math.ceil(formEntries.length / columns)\n    const columnGroups = []\n\n    for (let i = 0; i < columns; i++) {\n      const startIndex = i * fieldsPerColumn\n      const endIndex = Math.min(startIndex + fieldsPerColumn, formEntries.length)\n      columnGroups.push(formEntries.slice(startIndex, endIndex))\n    }\n\n    const gridStyles = {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      gap: '2rem',\n      width: '100%',\n      ...customStyles.formGrid,\n    }\n\n    return (\n      <UI.Box className={getUIClasses(uiLibrary, 'Box')} style={gridStyles}>\n        {columnGroups.map((columnFields, columnIndex) => (\n          <UI.VStack\n            key={columnIndex}\n            className={getUIClasses(uiLibrary, 'VStack')}\n            style={{ gap: '1rem', ...customStyles.formColumn }}\n          >\n            {columnFields.map(([key, value]) => renderFormField(key, value))}\n          </UI.VStack>\n        ))}\n      </UI.Box>\n    )\n  }\n\n  return (\n    <UI.Container\n      className={getUIClasses(uiLibrary, 'Container')}\n      style={customStyles.container}\n      {...props}\n    >\n      <UI.VStack\n        className={getUIClasses(uiLibrary, 'VStack')}\n        style={{ gap: '1rem', ...customStyles.stack }}\n      >\n        \n\n        {error && (\n          <UI.Alert\n            className={getUIClasses(uiLibrary, 'Alert', 'error')}\n            style={customStyles.alert}\n          >\n            <UI.Text style={customStyles.errorText}>{error}</UI.Text>\n          </UI.Alert>\n        )}\n\n        {Object.keys(formData).length > 0 && (\n          <UI.Card\n            className={getUIClasses(uiLibrary, 'Card')}\n            style={{ width: '100%', padding: '1rem', ...customStyles.formCard }}\n          >\n            {renderFormFields()}\n          </UI.Card>\n        )}\n\n        {showControls && Object.keys(formData).length > 0 && (\n          <UI.HStack\n            className={getUIClasses(uiLibrary, 'HStack')}\n            style={{ gap: '0.5rem', marginTop: '1rem', ...customStyles.controlButtons }}\n          >\n            <UI.Button\n              onClick={handleSave}\n              className={getUIClasses(uiLibrary, 'Button', 'default')}\n              style={customStyles.saveButton}\n            >\n              {saveButtonText}\n            </UI.Button>\n            <UI.Button\n              onClick={handleCancel}\n              className={getUIClasses(uiLibrary, 'Button', 'secondary')}\n              style={customStyles.cancelButton}\n            >\n              {cancelButtonText}\n            </UI.Button>\n          </UI.HStack>\n        )}\n      </UI.VStack>\n    </UI.Container>\n  )\n}\n\nexport default Fields\n","// UI Library Adapters\n// This file provides adapters for different UI libraries\n\nexport const getUIComponents = () => {\n  // All UI libraries use the same HTML elements as base\n  // The styling is handled through classes and props\n  return {\n    Container: 'div',\n    Box: 'div',\n    Button: 'button',\n    Input: 'input',\n    Select: 'select',\n    Textarea: 'textarea',\n    Table: 'table',\n    Thead: 'thead',\n    Tbody: 'tbody',\n    Tr: 'tr',\n    Th: 'th',\n    Td: 'td',\n    Text: 'span',\n    Heading: 'h2',\n    Stack: 'div',\n    HStack: 'div',\n    VStack: 'div',\n    Card: 'div',\n    Alert: 'div',\n    Badge: 'span',\n    Grid: 'div',\n    GridItem: 'div',\n    Flex: 'div',\n    Label: 'label',\n  }\n}\n\nexport const getUIClasses = (uiLibrary = 'chakra', component, variant = 'default') => {\n  const classMap = {\n    tailwind: {\n      Container: 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n      Box: 'block',\n      Button: {\n        default:\n          'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n        secondary:\n          'inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',\n      },\n      Input: {\n        default:\n          'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n        checkbox: 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded',\n      },\n      Select:\n        'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm',\n      Textarea:\n        'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm resize-vertical',\n      Table: 'min-w-full divide-y divide-gray-200',\n      Thead: 'bg-gray-50',\n      Tbody: 'bg-white divide-y divide-gray-200',\n      Tr: 'hover:bg-gray-50',\n      Th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider',\n      Td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-900',\n      Text: 'text-gray-900',\n      Heading: 'text-2xl font-bold text-gray-900 mb-4',\n      Stack: 'space-y-4',\n      HStack: 'flex space-x-4 items-center',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'bg-white overflow-hidden shadow rounded-lg p-6',\n      Alert: {\n        error: 'bg-red-50 border border-red-200 rounded-md p-4 text-red-800',\n        success: 'bg-green-50 border border-green-200 rounded-md p-4 text-green-800',\n        warning: 'bg-yellow-50 border border-yellow-200 rounded-md p-4 text-yellow-800',\n        info: 'bg-blue-50 border border-blue-200 rounded-md p-4 text-blue-800',\n      },\n      Badge:\n        'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label: 'block text-sm font-medium text-gray-700',\n    },\n    shadcn: {\n      Container: 'container mx-auto px-4',\n      Box: 'block',\n      Button: {\n        default:\n          'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2',\n        secondary:\n          'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2',\n      },\n      Input: {\n        default:\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        checkbox:\n          'h-4 w-4 rounded border border-primary text-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      },\n      Select:\n        'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Textarea:\n        'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n      Table: 'w-full caption-bottom text-sm',\n      Thead: '[&_tr]:border-b',\n      Tbody: '[&_tr:last-child]:border-0',\n      Tr: 'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      Th: 'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      Td: 'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n      Text: 'text-sm text-muted-foreground',\n      Heading: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n      Stack: 'flex flex-col space-y-4',\n      HStack: 'flex space-x-4',\n      VStack: 'flex flex-col space-y-4',\n      Card: 'rounded-lg border bg-card text-card-foreground shadow-sm',\n      Alert: {\n        error:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n        success:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        warning:\n          'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n        info: 'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n      },\n      Badge:\n        'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      Grid: 'grid',\n      GridItem: '',\n      Flex: 'flex',\n      Label:\n        'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n    },\n  }\n\n  if (uiLibrary === 'chakra') {\n    return '' // Chakra UI uses props, not classes\n  }\n\n  const libraryClasses = classMap[uiLibrary]\n  if (!libraryClasses || !libraryClasses[component]) {\n    return ''\n  }\n\n  const componentClasses = libraryClasses[component]\n  if (typeof componentClasses === 'object') {\n    return componentClasses[variant] || componentClasses.default || ''\n  }\n\n  return componentClasses\n}\n"],"names":["flattenObject","obj","prefix","arguments","length","undefined","flattened","key","Object","prototype","hasOwnProperty","call","newKey","concat","_typeof","Array","isArray","assign","unflattenObject","flat","result","keys","split","current","i","getInputType","value","fieldConfig","_objectSpread","type","items","rows","includes","toLowerCase","startsWith","match","parseJsonSafely","jsonString","success","data","JSON","parse","error","message","formatJson","spaces","stringify","getNestedLevel","getDisplayName","pop","replace","l","toUpperCase","trim","Fields","_ref","_classNames","styles","_styleProps","_ref$renderers","renderers","uiLibrary","onSave","onCancel","onFieldChange","_ref$saveButtonText","saveButtonText","_ref$cancelButtonText","cancelButtonText","_ref$initialJson","initialJson","_ref$customStyles","customStyles","_ref$showControls","showControls","_ref$columns","columns","_ref$fieldConfig","_ref$sections","sections","_ref$includeUnsection","includeUnsectioned","_ref$unsectionedTitle","unsectionedTitle","props","_objectWithoutProperties","_excluded","_useState2","_slicedToArray","useState","jsonInput","setJsonInput","_useState4","formData","setFormData","_useState6","originalFormData","setOriginalFormData","setParsedJson","_useState0","setError","_useState10","tagInputs","setTagInputs","_useState12","Set","sectionOpenIds","setSectionOpenIds","UI","Container","Box","Button","Input","Select","Textarea","Text","Heading","VStack","HStack","Card","Alert","Label","renderKeyValueListField","displayName","fieldTypeConfig","originalIsArray","originalIsObjectMap","entries","map","_ref2","_ref3","set","forEach","r","k","add","from","commit","nextRows","handleFieldChange","nextObj","_r$key","_r$value","name","v","val","gridRow","display","gridTemplateColumns","repeat","gap","alignItems","padding","_jsxs","className","getUIClasses","style","marginBottom","fieldContainer","children","_jsx","fontWeight","fieldLabel","showHeader","fontSize","opacity","c","row","idx","_row$c","placeholder","onChange","e","rowIdx","colKey","target","next","_defineProperty","input","onClick","filter","_","removeRow","template","reduce","acc","_toConsumableArray","alignSelf","parseJson","useCallback","useEffect","newFormData","nestedData","renderFormField","renderCheckboxField","renderSelectField","renderMultiSelectField","renderTextareaField","renderSpecialInputField","renderNumberField","renderSliderField","_renderTagsField","renderArrayField","renderObjectField","renderTextInputField","_fieldTypeConfig$min","_fieldTypeConfig$max","_fieldTypeConfig$step","_fieldTypeConfig$defa","min","max","step","label","Number","width","minWidth","textAlign","cursor","checked","checkbox","_fieldTypeConfig$opti","select","options","option","_fieldTypeConfig$opti2","selectedValues","flexDirection","newValues","text","minHeight","textarea","parseFloat","every","tags","newTag","addTag","tag","t","prev","removeTag","pillStyle","borderRadius","background","color","border","pillCloseStyle","lineHeight","flexWrap","onKeyDown","preventDefault","flex","parsed","_unused","fontFamily","_unused2","container","stack","alert","errorText","formCard","allKeys","used","sectionBlocks","sec","secId","id","listed","fields","sectionKeys","content","fieldsPerColumn","Math","ceil","columnGroups","startIndex","endIndex","push","slice","gridStyles","formGrid","group","formColumn","baselineOpen","defaultOpen","collapsible","open","has","justifyContent","title","margin","description","otherBlock","remaining","formStack","formEntries","_ref4","_ref5","columnFields","columnIndex","_ref6","_ref7","renderFormFields","marginTop","controlButtons","saveButton","cancelButton","getUIComponents","Table","Thead","Tbody","Tr","Th","Td","Stack","Badge","Grid","GridItem","Flex","component","variant","libraryClasses","tailwind","default","secondary","warning","info","shadcn","componentClasses"],"mappings":"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"}